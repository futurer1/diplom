#VRML V2.0 utf8

NavigationInfo {
	#type ["NONE"]
	headlight TRUE
}
DEF mainview_cam Viewpoint {
	description	"mainview"
	position 0 -22 5
	orientation	1 0 0 1.2
}
Background {
	groundColor	1 1 1
	skyColor 1 1 1
}
PROTO gyroskop [
	eventIn SFInt32 start_demo		#не использ.
	eventIn SFTime restore_object	#не использ.
	eventIn SFTime reset_all_demos	#не использ.

	eventIn	SFRotation int_ramka_corner_proto	#вращение внутр. рамки
	eventIn	SFRotation ext_ramka_corner_proto	#вращение внешней рамки
	eventIn	SFBool clear_int_moment				#очистить от момента внутреннюю рамку
	eventIn	SFBool clear_ext_moment				#очистить от момента внешнюю рамку
	eventIn	SFBool moment_incr					#увеличить выбранный момент на 1ну ступень
	eventIn	SFBool moment_decr					#уменьшить выбранный момент на 1ну ступень

	eventIn	SFString num_int_moment_select		#какой из моментов по внутренней рамке выбрать и какой величины (идЄт из JS)
												#строка вида первое число - номер момента (от 1 до 4), второе число - величина момента
	eventIn	SFString num_ext_moment_select		#какой из моментов по внешней рамке выбрать и какой величины (идЄт из JS)
	eventIn	MFString js_params_rotation_gyro	#параметры вращени€ рамок гироскопа и инициализаци€ его вращени€
	eventIn SFBool stop_rotation		#останавливает вращение гироскопа

	eventOut SFBool	show_moments_panel			#включает кнопки с + и - моментов
	eventOut SFBool	hide_moments_panel			#скрывает кнопки с + и - моментов
	eventOut SFBool hide_navigation_panel		#скрывает кнопки навигации
	eventOut SFBool show_navigation_panel		#включает кнопки навигации
	eventOut SFString value_int_moment	#во внешний скрипт значение момента по внутренней рамке (идЄт в JS)
	eventOut SFString value_ext_moment	#во внешний скрипт значение момента по внутренней рамке (идЄт в JS)
	eventOut SFRotation	value_int_rotation	#значение поворота внутренней рамки
	eventOut SFRotation	value_ext_rotation	#значение поворота внешней рамки
]
{
	Group	{
		children [
			Transform	{
				children [
					DEF	orient_interpol_rotor OrientationInterpolator {
						key	[0, 0.5, 1]
						keyValue [
							1 0 0 0,
							1 0 0 -3.1415926535
							1 0 0 -6.2831
						]
					}
					DEF	orient_interpol_arr_rotor OrientationInterpolator {
						key	[0, 0.5, 1]
						keyValue [
							1 0 0 0,
							1 0 0 -3.1415926535
							1 0 0 -6.2831
						]
					}
					DEF	orient_interpol_rotor1 OrientationInterpolator {
						key	[0, 0.5, 1]
						keyValue [
							0 1 0 0,
							0 1 0 3.1415926535
							0 1 0 6.2831
						]
					}
					DEF	orient_interpol_int_ramka OrientationInterpolator {
						key	[0, 0.5, 1]
						keyValue [
							0 1 0 0,
							0 1 0 3.1415926535
							0 1 0 6.2831
						]
					}
					DEF	orient_interpol_ext_ramka OrientationInterpolator {
						key	[0, 0.5, 1]
						keyValue [
							0 1 0 0,
							0 1 0 3.1415926535
							0 1 0 6.2831
						]
					}
					DEF	timesens_for_rotor TimeSensor {
						enabled	FALSE
						loop TRUE
						cycleInterval .1
					}
					DEF	timesens_for_arr_rotor TimeSensor {
						enabled	FALSE
						loop TRUE
						cycleInterval 4
					}
					DEF	timesens_for_int_ramka TimeSensor {
						enabled	FALSE
						loop TRUE
					}
					DEF	timesens_for_ext_ramka TimeSensor {
						enabled	FALSE
						loop TRUE
					}
					Transform {
						rotation 1 0 0 1.570796
						children [
							#DEF	rol_sens_ext_ramka CylinderSensor {
							#	autoOffset TRUE
							#}
							DEF	ext_ramka Transform	{
								children [
									Transform {
									rotation 1 0 0 -1.570796
										children [			
											DEF	int_ramka Transform	{
												children [
													#DEF	rol_sens_int_ramka CylinderSensor {
													#	autoOffset TRUE
													#}
													Transform {
														translation	-5.25 -5.25 0
														center 5.25 5.25 0
														children [
															Shape {
																appearance Appearance {
            														material Material {
            														  diffuseColor .88 .32 .2
            														  ambientIntensity .113
            														  specularColor .82 .28 .28
            														  shininess .8
            														}
        														}
																geometry IndexedFaceSet {
            														ccw FALSE
            														solid TRUE
																	creaseAngle	1.6
            														coord Coordinate {
																		point [
																			#нижн€€ лева€ четверть
																			5.250000 0.000000 -0.75,
																			1.000000 0.000000 -0.75,
																			0.648374 0.063859 -0.75,
																			0.546554 0.108716 -0.75,
																			0.480249 0.145682 -0.75,
																			0.430220 0.178203 -0.75,
																			0.389340 0.208107 -0.75,
																			0.354084 0.236591 -0.75,
																			0.322390 0.264579 -0.75,
																			0.292893 0.292893 -0.75,
																			0.264579 0.322390 -0.75,
																			0.236591 0.354084 -0.75,
																			0.208107 0.389340 -0.75,
																			0.178203 0.430220 -0.75,
																			0.145682 0.480249 -0.75,
																			0.108716 0.546554 -0.75,
																			0.063859 0.648374 -0.75,
																			0.000000 1.000000 -0.75,
																			0.000000 5.250000 -0.75,
									
																			#верхн€€ лева€ четверть
																			0.000000 5.250000 -0.75,
																			0.000000 9.500000 -0.75,
																			0.063859 9.851626 -0.75,
																			0.108716 9.953446 -0.75,
																			0.145682 10.019751 -0.75,
																			0.178203 10.069780 -0.75,
																			0.208107 10.110660 -0.75,
																			0.236591 10.145916 -0.75,
																			0.264579 10.177610 -0.75,
																			0.292893 10.207107 -0.75,
																			0.322390 10.235421 -0.75,
																			0.354084 10.263409 -0.75,
																			0.389340 10.291893 -0.75,
																			0.430220 10.321797 -0.75,
																			0.480249 10.354318 -0.75,
																			0.546554 10.391284 -0.75,
																			0.648374 10.436141 -0.75,
																			1.000000 10.500000 -0.75,
																			5.250000 10.500000 -0.75,
									
																			#верхн€€ права€ четверть
																			5.250000 10.500000 -0.75,
																			9.500000 10.500000 -0.75,
																			9.851626 10.436141 -0.75,
																			9.953446 10.391284 -0.75,
																			10.019751 10.354318	-0.75,
																			10.069780 10.321797	-0.75,
																			10.110660 10.291893	-0.75,
																			10.145916 10.263409	-0.75,
																			10.177610 10.235421	-0.75,
																			10.207107 10.207107	-0.75,
																			10.235421 10.177610	-0.75,
																			10.263409 10.145916	-0.75,
																			10.291893 10.110660	-0.75,
																			10.321797 10.069780	-0.75,
																			10.354318 10.019751	-0.75,
																			10.391284 9.953446 -0.75,
																			10.463946 9.766099 -0.75,
																			10.500000 9.500000 -0.75,
																			10.500000 5.250000 -0.75,
									
																			#права€ нижн€€ черверть
																			10.500000 5.250000 -0.75,
																			10.500000 1.000000 -0.75,
																			10.436141 0.648374 -0.75,
																			10.391284 0.546554 -0.75,
																			10.354318 0.480249 -0.75,
																			10.321797 0.430220 -0.75,
																			10.291893 0.389340 -0.75,
																			10.263409 0.354084 -0.75,
																			10.235421 0.322390 -0.75,
																			10.207107 0.292893 -0.75,
																			10.177610 0.264579 -0.75,
																			10.145916 0.236591 -0.75,
																			10.110660 0.208107 -0.75,
																			10.069780 0.178203 -0.75,
																			10.019751 0.145682 -0.75,
																			9.953446 0.108716 -0.75,
																			9.851626 0.063859 -0.75,
																			9.500000 0.000000 -0.75,
																			5.250000 0.000000 -0.75,
									
																			#нижн€€ лева€ четверть
																			5.250000 0.000000 0.75,
																			1.000000 0.000000 0.75,
																			0.648374 0.063859 0.75,
																			0.546554 0.108716 0.75,
																			0.480249 0.145682 0.75,
																			0.430220 0.178203 0.75,
																			0.389340 0.208107 0.75,
																			0.354084 0.236591 0.75,
																			0.322390 0.264579 0.75,
																			0.292893 0.292893 0.75,
																			0.264579 0.322390 0.75,
																			0.236591 0.354084 0.75,
																			0.208107 0.389340 0.75,
																			0.178203 0.430220 0.75,
																			0.145682 0.480249 0.75,
																			0.108716 0.546554 0.75,
																			0.063859 0.648374 0.75,
																			0.000000 1.000000 0.75,
																			0.000000 5.250000 0.75,
									
																			#верхн€€ лева€ четверть
																			0.000000 5.250000 0.75,
																			0.000000 9.500000 0.75,
																			0.063859 9.851626 0.75,
																			0.108716 9.953446 0.75,
																			0.145682 10.019751 0.75,
																			0.178203 10.069780 0.75,
																			0.208107 10.110660 0.75,
																			0.236591 10.145916 0.75,
																			0.264579 10.177610 0.75,
																			0.292893 10.207107 0.75,
																			0.322390 10.235421 0.75,
																			0.354084 10.263409 0.75,
																			0.389340 10.291893 0.75,
																			0.430220 10.321797 0.75,
																			0.480249 10.354318 0.75,
																			0.546554 10.391284 0.75,
																			0.648374 10.436141 0.75,
																			1.000000 10.500000 0.75,
																			5.250000 10.500000 0.75,
									
																			#верхн€€ права€ четверть
																			5.250000 10.500000 0.75,
																			9.500000 10.500000 0.75,
																			9.851626 10.436141 0.75,
																			9.953446 10.391284 0.75,
																			10.019751 10.354318	0.75,
																			10.069780 10.321797	0.75,
																			10.110660 10.291893	0.75,
																			10.145916 10.263409	0.75,
																			10.177610 10.235421	0.75,
																			10.207107 10.207107	0.75,
																			10.235421 10.177610	0.75,
																			10.263409 10.145916	0.75,
																			10.291893 10.110660	0.75,
																			10.321797 10.069780	0.75,
																			10.354318 10.019751	0.75,
																			10.391284 9.953446 0.75,
																			10.463946 9.766099 0.75,
																			10.500000 9.500000 0.75,
																			10.500000 5.250000 0.75,
									
																			#права€ нижн€€ черверть
																			10.500000 5.250000 0.75,
																			10.500000 1.000000 0.75,
																			10.436141 0.648374 0.75,
																			10.391284 0.546554 0.75,
																			10.354318 0.480249 0.75,
																			10.321797 0.430220 0.75,
																			10.291893 0.389340 0.75,
																			10.263409 0.354084 0.75,
																			10.235421 0.322390 0.75,
																			10.207107 0.292893 0.75,
																			10.177610 0.264579 0.75,
																			10.145916 0.236591 0.75,
																			10.110660 0.208107 0.75,
																			10.069780 0.178203 0.75,
																			10.019751 0.145682 0.75,
																			9.953446 0.108716 0.75,
																			9.851626 0.063859 0.75,
																			9.500000 0.000000 0.75,
																			5.250000 0.000000 0.75,


																			#внутренн€€ поверхность
																			#нижн€€ лева€ четверть
																			5.250000 0.250000 -0.75,
																			1.250000 0.250000 -0.75,
																			0.962911 0.292096 -0.75,
																			0.828495 0.343174 -0.75,
																			0.734951 0.392839 -0.75,
																			0.661144 0.441762 -0.75,
																			0.598604 0.491262 -0.75,
																			0.542893 0.542893 -0.75,
																			0.491262 0.598604 -0.75,
																			0.441762 0.661144 -0.75,
																			0.392839 0.734951 -0.75,
																			0.343174 0.828495 -0.75,
																			0.292096 0.962911 -0.75,
																			0.250000 1.250000 -0.75,
																			0.250000 5.250000 -0.75,

																			#верхн€€ лева€ четверть
																			0.250000 5.250000 -0.75,
																			0.250000 9.250000 -0.75,
																			0.292096 9.537089 -0.75,
																			0.343174 9.671505 -0.75,
																			0.392839 9.765049 -0.75,
																			0.441762 9.838856 -0.75,
																			0.491262 9.901396 -0.75,
																			0.542893 9.957107 -0.75,
																			0.598604 10.008738 -0.75,
																			0.661144 10.058238 -0.75,
																			0.734951 10.107161 -0.75,
																			0.828495 10.156826 -0.75,
																			0.962911 10.207904 -0.75,
																			1.250000 10.250000 -0.75,
																			5.250000 10.250000 -0.75,


																			#верхн€€ права€ четверть
																			5.250000 10.250000 -0.75,
																			9.250000 10.250000 -0.75,
																			9.537089 10.207904 -0.75,
																			9.671505 10.156826 -0.75,
																			9.765049 10.107161 -0.75,
																			9.838856 10.058238 -0.75,
																			9.901396 10.008738 -0.75,
																			9.957107 9.957107 -0.75,
																			10.008738 9.901396 -0.75,
																			10.058238 9.838856 -0.75,
																			10.107161 9.765049 -0.75,
																			10.156826 9.671505 -0.75,
																			10.207904 9.537089 -0.75,
																			10.250000 9.250000 -0.75,
																			10.250000 5.250000 -0.75,

																			#права€ нижн€€ черверть
																			10.250000 5.250000 -0.75,
																			10.250000 1.250000 -0.75,
																			10.207904 0.962911 -0.75,
																			10.156826 0.828495 -0.75,
																			10.107161 0.734951 -0.75,
																			10.058238 0.661144 -0.75,
																			10.008738 0.598604 -0.75,
																			9.957107 0.542893 -0.75,
																			9.901396 0.491262 -0.75,
																			9.838856 0.441762 -0.75,
																			9.765049 0.392839 -0.75,
																			9.671505 0.343174 -0.75,
																			9.537089 0.292096 -0.75,
																			9.250000 0.250000 -0.75,
																			5.250000 0.250000 -0.75,



																			#нижн€€ лева€ четверть
																			5.250000 0.250000 0.75,
																			1.250000 0.250000 0.75,
																			0.962911 0.292096 0.75,
																			0.828495 0.343174 0.75,
																			0.734951 0.392839 0.75,
																			0.661144 0.441762 0.75,
																			0.598604 0.491262 0.75,
																			0.542893 0.542893 0.75,
																			0.491262 0.598604 0.75,
																			0.441762 0.661144 0.75,
																			0.392839 0.734951 0.75,
																			0.343174 0.828495 0.75,
																			0.292096 0.962911 0.75,
																			0.250000 1.250000 0.75,
																			0.250000 5.250000 0.75,

																			#верхн€€ лева€ четверть
																			0.250000 5.250000 0.75,
																			0.250000 9.250000 0.75,
																			0.292096 9.537089 0.75,
																			0.343174 9.671505 0.75,
																			0.392839 9.765049 0.75,
																			0.441762 9.838856 0.75,
																			0.491262 9.901396 0.75,
																			0.542893 9.957107 0.75,
																			0.598604 10.008738 0.75,
																			0.661144 10.058238 0.75,
																			0.734951 10.107161 0.75,
																			0.828495 10.156826 0.75,
																			0.962911 10.207904 0.75,
																			1.250000 10.250000 0.75,
																			5.250000 10.250000 0.75,


																			#верхн€€ права€ четверть
																			5.250000 10.250000 0.75,
																			9.250000 10.250000 0.75,
																			9.537089 10.207904 0.75,
																			9.671505 10.156826 0.75,
																			9.765049 10.107161 0.75,
																			9.838856 10.058238 0.75,
																			9.901396 10.008738 0.75,
																			9.957107 9.957107 0.75,
																			10.008738 9.901396 0.75,
																			10.058238 9.838856 0.75,
																			10.107161 9.765049 0.75,
																			10.156826 9.671505 0.75,
																			10.207904 9.537089 0.75,
																			10.250000 9.250000 0.75,
																			10.250000 5.250000 0.75,

																			#права€ нижн€€ черверть
																			10.250000 5.250000 0.75,
																			10.250000 1.250000 0.75,
																			10.207904 0.962911 0.75,
																			10.156826 0.828495 0.75,
																			10.107161 0.734951 0.75,
																			10.058238 0.661144 0.75,
																			10.008738 0.598604 0.75,
																			9.957107 0.542893 0.75,
																			9.901396 0.491262 0.75,
																			9.838856 0.441762 0.75,
																			9.765049 0.392839 0.75,
																			9.671505 0.343174 0.75,
																			9.537089 0.292096 0.75,
																			9.250000 0.250000 0.75,
																			5.250000 0.250000 0.75
																		]
            														}
            														coordIndex [
																		 #внешн€€ плоскость рамки
																		 0, 1, 77, 76 -1,
																		 1,	2, 78, 77 -1,
																		 2,	3, 79, 78 -1,
																		 3,	4, 80, 79 -1,
																		 4,	5, 81, 80 -1,
																		 5,	6, 82, 81 -1,
																		 6,	7, 83, 82 -1,
																		 7,	8, 84, 83 -1,
																		 8,	9, 85, 84 -1,
																		 9,	10,	86,	85 -1,
																		 10, 11, 87, 86 -1,
																		 11, 12, 88, 87 -1,
																		 12, 13, 89, 88 -1,
																		 13, 14, 90, 89 -1,
																		 14, 15, 91, 90 -1,
																		 15, 16, 92, 91 -1,
																		 16, 17, 93, 92 -1,
																		 17, 18, 94, 93 -1,
																		 18, 19, 95, 94 -1,
																		 19, 20, 96, 95 -1,
																		 20, 21, 97, 96 -1,
																		 21, 22, 98, 97 -1,
																		 22, 23, 99, 98 -1,
																		 23, 24, 100, 99 -1,
																		 24, 25, 101, 100 -1,
																		 25, 26, 102, 101 -1,
																		 26, 27, 103, 102 -1,
																		 27, 28, 104, 103 -1,
																		 28, 29, 105, 104 -1,
																		 29, 30, 106, 105 -1,
																		 30, 31, 107, 106 -1,
																		 31, 32, 108, 107 -1,
																		 32, 33, 109, 108 -1,
																		 33, 34, 110, 109 -1,
																		 34, 35, 111, 110 -1,
																		 35, 36, 112, 111 -1,
																		 36, 37, 113, 112 -1,
																		 37, 38, 114, 113 -1,
																		 38, 39, 115, 114 -1,
																		 39, 40, 116, 115 -1,
																		 40, 41, 117, 116 -1,
																		 41, 42, 118, 117 -1,
																		 42, 43, 119, 118 -1,
																		 43, 44, 120, 119 -1,
																		 44, 45, 121, 120 -1,
																		 45, 46, 122, 121 -1,
																		 46, 47, 123, 122 -1,
																		 47, 48, 124, 123 -1,
																		 48, 49, 125, 124 -1,
																		 49, 50, 126, 125 -1,
																		 50, 51, 127, 126 -1,
																		 51, 52, 128, 127 -1,
																		 52, 53, 129, 128 -1,
																		 53, 54, 130, 129 -1,
																		 54, 55, 131, 130 -1,
																		 55, 56, 132, 131 -1,
																		 56, 57, 133, 132 -1,
																		 57, 58, 134, 133 -1,
																		 58, 59, 135, 134 -1,
																		 59, 60, 136, 135 -1,
																		 60, 61, 137, 136 -1,
																		 61, 62, 138, 137 -1,
																		 62, 63, 139, 138 -1,
																		 63, 64, 140, 139 -1,
																		 64, 65, 141, 140 -1,
																		 65, 66, 142, 141 -1,
																		 66, 67, 143, 142 -1,
																		 67, 68, 144, 143 -1,
																		 68, 69, 145, 144 -1,
																		 69, 70, 146, 145 -1,
																		 70, 71, 147, 146 -1,
																		 71, 72, 148, 147 -1,
																		 72, 73, 149, 148 -1,
																		 73, 74, 150, 149 -1,
																		 74, 75, 151, 150 -1,

																		 #внутренн€€ плоскость рамки
																		 153, 152, 212, 213 -1,
																		 154, 153, 213,	214 -1,
																		 155, 154, 214,	215 -1,
																		 156, 155, 215,	216 -1,
																		 157, 156, 216,	217 -1,
																		 158, 157, 217,	218 -1,
																		 159, 158, 218,	219 -1,
																		 160, 159, 219,	220 -1,
																		 161, 160, 220,	221 -1,
																		 162, 161, 221,	222 -1,
																		 163, 162, 222,	223 -1,
																		 164, 163, 223,	224 -1,
																		 165, 164, 224,	225 -1,
																		 166, 165, 225,	226 -1,
																		 167, 166, 226,	227 -1,
																		 168, 167, 227,	228 -1,
																		 169, 168, 228,	229 -1,
																		 170, 169, 229,	230 -1,
																		 171, 170, 230,	231 -1,
																		 172, 171, 231,	232 -1,
																		 173, 172, 232,	233 -1,
																		 174, 173, 233,	234 -1,
																		 175, 174, 234,	235 -1,
																		 176, 175, 235,	236 -1,
																		 177, 176, 236,	237 -1,
																		 178, 177, 237,	238 -1,
																		 179, 178, 238,	239 -1,
																		 180, 179, 239,	240 -1,
																		 181, 180, 240,	241 -1,
																		 182, 181, 241,	242 -1,
																		 183, 182, 242,	243 -1,
																		 184, 183, 243,	244 -1,
																		 185, 184, 244,	245 -1,
																		 186, 185, 245,	246 -1,
																		 187, 186, 246,	247 -1,
																		 188, 187, 247,	248 -1,
																		 189, 188, 248,	249 -1,
																		 190, 189, 249,	250 -1,
																		 191, 190, 250,	251 -1,
																		 192, 191, 251,	252 -1,
																		 193, 192, 252,	253 -1,
																		 194, 193, 253,	254 -1,
																		 195, 194, 254,	255 -1,
																		 196, 195, 255,	256 -1,
																		 197, 196, 256,	257 -1,
																		 198, 197, 257,	258 -1,
																		 199, 198, 258,	259 -1,
																		 200, 199, 259,	260 -1,
																		 201, 200, 260,	261 -1,
																		 202, 201, 261,	262 -1,
																		 203, 202, 262,	263 -1,
																		 204, 203, 263,	264 -1,
																		 205, 204, 264,	265 -1,
																		 206, 205, 265,	266 -1,
																		 207, 206, 266,	267 -1,
																		 208, 207, 267,	268 -1,
																		 209, 208, 268,	269 -1,
																		 210, 209, 269,	270 -1,
																		 211, 210, 270,	271 -1,

																		 #реализована отдельными Shape с TouchSensor-ами
																		 #211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198,
																		 #197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184,
																		 #183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170,
																		 #169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156,
																		 #155, 154, 153, 152, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63,
																		 #62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45,
																		 #44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27,
																		 #26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9,
																		 #8, 7, 6, 5, 4, 3, 2, 1, 0 -1,

																		 #реализована отдельными Shape с TouchSensor-ами
																		 #76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92,
																		 #93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107,
																		 #108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
									    								 #122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
																		 #136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
																		 #150, 151, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
																		 #224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
																		 #238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
																		 #252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
																		 #266, 267, 268, 269, 270, 271 -1
																	]
            													}
															}
															Group {
																children [
																	DEF switch_int_ramka1_arrow Switch {
																		choice	[
																			Group {
																				children [
																					Transform {
																						rotation 1 0 0 1.570796
																						translation	0.15 5.25 -1.1 
																						children [
																							DEF	touchsens_int_ramka1_arrow TouchSensor {
																							}
																							DEF shape_intarr1 Shape {
																								appearance Appearance {
																									material Material {
																										diffuseColor .16 .3 .3
																										specularColor .49 .49 .49
																										emissiveColor .16 .3 .3
																										ambientIntensity 0
																										shininess .1
																									}

																								}
																								geometry Cone {
																									bottomRadius 0.3
																									height 0.75
																								}
																							}
																							Transform {
																								translation	0 -1.875 0
																								children [
																									DEF shape_intcyl1 Shape {
																										appearance Appearance {
																											material Material {
																												diffuseColor .16 .3 .3
																												specularColor .49 .49 .49
																												emissiveColor .16 .3 .3
																												ambientIntensity 0
																												shininess .1
																											}

																										}
																										geometry DEF extrusion_int_ramka1_arrow Extrusion {
																											crossSection [
																												0.000000 -0.150000,
																												-0.057403 -0.138582,
																												-0.106066 -0.106066,
																												-0.138582 -0.057403,
																												-0.150000 0.000000,
																												-0.138582 0.057403,
																												-0.106066 0.106066,
																												-0.057403 0.138582,
																												0.000000 0.150000,
																												0.057403 0.138582,
																												0.106066 0.106066,
																												0.138582 0.057403,
																												0.150000 0.000000,
																												0.138582 -0.057403,
																												0.106066 -0.106066,
																												0.057403 -0.138582,
																												0.000000 -0.150000
																											]
																											spine [
																												0 1.5 0, 0 -1.5 0
																											]
																											creaseAngle	1.6
																										}																										
																									}
																								]
																							}
																						]
																					}
																				]
																			}
																		]
																		whichChoice -1
																	}
																	DEF switch_int_ramka2_arrow Switch {
																		choice	[
																			Group {
																				children [
																					Transform {
																						rotation 1 0 0 1.570796
																						translation	10.375 5.25 -1.1 
																						children [
																							DEF	touchsens_int_ramka2_arrow TouchSensor {
																							}
																							DEF shape_intarr2 Shape {
																								appearance Appearance {
																									material Material {
																										diffuseColor .16 .3 .3
																										specularColor .49 .49 .49
																										emissiveColor .16 .3 .3
																										ambientIntensity 0
																										shininess .1
																									}

																								}
																								geometry Cone {
																									bottomRadius 0.3
																									height 0.75
																								}
																							}
																							Transform {
																								translation	0 -1.875 0
																								children [
																									DEF shape_intcyl2 Shape {
																										appearance Appearance {
																											material Material {
																												diffuseColor .16 .3 .3
																												specularColor .49 .49 .49
																												emissiveColor .16 .3 .3
																												ambientIntensity 0
																												shininess .1
																											}

																										}
																										geometry DEF extrusion_int_ramka2_arrow Extrusion {
																											crossSection [
																												0.000000 -0.150000,
																												-0.057403 -0.138582,
																												-0.106066 -0.106066,
																												-0.138582 -0.057403,
																												-0.150000 0.000000,
																												-0.138582 0.057403,
																												-0.106066 0.106066,
																												-0.057403 0.138582,
																												0.000000 0.150000,
																												0.057403 0.138582,
																												0.106066 0.106066,
																												0.138582 0.057403,
																												0.150000 0.000000,
																												0.138582 -0.057403,
																												0.106066 -0.106066,
																												0.057403 -0.138582,
																												0.000000 -0.150000
																											]
																											spine [
																												0 1.5 0, 0 -1.5 0
																											]
																											creaseAngle	1.6
																										}
																									}
																								]
																							}
																						]
																					}
																				]
																			}
																		]
																		whichChoice -1
																	}
																	DEF switch_int_ramka3_arrow Switch {
																		choice	[
																			Group {
																				children [
																					Transform {
																						rotation 1 0 0 -1.570796
																						translation	0.15 5.25 1.1 
																						children [
																							DEF	touchsens_int_ramka3_arrow TouchSensor {
																							}
																							DEF shape_intarr3 Shape {
																								appearance Appearance {
																									material Material {
																										diffuseColor .16 .3 .3
																										specularColor .49 .49 .49
																										emissiveColor .16 .3 .3
																										ambientIntensity 0
																										shininess .1
																									}

																								}
																								geometry Cone {
																									bottomRadius 0.3
																									height 0.75
																								}
																							}
																							Transform {
																								translation	0 -1.875 0
																								children [
																									DEF shape_intcyl3 Shape {
																										appearance Appearance {
																											material Material {
																												diffuseColor .16 .3 .3
																												specularColor .49 .49 .49
																												emissiveColor .16 .3 .3
																												ambientIntensity 0
																												shininess .1
																											}

																										}
																										geometry DEF extrusion_int_ramka3_arrow Extrusion {
																											crossSection [
																												0.000000 -0.150000,
																												-0.057403 -0.138582,
																												-0.106066 -0.106066,
																												-0.138582 -0.057403,
																												-0.150000 0.000000,
																												-0.138582 0.057403,
																												-0.106066 0.106066,
																												-0.057403 0.138582,
																												0.000000 0.150000,
																												0.057403 0.138582,
																												0.106066 0.106066,
																												0.138582 0.057403,
																												0.150000 0.000000,
																												0.138582 -0.057403,
																												0.106066 -0.106066,
																												0.057403 -0.138582,
																												0.000000 -0.150000
																											]
																											spine [
																												0 1.5 0, 0 -1.5 0
																											]
																											creaseAngle	1.6
																										}
																									}
																								]
																							}
																						]
																					}
																				]
																			}
																		]
																		whichChoice -1
																	}
																	DEF switch_int_ramka4_arrow Switch {
																		choice	[
																			Group {
																				children [
																					Transform {
																						rotation 1 0 0 -1.570796
																						translation	10.375 5.25 1.1 
																						children [
																							DEF	touchsens_int_ramka4_arrow TouchSensor {
																							}
																							DEF shape_intarr4 Shape {
																								appearance Appearance {
																									material Material {
																										diffuseColor .16 .3 .3
																										specularColor .49 .49 .49
																										emissiveColor .16 .3 .3
																										ambientIntensity 0
																										shininess .1
																									}

																								}
																								geometry Cone {
																									bottomRadius 0.3
																									height 0.75
																								}
																							}
																							Transform {
																								translation	0 -1.875 0
																								children [
																									DEF shape_intcyl4 Shape {
																										appearance Appearance {
																											material Material {
																												diffuseColor .16 .3 .3
																												specularColor .49 .49 .49
																												emissiveColor .16 .3 .3
																												ambientIntensity 0
																												shininess .1
																											}

																										}
																										geometry DEF extrusion_int_ramka4_arrow Extrusion {
																											crossSection [
																												0.000000 -0.150000,
																												-0.057403 -0.138582,
																												-0.106066 -0.106066,
																												-0.138582 -0.057403,
																												-0.150000 0.000000,
																												-0.138582 0.057403,
																												-0.106066 0.106066,
																												-0.057403 0.138582,
																												0.000000 0.150000,
																												0.057403 0.138582,
																												0.106066 0.106066,
																												0.138582 0.057403,
																												0.150000 0.000000,
																												0.138582 -0.057403,
																												0.106066 -0.106066,
																												0.057403 -0.138582,
																												0.000000 -0.150000
																											]
																											spine [
																												0 1.5 0, 0 -1.5 0
																											]
																											creaseAngle	1.6
																										}
																									}
																								]
																							}
																						]
																					}
																				]
																			}
																		]
																		whichChoice -1																		
																	}
																]
															}
															Group {
																children [
																	DEF	touchsens_int_ramka1 TouchSensor {
																	}
																	DEF shape_int_ramka1 Shape {	#приложение вектора момента на внутреннюю рамку
																			#отрицательна€ сторона координат
																		appearance Appearance {
            																material Material {
            																  diffuseColor .88 .32 .2
            																  ambientIntensity .113
            																  specularColor .82 .28 .28
            																  shininess .8
            																}
        																}
																		geometry IndexedFaceSet {
            																ccw TRUE
            																solid TRUE
																			creaseAngle	1.6
            																coord Coordinate {
																				point [
																					#нижн€€ лева€ четверть
																					5.250000 0.000000 -0.75,
																					1.000000 0.000000 -0.75,
																					0.648374 0.063859 -0.75,
																					0.546554 0.108716 -0.75,
																					0.480249 0.145682 -0.75,
																					0.430220 0.178203 -0.75,
																					0.389340 0.208107 -0.75,
																					0.354084 0.236591 -0.75,
																					0.322390 0.264579 -0.75,
																					0.292893 0.292893 -0.75,
																					0.264579 0.322390 -0.75,
																					0.236591 0.354084 -0.75,
																					0.208107 0.389340 -0.75,
																					0.178203 0.430220 -0.75,
																					0.145682 0.480249 -0.75,
																					0.108716 0.546554 -0.75,
																					0.063859 0.648374 -0.75,
																					0.000000 1.000000 -0.75,
																					0.000000 5.250000 -0.75,

																					#верхн€€ лева€ четверть
																					0.000000 5.250000 -0.75,
																					0.000000 9.500000 -0.75,
																					0.063859 9.851626 -0.75,
																					0.108716 9.953446 -0.75,
																					0.145682 10.019751 -0.75,
																					0.178203 10.069780 -0.75,
																					0.208107 10.110660 -0.75,
																					0.236591 10.145916 -0.75,
																					0.264579 10.177610 -0.75,
																					0.292893 10.207107 -0.75,
																					0.322390 10.235421 -0.75,
																					0.354084 10.263409 -0.75,
																					0.389340 10.291893 -0.75,
																					0.430220 10.321797 -0.75,
																					0.480249 10.354318 -0.75,
																					0.546554 10.391284 -0.75,
																					0.648374 10.436141 -0.75,
																					1.000000 10.500000 -0.75,
																					5.250000 10.500000 -0.75,
																
																					#нижн€€ лева€ четверть
																					5.250000 0.250000 -0.75,
																					1.250000 0.250000 -0.75,
																					0.962911 0.292096 -0.75,
																					0.828495 0.343174 -0.75,
																					0.734951 0.392839 -0.75,
																					0.661144 0.441762 -0.75,
																					0.598604 0.491262 -0.75,
																					0.542893 0.542893 -0.75,
																					0.491262 0.598604 -0.75,
																					0.441762 0.661144 -0.75,
																					0.392839 0.734951 -0.75,
																					0.343174 0.828495 -0.75,
																					0.292096 0.962911 -0.75,
																					0.250000 1.250000 -0.75,
																					0.250000 5.250000 -0.75,

																					#верхн€€ лева€ четверть
																					0.250000 5.250000 -0.75,
																					0.250000 9.250000 -0.75,
																					0.292096 9.537089 -0.75,
																					0.343174 9.671505 -0.75,
																					0.392839 9.765049 -0.75,
																					0.441762 9.838856 -0.75,
																					0.491262 9.901396 -0.75,
																					0.542893 9.957107 -0.75,
																					0.598604 10.008738 -0.75,
																					0.661144 10.058238 -0.75,
																					0.734951 10.107161 -0.75,
																					0.828495 10.156826 -0.75,
																					0.962911 10.207904 -0.75,
																					1.250000 10.250000 -0.75,
																					5.250000 10.250000 -0.75	
																				]
            																}
            																coordIndex [
																				 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
																				 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37
																				 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50
																				 49 48 47 46 45 44 43 42 41 40 39 38 -1
																			]
            															}
																	}
																]
															}
															Group {
																children [
																	DEF	touchsens_int_ramka2 TouchSensor {
																	}
																	DEF shape_int_ramka2 Shape {	#приложение вектора момента на внутреннюю рамку
																			#отрицательна€ сторона координат
																		appearance Appearance {
            																material Material {
            																  diffuseColor .88 .32 .2
            																  ambientIntensity .113
            																  specularColor .82 .28 .28
            																  shininess .8
            																}
        																}
																		geometry IndexedFaceSet {
            																ccw TRUE
            																solid TRUE
																			creaseAngle	1.6
            																coord Coordinate {
																				point [
																					#права€ верхн€€ четверть
																					5.250000 10.500000 -0.75,
																					9.500000 10.500000 -0.75,
																					9.851626 10.436141 -0.75,
																					9.953446 10.391284 -0.75,
																					10.019751 10.354318	-0.75,
																					10.069780 10.321797	-0.75,
																					10.110660 10.291893	-0.75,
																					10.145916 10.263409	-0.75,
																					10.177610 10.235421	-0.75,
																					10.207107 10.207107	-0.75,
																					10.235421 10.177610	-0.75,
																					10.263409 10.145916	-0.75,
																					10.291893 10.110660	-0.75,
																					10.321797 10.069780	-0.75,
																					10.354318 10.019751	-0.75,
																					10.391284 9.953446 -0.75,
																					10.463946 9.766099 -0.75,
																					10.500000 9.500000 -0.75,
																					10.500000 5.250000 -0.75,
									
																					#права€ нижн€€ черверть
																					10.500000 5.250000 -0.75,
																					10.500000 1.000000 -0.75,
																					10.436141 0.648374 -0.75,
																					10.391284 0.546554 -0.75,
																					10.354318 0.480249 -0.75,
																					10.321797 0.430220 -0.75,
																					10.291893 0.389340 -0.75,
																					10.263409 0.354084 -0.75,
																					10.235421 0.322390 -0.75,
																					10.207107 0.292893 -0.75,
																					10.177610 0.264579 -0.75,
																					10.145916 0.236591 -0.75,
																					10.110660 0.208107 -0.75,
																					10.069780 0.178203 -0.75,
																					10.019751 0.145682 -0.75,
																					9.953446 0.108716 -0.75,
																					9.851626 0.063859 -0.75,
																					9.500000 0.000000 -0.75,
																					5.250000 0.000000 -0.75,
																
																					#верхн€€ права€ четверть
																					5.250000 10.250000 -0.75,
																					9.250000 10.250000 -0.75,
																					9.537089 10.207904 -0.75,
																					9.671505 10.156826 -0.75,
																					9.765049 10.107161 -0.75,
																					9.838856 10.058238 -0.75,
																					9.901396 10.008738 -0.75,
																					9.957107 9.957107 -0.75,
																					10.008738 9.901396 -0.75,
																					10.058238 9.838856 -0.75,
																					10.107161 9.765049 -0.75,
																					10.156826 9.671505 -0.75,
																					10.207904 9.537089 -0.75,
																					10.250000 9.250000 -0.75,
																					10.250000 5.250000 -0.75,

																					#права€ нижн€€ черверть
																					10.250000 5.250000 -0.75,
																					10.250000 1.250000 -0.75,
																					10.207904 0.962911 -0.75,
																					10.156826 0.828495 -0.75,
																					10.107161 0.734951 -0.75,
																					10.058238 0.661144 -0.75,
																					10.008738 0.598604 -0.75,
																					9.957107 0.542893 -0.75,
																					9.901396 0.491262 -0.75,
																					9.838856 0.441762 -0.75,
																					9.765049 0.392839 -0.75,
																					9.671505 0.343174 -0.75,
																					9.537089 0.292096 -0.75,
																					9.250000 0.250000 -0.75,
																					5.250000 0.250000 -0.75	
																				]
            																}
            																coordIndex [
																				 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
																				 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37
																				 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50
																				 49 48 47 46 45 44 43 42 41 40 39 38 -1
																			]
            															}
																	}
																]
															}
															Group {
																children [
																	DEF	touchsens_int_ramka3 TouchSensor {
																	}
																	DEF shape_int_ramka3 Shape {	#приложение вектора момента на внутреннюю рамку
																			#положительна€ сторона координат
																		appearance Appearance {
            																material Material {
            																  diffuseColor .88 .32 .2
            																  ambientIntensity .113
            																  specularColor .82 .28 .28
            																  shininess .8
            																}
        																}
																		geometry IndexedFaceSet {
            																ccw FALSE
            																solid TRUE
																			creaseAngle	1.6
            																coord Coordinate {
																				point [
																					#нижн€€ лева€ четверть
																					5.250000 0.000000 0.75,
																					1.000000 0.000000 0.75,
																					0.648374 0.063859 0.75,
																					0.546554 0.108716 0.75,
																					0.480249 0.145682 0.75,
																					0.430220 0.178203 0.75,
																					0.389340 0.208107 0.75,
																					0.354084 0.236591 0.75,
																					0.322390 0.264579 0.75,
																					0.292893 0.292893 0.75,
																					0.264579 0.322390 0.75,
																					0.236591 0.354084 0.75,
																					0.208107 0.389340 0.75,
																					0.178203 0.430220 0.75,
																					0.145682 0.480249 0.75,
																					0.108716 0.546554 0.75,
																					0.063859 0.648374 0.75,
																					0.000000 1.000000 0.75,
																					0.000000 5.250000 0.75,
									
																					#верхн€€ лева€ четверть
																					0.000000 5.250000 0.75,
																					0.000000 9.500000 0.75,
																					0.063859 9.851626 0.75,
																					0.108716 9.953446 0.75,
																					0.145682 10.019751 0.75,
																					0.178203 10.069780 0.75,
																					0.208107 10.110660 0.75,
																					0.236591 10.145916 0.75,
																					0.264579 10.177610 0.75,
																					0.292893 10.207107 0.75,
																					0.322390 10.235421 0.75,
																					0.354084 10.263409 0.75,
																					0.389340 10.291893 0.75,
																					0.430220 10.321797 0.75,
																					0.480249 10.354318 0.75,
																					0.546554 10.391284 0.75,
																					0.648374 10.436141 0.75,
																					1.000000 10.500000 0.75,
																					5.250000 10.500000 0.75,
																
																					#нижн€€ лева€ четверть
																					5.250000 0.250000 0.75,
																					1.250000 0.250000 0.75,
																					0.962911 0.292096 0.75,
																					0.828495 0.343174 0.75,
																					0.734951 0.392839 0.75,
																					0.661144 0.441762 0.75,
																					0.598604 0.491262 0.75,
																					0.542893 0.542893 0.75,
																					0.491262 0.598604 0.75,
																					0.441762 0.661144 0.75,
																					0.392839 0.734951 0.75,
																					0.343174 0.828495 0.75,
																					0.292096 0.962911 0.75,
																					0.250000 1.250000 0.75,
																					0.250000 5.250000 0.75,

																					#верхн€€ лева€ четверть
																					0.250000 5.250000 0.75,
																					0.250000 9.250000 0.75,
																					0.292096 9.537089 0.75,
																					0.343174 9.671505 0.75,
																					0.392839 9.765049 0.75,
																					0.441762 9.838856 0.75,
																					0.491262 9.901396 0.75,
																					0.542893 9.957107 0.75,
																					0.598604 10.008738 0.75,
																					0.661144 10.058238 0.75,
																					0.734951 10.107161 0.75,
																					0.828495 10.156826 0.75,
																					0.962911 10.207904 0.75,
																					1.250000 10.250000 0.75,
																					5.250000 10.250000 0.75	
																				]
            																}
            																coordIndex [
																				 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
																				 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37
																				 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50
																				 49 48 47 46 45 44 43 42 41 40 39 38 -1
																			]
            															}
																	}
																]
															}
															Group {
																children [
																	DEF	touchsens_int_ramka4 TouchSensor {
																	}
																	DEF shape_int_ramka4 Shape {	#приложение вектора момента на внутреннюю рамку
																			#положительна€ сторона координат
																		appearance Appearance {
            																material Material {
            																  diffuseColor .88 .32 .2
            																  ambientIntensity .113
            																  specularColor .82 .28 .28
            																  shininess .8
            																}
        																}
																		geometry IndexedFaceSet {
            																ccw FALSE
            																solid TRUE
																			creaseAngle	1.6
            																coord Coordinate {
																				point [
																					#верхн€€ права€ четверть
																					5.250000 10.500000 0.75,
																					9.500000 10.500000 0.75,
																					9.851626 10.436141 0.75,
																					9.953446 10.391284 0.75,
																					10.019751 10.354318	0.75,
																					10.069780 10.321797	0.75,
																					10.110660 10.291893	0.75,
																					10.145916 10.263409	0.75,
																					10.177610 10.235421	0.75,
																					10.207107 10.207107	0.75,
																					10.235421 10.177610	0.75,
																					10.263409 10.145916	0.75,
																					10.291893 10.110660	0.75,
																					10.321797 10.069780	0.75,
																					10.354318 10.019751	0.75,
																					10.391284 9.953446 0.75,
																					10.463946 9.766099 0.75,
																					10.500000 9.500000 0.75,
																					10.500000 5.250000 0.75,
									
																					#права€ нижн€€ черверть
																					10.500000 5.250000 0.75,
																					10.500000 1.000000 0.75,
																					10.436141 0.648374 0.75,
																					10.391284 0.546554 0.75,
																					10.354318 0.480249 0.75,
																					10.321797 0.430220 0.75,
																					10.291893 0.389340 0.75,
																					10.263409 0.354084 0.75,
																					10.235421 0.322390 0.75,
																					10.207107 0.292893 0.75,
																					10.177610 0.264579 0.75,
																					10.145916 0.236591 0.75,
																					10.110660 0.208107 0.75,
																					10.069780 0.178203 0.75,
																					10.019751 0.145682 0.75,
																					9.953446 0.108716 0.75,
																					9.851626 0.063859 0.75,
																					9.500000 0.000000 0.75,
																					5.250000 0.000000 0.75,
																	
																					#верхн€€ права€ четверть
																					5.250000 10.250000 0.75,
																					9.250000 10.250000 0.75,
																					9.537089 10.207904 0.75,
																					9.671505 10.156826 0.75,
																					9.765049 10.107161 0.75,
																					9.838856 10.058238 0.75,
																					9.901396 10.008738 0.75,
																					9.957107 9.957107 0.75,
																					10.008738 9.901396 0.75,
																					10.058238 9.838856 0.75,
																					10.107161 9.765049 0.75,
																					10.156826 9.671505 0.75,
																					10.207904 9.537089 0.75,
																					10.250000 9.250000 0.75,
																					10.250000 5.250000 0.75,

																					#права€ нижн€€ черверть
																					10.250000 5.250000 0.75,
																					10.250000 1.250000 0.75,
																					10.207904 0.962911 0.75,
																					10.156826 0.828495 0.75,
																					10.107161 0.734951 0.75,
																					10.058238 0.661144 0.75,
																					10.008738 0.598604 0.75,
																					9.957107 0.542893 0.75,
																					9.901396 0.491262 0.75,
																					9.838856 0.441762 0.75,
																					9.765049 0.392839 0.75,
																					9.671505 0.343174 0.75,
																					9.537089 0.292096 0.75,
																					9.250000 0.250000 0.75,
																					5.250000 0.250000 0.75	
																				]
            																}
            																coordIndex [
																				 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
																				 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37
																				 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50
																				 49 48 47 46 45 44 43 42 41 40 39 38 -1
																			]
            															}
																	}
																]
															}
														]
													}
												]
											}
											DEF	rotor1 Transform {
												children [
													DEF rotor Transform {
														children [
															Transform {
																translation	-4.5 -4.5 0
																center 4.5 4.5 0
																rotation 0 1 0 1.570796
																children [
																	Shape {
																		appearance Appearance {
            																material Material {
            																  diffuseColor .33 .34 .6
            																  ambientIntensity .103
            																  specularColor .29 .29 .29
            																  shininess .79
            																}
            																texture ImageTexture {
            																  url "textures\rotor.jpg"
            																}
        																}
																		geometry IndexedFaceSet {
            																ccw FALSE
            																solid TRUE
																			creaseAngle	1.6
            																coord DEF coord_rotor Coordinate {
																			 	point [
																					4.5000000 .0000000 -0.75
																					4.0589229 .0216687 -0.75
																					3.6220936 .0864662 -0.75
																					3.1937190 .1937685 -0.75
																					2.7779246 .3425421 -0.75
																					2.3787147 .5313543 -0.75
																					1.9999340 .7583867 -0.75
																					1.6452302 1.0214530 -0.75
																					1.3180195 1.3180195 -0.75
																					1.0214530 1.6452302 -0.75
																					.7583867 1.9999340 -0.75
																					.5313543 2.3787147 -0.75
																					.3425421 2.7779246 -0.75
																					.1937685 3.1937190 -0.75
																					.0864662 3.6220936 -0.75
																					.0216687 4.0589229 -0.75
																					.0000000 4.5000000 -0.75
																					.0216687 4.9410771 -0.75
																					.0864662 5.3779064 -0.75
																					.1937685 5.8062810 -0.75
																					.3425421 6.2220754 -0.75
																					.5313543 6.6212853 -0.75
																					.7583867 7.0000660 -0.75
																					1.0214530 7.3547698 -0.75
																					1.0214530 7.3547698 -0.75
																					1.3180195 7.6819805 -0.75
																					1.6452302 7.9785470 -0.75
																					1.9999340 8.2416133 -0.75
																					2.3787147 8.4686457 -0.75
																					2.7779246 8.6574579 -0.75
																					3.1937190 8.8062315 -0.75
																					3.6220936 8.9135338 -0.75
																					4.0589229 8.9783313 -0.75
																					4.5000000 9.0000000 -0.75
																					4.9410771 8.9783313 -0.75
																					5.3779064 8.9135338 -0.75
																					5.8062810 8.8062315 -0.75
																					6.2220754 8.6574579 -0.75
																					6.6212853 8.4686457 -0.75
																					7.0000660 8.2416133 -0.75
																					7.3547698 7.9785470 -0.75
																					7.6819805 7.6819805 -0.75
																					7.9785470 7.3547698 -0.75
																					8.2416133 7.0000660 -0.75
																					8.4686457 6.6212853 -0.75
																					8.6574579 6.2220754 -0.75
																					8.8062315 5.8062810 -0.75
																					8.9135338 5.3779064 -0.75
																					8.9783313 4.9410771 -0.75
																					9.0000000 4.5000000 -0.75
																					8.9783313 4.0589229 -0.75
																					8.9135338 3.6220936 -0.75
																					8.8062315 3.1937190 -0.75
																					8.6574579 2.7779246 -0.75
																					8.4686457 2.3787147 -0.75
																					8.2416133 1.9999340 -0.75
																					7.9785470 1.6452302 -0.75
																					7.6819805 1.3180195 -0.75
																					7.3547698 1.0214530 -0.75
																					7.0000660 .7583867 -0.75
																					6.6212853 .5313543 -0.75
																					6.2220754 .3425421 -0.75
																					5.8062810 .1937685 -0.75
																					5.3779064 .0864662 -0.75
																					4.9410771 .0216687 -0.75

																					4.5000000 .0000000 0.75
																					4.0589229 .0216687 0.75
																					3.6220936 .0864662 0.75
																					3.1937190 .1937685 0.75
																					2.7779246 .3425421 0.75
																					2.3787147 .5313543 0.75
																					1.9999340 .7583867 0.75
																					1.6452302 1.0214530 0.75
																					1.3180195 1.3180195 0.75
																					1.0214530 1.6452302 0.75
																					.7583867 1.9999340 0.75
																					.5313543 2.3787147 0.75
																					.3425421 2.7779246 0.75
																					.1937685 3.1937190 0.75
																					.0864662 3.6220936 0.75
																					.0216687 4.0589229 0.75
																					.0000000 4.5000000 0.75
																					.0216687 4.9410771 0.75
																					.0864662 5.3779064 0.75
																					.1937685 5.8062810 0.75
																					.3425421 6.2220754 0.75
																					.5313543 6.6212853 0.75
																					.7583867 7.0000660 0.75
																					1.0214530 7.3547698 0.75
																					1.0214530 7.3547698 0.75
																					1.3180195 7.6819805 0.75
																					1.6452302 7.9785470 0.75
																					1.9999340 8.2416133 0.75
																					2.3787147 8.4686457 0.75
																					2.7779246 8.6574579 0.75
																					3.1937190 8.8062315 0.75
																					3.6220936 8.9135338 0.75
																					4.0589229 8.9783313 0.75
																					4.5000000 9.0000000 0.75
																					4.9410771 8.9783313 0.75
																					5.3779064 8.9135338 0.75
																					5.8062810 8.8062315 0.75
																					6.2220754 8.6574579 0.75
																					6.6212853 8.4686457 0.75
																					7.0000660 8.2416133 0.75
																					7.3547698 7.9785470 0.75
																					7.6819805 7.6819805 0.75
																					7.9785470 7.3547698 0.75
																					8.2416133 7.0000660 0.75
																					8.4686457 6.6212853 0.75
																					8.6574579 6.2220754 0.75
																					8.8062315 5.8062810 0.75
																					8.9135338 5.3779064 0.75
																					8.9783313 4.9410771 0.75
																					9.0000000 4.5000000 0.75
																					8.9783313 4.0589229 0.75
																					8.9135338 3.6220936 0.75
																					8.8062315 3.1937190 0.75
																					8.6574579 2.7779246 0.75
																					8.4686457 2.3787147 0.75
																					8.2416133 1.9999340 0.75
																					7.9785470 1.6452302 0.75
																					7.6819805 1.3180195 0.75
																					7.3547698 1.0214530 0.75
																					7.0000660 .7583867 0.75
																					6.6212853 .5313543 0.75
																					6.2220754 .3425421 0.75
																					5.8062810 .1937685 0.75
																					5.3779064 .0864662 0.75
																					4.9410771 .0216687 0.75

																					#далее координаты боковых конусов
																					4.500000 4.000000 -0.75
																					4.402455 4.009607 -0.75
																					4.308658 4.038060 -0.75
																					4.222215 4.084265 -0.75
																					4.146447 4.146447 -0.75
																					4.084265 4.222215 -0.75
																					4.038060 4.308658 -0.75
																					4.009607 4.402455 -0.75
																					4.000000 4.500000 -0.75
																					4.009607 4.597545 -0.75
																					4.038060 4.691342 -0.75
																					4.084265 4.777785 -0.75
																					4.146447 4.853553 -0.75
																					4.222215 4.915735 -0.75
																					4.308658 4.961940 -0.75
																					4.402455 4.990393 -0.75
																					4.500000 5.000000 -0.75
																					4.597545 4.990393 -0.75
																					4.691342 4.961940 -0.75
																					4.777785 4.915735 -0.75
																					4.853553 4.853553 -0.75
																					4.915735 4.777785 -0.75
																					4.961940 4.691342 -0.75
																					4.990393 4.597545 -0.75
																					5.000000 4.500000 -0.75
																					4.990393 4.402455 -0.75
																					4.961940 4.308658 -0.75
																					4.915735 4.222215 -0.75
																					4.853553 4.146447 -0.75
																					4.777785 4.084265 -0.75
																					4.691342 4.038060 -0.75
																					4.597545 4.009607 -0.75
																					4.500000 4.000000 -0.75

																					4.500000 4.000000 0.75
																					4.402455 4.009607 0.75
																					4.308658 4.038060 0.75
																					4.222215 4.084265 0.75
																					4.146447 4.146447 0.75
																					4.084265 4.222215 0.75
																					4.038060 4.308658 0.75
																					4.009607 4.402455 0.75
																					4.000000 4.500000 0.75
																					4.009607 4.597545 0.75
																					4.038060 4.691342 0.75
																					4.084265 4.777785 0.75
																					4.146447 4.853553 0.75
																					4.222215 4.915735 0.75
																					4.308658 4.961940 0.75
																					4.402455 4.990393 0.75
																					4.500000 5.000000 0.75
																					4.597545 4.990393 0.75
																					4.691342 4.961940 0.75
																					4.777785 4.915735 0.75
																					4.853553 4.853553 0.75
																					4.915735 4.777785 0.75
																					4.961940 4.691342 0.75
																					4.990393 4.597545 0.75
																					5.000000 4.500000 0.75
																					4.990393 4.402455 0.75
																					4.961940 4.308658 0.75
																					4.915735 4.222215 0.75
																					4.853553 4.146447 0.75
																					4.777785 4.084265 0.75
																					4.691342 4.038060 0.75
																					4.597545 4.009607 0.75
																					4.500000 4.000000 0.75

																					4.500000 4.500000 5.15
																					4.500000 4.500000 -5.15
																				]
            																}
            																coordIndex [
																				#ободок
            																	0, 1, 66, 65 -1,
																				1, 2, 67, 66 -1,
																				2, 3, 68, 67 -1,
																				3, 4, 69, 68 -1,
																				4, 5, 70, 69 -1,
																				5, 6, 71, 70 -1,
																				6, 7, 72, 71 -1,
																				7, 8, 73, 72 -1,
																				8, 9, 74, 73 -1,
																				9, 10, 75, 74 -1,
																				10, 11,	76,	75 -1,
																				11, 12,	77,	76 -1,
																				12, 13,	78,	77 -1,
																				13, 14,	79,	78 -1,
																				14, 15,	80,	79 -1,
																				15, 16,	81,	80 -1,
																				16, 17,	82,	81 -1,
																				17, 18,	83,	82 -1,
																				18, 19,	84,	83 -1,
																				19, 20,	85,	84 -1,
																				20, 21,	86,	85 -1,
																				21, 22,	87,	86 -1,
																				22, 23,	88,	87 -1,
																				23,	24,	89,	88 -1,
																				24,	25,	90,	89 -1,
																				25,	26,	91,	90 -1,
																				26,	27,	92,	91 -1,
																				27,	28,	93,	92 -1,
																				28,	29,	94,	93 -1,
																				29,	30,	95,	94 -1,
																				30,	31,	96,	95 -1,
																				31,	32,	97,	96 -1,
																				32,	33,	98,	97 -1,
																				33,	34,	99,	98 -1,
																				34,	35,	100, 99 -1,
																				35,	36,	101, 100 -1,
																				36,	37,	102, 101 -1,
																				37,	38,	103, 102 -1,
																				38,	39,	104, 103 -1,
																				39,	40,	105, 104 -1,
																				40,	41,	106, 105 -1,
																				41,	42,	107, 106 -1,
																				42,	43,	108, 107 -1,
																				43,	44,	109, 108 -1,
																				44,	45,	110, 109 -1,
																				45,	46,	111, 110 -1,
																				46,	47,	112, 111 -1,
																				47,	48,	113, 112 -1,
																				48,	49,	114, 113 -1,
																				49,	50,	115, 114 -1,
																				50,	51,	116, 115 -1,
																				51,	52,	117, 116 -1,
																				52,	53,	118, 117 -1,
																				53,	54,	119, 118 -1,
																				54,	55,	120, 119 -1,
																				55,	56,	121, 120 -1,
																				56,	57,	122, 121 -1,
																				57,	58,	123, 122 -1,
																				58,	59,	124, 123 -1,
																				59,	60,	125, 124 -1,
																				60,	61,	126, 125 -1,
																				61,	62,	127, 126 -1,
																				62,	63,	128, 127 -1,
																				63,	64,	129, 128 -1,
																				65, 129, 64, 0 -1,
						
																				#круглые плоскости ротора
																				64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 
																				48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 
																				32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 
																				16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 -1,

																				65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,
																				81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
																				97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109,
																				110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
																				123, 124, 125, 126, 127, 128, 129 -1,

																				#конусы по бокам ротора	 (32 точки)
																				130, 131, 196 -1,
																				131, 132, 196 -1,
																				132, 133, 196 -1,
																				133, 134, 196 -1,
																				134, 135, 196 -1,
																				135, 136, 196 -1,
																				136, 137, 196 -1,
																				137, 138, 196 -1,
																				138, 139, 196 -1,
																				139, 140, 196 -1,
																				140, 141, 196 -1,
																				141, 142, 196 -1,
																				142, 143, 196 -1,
																				143, 144, 196 -1,
																				144, 145, 196 -1,
																				145, 146, 196 -1,
																				146, 147, 196 -1,
																				147, 148, 196 -1,
																				148, 149, 196 -1,
																				149, 150, 196 -1,
																				150, 151, 196 -1,
																				151, 152, 196 -1,
																				152, 153, 196 -1,
																				153, 154, 196 -1,
																				154, 155, 196 -1,
																				155, 156, 196 -1,
																				156, 157, 196 -1,
																				157, 158, 196 -1,
																				158, 159, 196 -1,
																				159, 160, 196 -1,
																				160, 161, 196 -1,
																				161, 162, 196 -1,

																				195, 194, 197 -1,
																				194, 193, 197 -1,
																				193, 192, 197 -1,
																				192, 191, 197 -1,
																				191, 190, 197 -1,
																				190, 189, 197 -1,
																				189, 188, 197 -1,
																				188, 187, 197 -1,
																				187, 186, 197 -1,
																				186, 185, 197 -1,
																				185, 184, 197 -1,
																				184, 183, 197 -1,
																				183, 182, 197 -1,
																				182, 181, 197 -1,
																				181, 180, 197 -1,
																				180, 179, 197 -1,
																				179, 178, 197 -1,
																				178, 177, 197 -1,
																				177, 176, 197 -1,
																				176, 175, 197 -1,
																				175, 174, 197 -1,
																				174, 173, 197 -1,
																				173, 172, 197 -1,
																				172, 171, 197 -1,
																				171, 170, 197 -1,
																				170, 169, 197 -1,
																				169, 168, 197 -1,
																				168, 167, 197 -1,
																				167, 166, 197 -1,
																				166, 165, 197 -1,
																				165, 164, 197 -1,
																				164, 163, 197 -1
																			]
            															}
																	}
																]
															}
														]
													}
													DEF switch_arr_rotor Switch {
														choice [
															DEF arr_rotor Transform {
																children [
																	Transform {
																		translation	-4.5 -4.5 0
																		center 4.5 4.5 0
																		rotation 0 1 0 1.570796
																		children [
																			Transform {
																				scale 1.008 1.008 1.008
																				translation	0 0 0
																				children [
																					Shape {
																						appearance Appearance {
																							material Material {
            																					diffuseColor .33 .34 .6
            																					ambientIntensity .103
            																					specularColor .29 .29 .29
            																					shininess .79
																								transparency .7
            																				}
																							texture DEF arr1_rotor_tex ImageTexture {
            																				  url ""
            																				}
																						}
																						geometry IndexedFaceSet {
            																				ccw FALSE
            																				solid TRUE
																							creaseAngle	1.6
            																				coord USE coord_rotor
																							coordIndex [						
																								#круглые плоскости ротора
																								64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 
																								48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 
																								32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 
																								16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 -1
																							]
																						}
																					}
																					Shape {
																						appearance Appearance {
																							material Material {
            																					diffuseColor .33 .34 .6
            																					ambientIntensity .103
            																					specularColor .29 .29 .29
            																					shininess .79
																								transparency .8
            																				}
																							texture DEF arr2_rotor_tex ImageTexture {
            																				  url ""
            																				}
																						}
																						geometry IndexedFaceSet {
            																				ccw FALSE
            																				solid TRUE
																							creaseAngle	1.6
            																				coord USE coord_rotor
																							coordIndex [
																								65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,
																								81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
																								97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109,
																								110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122,
																								123, 124, 125, 126, 127, 128, 129 -1
																							]
																						}
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
														whichChoice	-1
													}
												]
											}
											Transform {
												translation	0 -5.8 0
												children [
													Shape {	 #геометри€ внешней рамки
														appearance Appearance {
            												material Material {
            												  diffuseColor .54 .05 .25
            												  ambientIntensity .487
            												  specularColor .81 .77 .75
            												  shininess .83
            												}
        												}
														geometry IndexedFaceSet {
            												ccw FALSE
            												solid TRUE
															creaseAngle	1.6
            												coord Coordinate {
																point [
																	#внешний контур лева€ нижн€€ часть
																	-0.75 0.000000 0.750000,
																	-0.75 0.000000 -5.750000,
																	-0.75 0.063859 -6.101626,
																	-0.75 0.108716 -6.203446,
																	-0.75 0.145682 -6.269751,
																	-0.75 0.178203 -6.319780,
																	-0.75 0.208107 -6.360660,
																	-0.75 0.236591 -6.395916,
																	-0.75 0.264579 -6.427610,
																	-0.75 0.292893 -6.457107,
																	-0.75 0.322390 -6.485421,
																	-0.75 0.354084 -6.513409,
																	-0.75 0.389340 -6.541893,
																	-0.75 0.430220 -6.571797,
																	-0.75 0.480249 -6.604318,
																	-0.75 0.546554 -6.641284,
																	-0.75 0.648374 -6.686141,
																	-0.75 1.000000 -6.750000,
																	-0.75 5.800000 -6.750000,

																	#внешний контур лева€ верхн€€ часть
																	-0.75 5.800000 -6.750000,
																	-0.75 10.600000 -6.750000,
																	-0.75 10.951626 -6.686141,
																	-0.75 11.053446 -6.641284,
																	-0.75 11.119751 -6.604318,
																	-0.75 11.169780 -6.571797,
																	-0.75 11.210660 -6.541893,
																	-0.75 11.245916 -6.513409,
																	-0.75 11.277610 -6.485421,
																	-0.75 11.307107 -6.457107,
																	-0.75 11.335421 -6.427610,
																	-0.75 11.363409 -6.395916,
																	-0.75 11.391893 -6.360660,
																	-0.75 11.421797 -6.319780,
																	-0.75 11.454318 -6.269751,
																	-0.75 11.491284 -6.203446,
																	-0.75 11.536141 -6.101626,
																	-0.75 11.600000 -5.750000,
																	-0.75 11.600000 0.750000,

																	#внешний контур лева€ нижн€€ часть
																	0.75 0.000000 0.750000,
																	0.75 0.000000 -5.750000,
																	0.75 0.063859 -6.101626,
																	0.75 0.108716 -6.203446,
																	0.75 0.145682 -6.269751,
																	0.75 0.178203 -6.319780,
																	0.75 0.208107 -6.360660,
																	0.75 0.236591 -6.395916,
																	0.75 0.264579 -6.427610,
																	0.75 0.292893 -6.457107,
																	0.75 0.322390 -6.485421,
																	0.75 0.354084 -6.513409,
																	0.75 0.389340 -6.541893,
																	0.75 0.430220 -6.571797,
																	0.75 0.480249 -6.604318,
																	0.75 0.546554 -6.641284,
																	0.75 0.648374 -6.686141,
																	0.75 1.000000 -6.750000,
																	0.75 5.800000 -6.750000,

																	#внешний контур лева€ верхн€€ часть
																	0.75 5.800000 -6.750000,
																	0.75 10.600000 -6.750000,
																	0.75 10.951626 -6.686141,
																	0.75 11.053446 -6.641284,
																	0.75 11.119751 -6.604318,
																	0.75 11.169780 -6.571797,
																	0.75 11.210660 -6.541893,
																	0.75 11.245916 -6.513409,
																	0.75 11.277610 -6.485421,
																	0.75 11.307107 -6.457107,
																	0.75 11.335421 -6.427610,
																	0.75 11.363409 -6.395916,
																	0.75 11.391893 -6.360660,
																	0.75 11.421797 -6.319780,
																	0.75 11.454318 -6.269751,
																	0.75 11.491284 -6.203446,
																	0.75 11.536141 -6.101626,
																	0.75 11.600000 -5.750000,
																	0.75 11.600000 0.750000,


																	#внутренний контур нижн€€ часть
																	-0.75 0.250000 0.750000,
																	-0.75 0.250000 -5.500000,
																	-0.75 0.292096 -5.787089,
																	-0.75 0.343174 -5.921505,
																	-0.75 0.392839 -6.015049,
																	-0.75 0.441762 -6.088856,
																	-0.75 0.491262 -6.151396,
																	-0.75 0.542893 -6.207107,
																	-0.75 0.598604 -6.258738,
																	-0.75 0.661144 -6.308238,
																	-0.75 0.734951 -6.357161,
																	-0.75 0.828495 -6.406826,
																	-0.75 0.962911 -6.457904,
																	-0.75 1.250000 -6.500000,
																	-0.75 5.800000 -6.500000,

																	#внутренний контур верхн€€ часть

																	-0.75 5.800000 -6.500000,
																	-0.75 10.350000 -6.500000,
																	-0.75 10.637089 -6.457904,
																	-0.75 10.771505 -6.406826,
																	-0.75 10.865049 -6.357161,
																	-0.75 10.938856 -6.308238,
																	-0.75 11.001396 -6.258738,
																	-0.75 11.057107 -6.207107,
																	-0.75 11.108738 -6.151396,
																	-0.75 11.158238 -6.088856,
																	-0.75 11.207161 -6.015049,
																	-0.75 11.256826 -5.921505,
																	-0.75 11.307904 -5.787089,
																	-0.75 11.350000 -5.500000,
																	-0.75 11.350000 0.750000,

																	#внутренний контур нижн€€ часть
																	0.75 0.250000 0.750000,
																	0.75 0.250000 -5.500000,
																	0.75 0.292096 -5.787089,
																	0.75 0.343174 -5.921505,
																	0.75 0.392839 -6.015049,
																	0.75 0.441762 -6.088856,
																	0.75 0.491262 -6.151396,
																	0.75 0.542893 -6.207107,
																	0.75 0.598604 -6.258738,
																	0.75 0.661144 -6.308238,
																	0.75 0.734951 -6.357161,
																	0.75 0.828495 -6.406826,
																	0.75 0.962911 -6.457904,
																	0.75 1.250000 -6.500000,
																	0.75 5.800000 -6.500000,

																	#внутренний контур верхн€€ часть

																	0.75 5.800000 -6.500000,
																	0.75 10.350000 -6.500000,
																	0.75 10.637089 -6.457904,
																	0.75 10.771505 -6.406826,
																	0.75 10.865049 -6.357161,
																	0.75 10.938856 -6.308238,
																	0.75 11.001396 -6.258738,
																	0.75 11.057107 -6.207107,
																	0.75 11.108738 -6.151396,
																	0.75 11.158238 -6.088856,
																	0.75 11.207161 -6.015049,
																	0.75 11.256826 -5.921505,
																	0.75 11.307904 -5.787089,
																	0.75 11.350000 -5.500000,
																	0.75 11.350000 0.750000
																]
            												}
            												coordIndex [
																1 0 38 39 -1,
																2 1	39 40 -1,
																3 2	40 41 -1,
																4 3	41 42 -1,
																5 4	42 43 -1,
																6 5	43 44 -1,
																7 6	44 45 -1,
																8 7	45 46 -1,
																9 8	46 47 -1,
																10 9 47	48 -1,
																11 10 48 49 -1,
																12 11 49 50 -1,
																13 12 50 51 -1,
																14 13 51 52 -1,
																15 14 52 53 -1,
																16 15 53 54 -1,
																17 16 54 55 -1,
																18 17 55 56 -1,
																19 18 56 57 -1,
																20 19 57 58 -1,
																21 20 58 59 -1,
																22 21 59 60 -1,
																23 22 60 61 -1,
																24 23 61 62 -1,
																25 24 62 63 -1,
																26 25 63 64 -1,
																27 26 64 65 -1,
																28 27 65 66 -1,
																29 28 66 67 -1,
																30 29 67 68 -1,
																31 30 68 69 -1,
																32 31 69 70 -1,
																33 32 70 71 -1,
																34 33 71 72 -1,
																35 34 72 73 -1,
																36 35 73 74 -1,
																37 36 74 75 -1,

																#внутренний контур
																76 77 107 106 -1,
																77 78 108 107 -1,
																78 79 109 108 -1,
																79 80 110 109 -1,
																80 81 111 110 -1,
																81 82 112 111 -1,
																82 83 113 112 -1,
																83 84 114 113 -1,
																84 85 115 114 -1,
																85 86 116 115 -1,
																86 87 117 116 -1,
																87 88 118 117 -1,
																88 89 119 118 -1,
																89 90 120 119 -1,
																90 91 121 120 -1,
																91 92 122 121 -1,
																92 93 123 122 -1,
																93 94 124 123 -1,
																94 95 125 124 -1,
																95 96 126 125 -1,
																96 97 127 126 -1,
																97 98 128 127 -1,
																98 99 129 128 -1,
																99 100 130 129 -1,
																100	101	131	130 -1,
																101	102	132	131 -1,
																102	103	133	132 -1,
																103	104	134	133 -1,
																104	105	135	134 -1,

																#боковые поверхности
																#0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
																#21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 76
																#77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94
																#95 96 97 98 99 100 101 102 103 104 105 -1,

																#135 134 133 132 131 130 129 128 127 126 125 124 123 122
																#121 120 119 118 117 116 115 114 113 112 111 110 109 108
																#107 106 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60
																#59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41
																#40 39 38 -1,

																#торцы рамки
																76 106 38 0 -1,
																37 75 135 105 -1
															]
            											}
													}


													Group {
														children [
															DEF switch_ext_ramka1_arrow Switch {
																choice	[
																	Group {
																		children [
																			Transform {
																				rotation 0 1 0 1.570796
																				translation	-1.1 0.125 -5.75 
																				children [
																					Transform {
																						rotation 1 0 0 1.570796
																						children [
																							DEF	touchsens_ext_ramka1_arrow TouchSensor {
																							}
																							DEF shape_extarr1 Shape {
																								appearance Appearance {
																									material Material {
																										diffuseColor .16 .3 .3
																										specularColor .49 .49 .49
																										emissiveColor .16 .3 .3
																										ambientIntensity 0
																										shininess .1
																									}

																								}
																								geometry Cone {
																									bottomRadius 0.3
																									height 0.75
																								}
																							}
																							Transform {
																								translation	0 -1.875 0
																								children [
																									DEF shape_extcyl1 Shape {
																										appearance Appearance {
																											material Material {
																												diffuseColor .16 .3 .3
																												specularColor .49 .49 .49
																												emissiveColor .16 .3 .3
																												ambientIntensity 0
																												shininess .1
																											}

																										}
																										geometry DEF extrusion_ext_ramka1_arrow Extrusion {
																											crossSection [
																												0.000000 -0.150000,
																												-0.057403 -0.138582,
																												-0.106066 -0.106066,
																												-0.138582 -0.057403,
																												-0.150000 0.000000,
																												-0.138582 0.057403,
																												-0.106066 0.106066,
																												-0.057403 0.138582,
																												0.000000 0.150000,
																												0.057403 0.138582,
																												0.106066 0.106066,
																												0.138582 0.057403,
																												0.150000 0.000000,
																												0.138582 -0.057403,
																												0.106066 -0.106066,
																												0.057403 -0.138582,
																												0.000000 -0.150000
																											]
																											spine [
																												0 1.5 0, 0 -1.5 0
																											]
																											creaseAngle	1.6
																										}
																									}
																								]
																							}
																						]
																					}
																				]
																			}
																		]
																	}
																]
																whichChoice -1
															}
															DEF switch_ext_ramka2_arrow Switch {
																choice	[
																	Group {
																		children [
																			Transform {
																				rotation 0 1 0 1.570796
																				translation	-1.1 11.475 -5.75 
																				children [
																					Transform {
																						rotation 1 0 0 1.570796
																						children [
																							DEF	touchsens_ext_ramka2_arrow TouchSensor {
																							}
																							DEF shape_extarr2 Shape {
																								appearance Appearance {
																									material Material {
																										diffuseColor .16 .3 .3
																										specularColor .49 .49 .49
																										emissiveColor .16 .3 .3
																										ambientIntensity 0
																										shininess .1
																									}

																								}
																								geometry Cone {
																									bottomRadius 0.3
																									height 0.75
																								}
																							}
																							Transform {
																								translation	0 -1.875 0
																								children [
																									DEF shape_extcyl2 Shape {
																										appearance Appearance {
																											material Material {
																												diffuseColor .16 .3 .3
																												specularColor .49 .49 .49
																												emissiveColor .16 .3 .3
																												ambientIntensity 0
																												shininess .1
																											}

																										}
																										geometry DEF extrusion_ext_ramka2_arrow Extrusion {
																											crossSection [
																												0.000000 -0.150000,
																												-0.057403 -0.138582,
																												-0.106066 -0.106066,
																												-0.138582 -0.057403,
																												-0.150000 0.000000,
																												-0.138582 0.057403,
																												-0.106066 0.106066,
																												-0.057403 0.138582,
																												0.000000 0.150000,
																												0.057403 0.138582,
																												0.106066 0.106066,
																												0.138582 0.057403,
																												0.150000 0.000000,
																												0.138582 -0.057403,
																												0.106066 -0.106066,
																												0.057403 -0.138582,
																												0.000000 -0.150000
																											]
																											spine [
																												0 1.5 0, 0 -1.5 0
																											]
																											creaseAngle	1.6
																										}
																									}
																								]
																							}
																						]
																					}
																				]
																			}
																		]
																	}
																]
																whichChoice -1
															}
															DEF switch_ext_ramka3_arrow Switch {
																choice	[
																	Group {
																		children [
																			Transform {
																				rotation 0 1 0 -1.570796
																				translation	1.1 0.125 -5.75 
																				children [
																					Transform {
																						rotation 1 0 0 1.570796
																						children [
																							DEF	touchsens_ext_ramka3_arrow TouchSensor {
																							}
																							DEF shape_extarr3 Shape {
																								appearance Appearance {
																									material Material {
																										diffuseColor .16 .3 .3
																										specularColor .49 .49 .49
																										emissiveColor .16 .3 .3
																										ambientIntensity 0
																										shininess .1
																									}

																								}
																								geometry Cone {
																									bottomRadius 0.3
																									height 0.75
																								}
																							}
																							Transform {
																								translation	0 -1.875 0
																								children [
																									DEF shape_extcyl3 Shape {
																										appearance Appearance {
																											material Material {
																												diffuseColor .16 .3 .3
																												specularColor .49 .49 .49
																												emissiveColor .16 .3 .3
																												ambientIntensity 0
																												shininess .1
																											}

																										}
																										geometry DEF extrusion_ext_ramka3_arrow Extrusion {
																											crossSection [
																												0.000000 -0.150000,
																												-0.057403 -0.138582,
																												-0.106066 -0.106066,
																												-0.138582 -0.057403,
																												-0.150000 0.000000,
																												-0.138582 0.057403,
																												-0.106066 0.106066,
																												-0.057403 0.138582,
																												0.000000 0.150000,
																												0.057403 0.138582,
																												0.106066 0.106066,
																												0.138582 0.057403,
																												0.150000 0.000000,
																												0.138582 -0.057403,
																												0.106066 -0.106066,
																												0.057403 -0.138582,
																												0.000000 -0.150000
																											]
																											spine [
																												0 1.5 0, 0 -1.5 0
																											]
																											creaseAngle	1.6
																										}
																									}
																								]
																							}
																						]
																					}
																				]
																			}
																		]
																	}
																]
																whichChoice -1
															}
															DEF switch_ext_ramka4_arrow Switch {
																choice	[
																	Group {
																		children [
																			Transform {
																				rotation 0 1 0 -1.570796
																				translation	1.1 11.475 -5.75 
																				children [
																					Transform {
																						rotation 1 0 0 1.570796
																						children [
																							DEF	touchsens_ext_ramka4_arrow TouchSensor {
																							}
																							DEF shape_extarr4 Shape {
																								appearance Appearance {
																									material Material {
																										diffuseColor .16 .3 .3
																										specularColor .49 .49 .49
																										emissiveColor .16 .3 .3
																										ambientIntensity 0
																										shininess .1
																									}

																								}
																								geometry Cone {
																									bottomRadius 0.3
																									height 0.75
																								}
																							}
																							Transform {
																								translation	0 -1.875 0
																								children [
																									DEF shape_extcyl4 Shape {
																										appearance Appearance {
																											material Material {
																												diffuseColor .16 .3 .3
																												specularColor .49 .49 .49
																												emissiveColor .16 .3 .3
																												ambientIntensity 0
																												shininess .1
																											}

																										}
																										geometry DEF extrusion_ext_ramka4_arrow Extrusion {
																											crossSection [
																												0.000000 -0.150000,
																												-0.057403 -0.138582,
																												-0.106066 -0.106066,
																												-0.138582 -0.057403,
																												-0.150000 0.000000,
																												-0.138582 0.057403,
																												-0.106066 0.106066,
																												-0.057403 0.138582,
																												0.000000 0.150000,
																												0.057403 0.138582,
																												0.106066 0.106066,
																												0.138582 0.057403,
																												0.150000 0.000000,
																												0.138582 -0.057403,
																												0.106066 -0.106066,
																												0.057403 -0.138582,
																												0.000000 -0.150000
																											]
																											spine [
																												0 1.5 0, 0 -1.5 0
																											]
																											creaseAngle	1.6
																										}
																									}
																								]
																							}
																						]
																					}
																				]
																			}
																		]
																	}
																]
																whichChoice -1
															}
														]
													}
													Group {
														children [
															DEF	touchsens_ext_ramka1 TouchSensor {
															}
															DEF shape_ext_ramka1 Shape {	 #приложение вектора момента на внешнюю рамку
																appearance Appearance {
            														material Material {
            														  diffuseColor .54 .05 .25
            														  ambientIntensity .487
            														  specularColor .81 .77 .75
            														  shininess .83
            														}
        														}
																geometry IndexedFaceSet {
            														ccw TRUE
            														solid TRUE
																	creaseAngle	1.6
            														coord Coordinate {
																		point [
																			#внешний контур лева€ нижн€€ часть
																			-0.75 0.000000 0.750000,
																			-0.75 0.000000 -5.750000,
																			-0.75 0.063859 -6.101626,
																			-0.75 0.108716 -6.203446,
																			-0.75 0.145682 -6.269751,
																			-0.75 0.178203 -6.319780,
																			-0.75 0.208107 -6.360660,
																			-0.75 0.236591 -6.395916,
																			-0.75 0.264579 -6.427610,
																			-0.75 0.292893 -6.457107,
																			-0.75 0.322390 -6.485421,
																			-0.75 0.354084 -6.513409,
																			-0.75 0.389340 -6.541893,
																			-0.75 0.430220 -6.571797,
																			-0.75 0.480249 -6.604318,
																			-0.75 0.546554 -6.641284,
																			-0.75 0.648374 -6.686141,
																			-0.75 1.000000 -6.750000,
																			-0.75 5.800000 -6.750000,

																			#внутренний контур нижн€€ часть
																			-0.75 0.250000 0.750000,
																			-0.75 0.250000 -5.500000,
																			-0.75 0.292096 -5.787089,
																			-0.75 0.343174 -5.921505,
																			-0.75 0.392839 -6.015049,
																			-0.75 0.441762 -6.088856,
																			-0.75 0.491262 -6.151396,
																			-0.75 0.542893 -6.207107,
																			-0.75 0.598604 -6.258738,
																			-0.75 0.661144 -6.308238,
																			-0.75 0.734951 -6.357161,
																			-0.75 0.828495 -6.406826,
																			-0.75 0.962911 -6.457904,
																			-0.75 1.250000 -6.500000,
																			-0.75 5.800000 -6.500000
																		]
            														}
            														coordIndex [
																		   18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0
																		   19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 -1
																	]
            													}
															}
														]
													}
													Group {
														children [
															DEF	touchsens_ext_ramka2 TouchSensor {
															}
															DEF shape_ext_ramka2 Shape {	 #приложение вектора момента на внешнюю рамку
																appearance Appearance {
            														material Material {
            														  diffuseColor .54 .05 .25
            														  ambientIntensity .487
            														  specularColor .81 .77 .75
            														  shininess .83
            														}
        														}
																geometry IndexedFaceSet {
            														ccw TRUE
            														solid TRUE
																	creaseAngle	1.6
            														coord Coordinate {
																		point [
																			 #внешний контур лева€ верхн€€ часть
																			-0.75 5.800000 -6.750000,
																			-0.75 10.600000 -6.750000,
																			-0.75 10.951626 -6.686141,
																			-0.75 11.053446 -6.641284,
																			-0.75 11.119751 -6.604318,
																			-0.75 11.169780 -6.571797,
																			-0.75 11.210660 -6.541893,
																			-0.75 11.245916 -6.513409,
																			-0.75 11.277610 -6.485421,
																			-0.75 11.307107 -6.457107,
																			-0.75 11.335421 -6.427610,
																			-0.75 11.363409 -6.395916,
																			-0.75 11.391893 -6.360660,
																			-0.75 11.421797 -6.319780,
																			-0.75 11.454318 -6.269751,
																			-0.75 11.491284 -6.203446,
																			-0.75 11.536141 -6.101626,
																			-0.75 11.600000 -5.750000,
																			-0.75 11.600000 0.750000,

																			#внутренний контур верхн€€ часть
																			-0.75 5.800000 -6.500000,
																			-0.75 10.350000 -6.500000,
																			-0.75 10.637089 -6.457904,
																			-0.75 10.771505 -6.406826,
																			-0.75 10.865049 -6.357161,
																			-0.75 10.938856 -6.308238,
																			-0.75 11.001396 -6.258738,
																			-0.75 11.057107 -6.207107,
																			-0.75 11.108738 -6.151396,
																			-0.75 11.158238 -6.088856,
																			-0.75 11.207161 -6.015049,
																			-0.75 11.256826 -5.921505,
																			-0.75 11.307904 -5.787089,
																			-0.75 11.350000 -5.500000,
																			-0.75 11.350000 0.750000
																		]
            														}
            														coordIndex [
																		   18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0
																		   19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 -1
																	]
            													}
															}
														]
													}
													Group {
														children [
															DEF	touchsens_ext_ramka3 TouchSensor {
															}
															DEF shape_ext_ramka3 Shape {	 #приложение вектора момента на внешнюю рамку
																appearance Appearance {
            														material Material {
            														  diffuseColor .54 .05 .25
            														  ambientIntensity .487
            														  specularColor .81 .77 .75
            														  shininess .83
            														}
        														}
																geometry IndexedFaceSet {
            														ccw FALSE
            														solid TRUE
																	creaseAngle	1.6
            														coord Coordinate {
																		point [
																			#внешний контур лева€ нижн€€ часть
																			0.75 0.000000 0.750000,
																			0.75 0.000000 -5.750000,
																			0.75 0.063859 -6.101626,
																			0.75 0.108716 -6.203446,
																			0.75 0.145682 -6.269751,
																			0.75 0.178203 -6.319780,
																			0.75 0.208107 -6.360660,
																			0.75 0.236591 -6.395916,
																			0.75 0.264579 -6.427610,
																			0.75 0.292893 -6.457107,
																			0.75 0.322390 -6.485421,
																			0.75 0.354084 -6.513409,
																			0.75 0.389340 -6.541893,
																			0.75 0.430220 -6.571797,
																			0.75 0.480249 -6.604318,
																			0.75 0.546554 -6.641284,
																			0.75 0.648374 -6.686141,
																			0.75 1.000000 -6.750000,
																			0.75 5.800000 -6.750000,

																			#внутренний контур нижн€€ часть
																			0.75 0.250000 0.750000,
																			0.75 0.250000 -5.500000,
																			0.75 0.292096 -5.787089,
																			0.75 0.343174 -5.921505,
																			0.75 0.392839 -6.015049,
																			0.75 0.441762 -6.088856,
																			0.75 0.491262 -6.151396,
																			0.75 0.542893 -6.207107,
																			0.75 0.598604 -6.258738,
																			0.75 0.661144 -6.308238,
																			0.75 0.734951 -6.357161,
																			0.75 0.828495 -6.406826,
																			0.75 0.962911 -6.457904,
																			0.75 1.250000 -6.500000,
																			0.75 5.800000 -6.500000
																		]
            														}
            														coordIndex [
																		   18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0
																		   19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 -1
																	]
            													}
															}
														]
													}
													Group {
														children [
															DEF	touchsens_ext_ramka4 TouchSensor {
															}
															DEF shape_ext_ramka4 Shape {	 #приложение вектора момента на внешнюю рамку
																appearance Appearance {
            														material Material {
            														  diffuseColor .54 .05 .25
            														  ambientIntensity .487
            														  specularColor .81 .77 .75
            														  shininess .83
            														}
        														}
																geometry IndexedFaceSet {
            														ccw FALSE
            														solid TRUE
																	creaseAngle	1.6
            														coord Coordinate {
																		point [
																			#внешний контур лева€ верхн€€ часть
																			0.75 5.800000 -6.750000,
																			0.75 10.600000 -6.750000,
																			0.75 10.951626 -6.686141,
																			0.75 11.053446 -6.641284,
																			0.75 11.119751 -6.604318,
																			0.75 11.169780 -6.571797,
																			0.75 11.210660 -6.541893,
																			0.75 11.245916 -6.513409,
																			0.75 11.277610 -6.485421,
																			0.75 11.307107 -6.457107,
																			0.75 11.335421 -6.427610,
																			0.75 11.363409 -6.395916,
																			0.75 11.391893 -6.360660,
																			0.75 11.421797 -6.319780,
																			0.75 11.454318 -6.269751,
																			0.75 11.491284 -6.203446,
																			0.75 11.536141 -6.101626,
																			0.75 11.600000 -5.750000,
																			0.75 11.600000 0.750000,

																			#внутренний контур верхн€€ часть
																			0.75 5.800000 -6.500000,
																			0.75 10.350000 -6.500000,
																			0.75 10.637089 -6.457904,
																			0.75 10.771505 -6.406826,
																			0.75 10.865049 -6.357161,
																			0.75 10.938856 -6.308238,
																			0.75 11.001396 -6.258738,
																			0.75 11.057107 -6.207107,
																			0.75 11.108738 -6.151396,
																			0.75 11.158238 -6.088856,
																			0.75 11.207161 -6.015049,
																			0.75 11.256826 -5.921505,
																			0.75 11.307904 -5.787089,
																			0.75 11.350000 -5.500000,
																			0.75 11.350000 0.750000
																		]
            														}
            														coordIndex [
																		   18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0
																		   19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 -1
																	]
            													}
															}
														]
													}
													DEF small_ext_axis Transform {
														translation	0 0.25 0
														children [
															Shape {
																appearance Appearance {
																	material DEF axis_mat Material {
																		diffuseColor .53 .14 .01
																		specularColor .34 .05 .05
																		emissiveColor .3 .05 .05
																		ambientIntensity .0367
																		shininess .07
																	}

																}
																geometry Cylinder {
																	height 0.6
																	radius 0.05
																}
															}
														]
													}
													Transform {
														translation	0 11.1 0
														children USE small_ext_axis
													}
													DEF normal_ext_axis Transform {
														translation	0 0.45	0
														children [
															Shape {
																appearance Appearance {
																	material USE axis_mat
																}
																geometry Cylinder {
																	height 0.2
																	radius 0.25
																}
															}
														]
													}
													Transform {
														translation	0 10.7 0
														children USE normal_ext_axis
													}
												]
											}
										]
									}							
								]
							}
						]
					}
					DEF	basis_gyro Transform {
						translation	0 0 0
						children [
							Transform {
								translation	0 0 -8.95
								rotation 1 0 0 1.570796
								children [
									Shape {
										appearance Appearance {
											material DEF basis_mat Material {
												diffuseColor .4 .54 .26
												specularColor .46 .46 .46
												emissiveColor .12 .12 .12
												ambientIntensity .1
												shininess .51
											}
											
										}
										geometry Cylinder {
											height 5.3
											radius 0.2
										}
									}
								]
							}
							Transform {
								translation	0 0 -10.85
								rotation 1 0 0 1.570796
								children [
									Shape {
										appearance Appearance {
											material USE basis_mat											
										}
										geometry Cylinder {
											height 1.8
											radius 0.45
										}
									}
								]
							}
							Transform {
								translation	0 0 -11.5
								rotation 1 0 0 1.570796
								children [
									Shape {
										appearance Appearance {
											material USE basis_mat											
										}
										geometry Cylinder {
											height 0.5
											radius 3
										}
									}
								]
							}
						]
					}
				]
			}
			DEF	timesens_for_flash_arrow TimeSensor	{
				loop TRUE
				cycleInterval 0.1
			}
			DEF	timesens_for_send_rotations TimeSensor	{
				enabled	FALSE
				loop TRUE
				cycleInterval 0.2
			}
			DEF	timesens_for_stop_int_ramka TimeSensor {
				enabled	FALSE
				loop TRUE
				cycleInterval 0.05
			}
			DEF main_gyro_script Script {
				eventIn	SFBool int_ramka1_touchsens_act		#с датчика касани€ одной стороны внутр. рамки (половина 1)
				eventIn	SFBool int_ramka2_touchsens_act		#(половина 2)
				eventIn	SFBool int_ramka3_touchsens_act		#с датчика касани€ другой стороны внутр. рамки
				eventIn	SFBool int_ramka4_touchsens_act		#(половина 2)

				eventIn	SFBool int_ramka1_touchsens_click	#с датчика касани€ одной стороны внутр. рамки  Ћ»  по ней
				eventIn	SFBool int_ramka2_touchsens_click
				eventIn	SFBool int_ramka3_touchsens_click
				eventIn	SFBool int_ramka4_touchsens_click

				eventIn	SFRotation ext_ramka_corner_proto IS ext_ramka_corner_proto
				eventIn	SFRotation int_ramka_corner_proto IS int_ramka_corner_proto
				eventIn	SFBool clear_int_moment IS clear_int_moment	#очищает внутреннюю рамку от момента
				eventIn	SFBool clear_ext_moment IS clear_ext_moment	#очищает внешнюю рамку от момента

				eventIn	SFBool stop_rotation IS	stop_rotation #останавливает вращение если оно происходило

				eventIn	SFBool ext_ramka1_touchsens_act		#с датчика касани€ одной стороны внешн. рамки (половина 1)
				eventIn	SFBool ext_ramka2_touchsens_act		#(половина 2)
				eventIn	SFBool ext_ramka3_touchsens_act		#с датчика касани€ другой стороны внешн. рамки
				eventIn	SFBool ext_ramka4_touchsens_act		#(половина 2)

				eventIn	SFBool ext_ramka1_touchsens_click	#с датчика касани€ одной стороны внешн. рамки  Ћ»  по ней
				eventIn	SFBool ext_ramka2_touchsens_click
				eventIn	SFBool ext_ramka3_touchsens_click
				eventIn	SFBool ext_ramka4_touchsens_click

				eventIn	SFBool int_ramka1_arrow_act			#с датчика касани€ на стрелочке момента внутренней рамки (навели мышку)
				eventIn	SFBool int_ramka2_arrow_act
				eventIn	SFBool int_ramka3_arrow_act
				eventIn	SFBool int_ramka4_arrow_act

				eventIn	SFBool int_ramka1_arrow_click		#с датчика касани€ на стрелочке момента внутренней рамки (кликнули)
				eventIn	SFBool int_ramka2_arrow_click
				eventIn	SFBool int_ramka3_arrow_click
				eventIn	SFBool int_ramka4_arrow_click

				eventIn	SFBool ext_ramka1_arrow_act			#с датчика касани€ на стрелочке момента внешней рамки (навели мышку)
				eventIn	SFBool ext_ramka2_arrow_act
				eventIn	SFBool ext_ramka3_arrow_act
				eventIn	SFBool ext_ramka4_arrow_act

				eventIn	SFBool ext_ramka1_arrow_click		#с датчика касани€ на стрелочке момента внешней рамки (кликнули)
				eventIn	SFBool ext_ramka2_arrow_click
				eventIn	SFBool ext_ramka3_arrow_click
				eventIn	SFBool ext_ramka4_arrow_click

				eventIn	SFTime	change_intarr1_color		#вход€щее событие генерируемое таймером дл€ мигани€ 1й стрелочки момента внутр. рамки
				eventIn	SFTime	change_intarr2_color
				eventIn	SFTime	change_intarr3_color
				eventIn	SFTime	change_intarr4_color

				eventIn	SFTime	change_extarr1_color		#вход€щее событие генерируемое таймером дл€ мигани€ 1й стрелочки момента внешн. рамки
				eventIn	SFTime	change_extarr2_color
				eventIn	SFTime	change_extarr3_color
				eventIn	SFTime	change_extarr4_color

				eventIn SFTime send_rotation	#событие с таймера, инициирующее передачу углов поворота во внешний скрипт
				eventIn	SFTime check_rotation_int	#событие с таймера дл€ проверки угла дл€ остановки вращени€ внутренней рамки

				eventOut SFBool	hide_moments_panel IS hide_moments_panel	#внешние событи€ прототипа показ и скрытие кнопок управлени€ моментами
				eventOut SFBool show_moments_panel IS show_moments_panel
				eventOut SFBool	hide_navigation_panel IS hide_navigation_panel #внешнее событие прототипа показ и скрытие всех остальных кнопок навигации
				eventOut SFBool	show_navigation_panel IS show_navigation_panel

				eventOut SFString value_int_moment IS value_int_moment	#внешние событи€ прототипа перенос значений момента во внешний скрипт (дл€ JS)
				eventOut SFString value_ext_moment IS value_ext_moment

				eventOut MFVec3f extrusion_spin_int_ramka1		#дл€ увеличени€ и уменьшени€ длинны стрелки моментов внутр. рамки
				eventOut MFVec3f extrusion_spin_int_ramka2
				eventOut MFVec3f extrusion_spin_int_ramka3
				eventOut MFVec3f extrusion_spin_int_ramka4

				eventOut MFVec3f extrusion_spin_ext_ramka1		#дл€ увеличени€ и уменьшени€ длинны стрелки моментов внешн. рамки
				eventOut MFVec3f extrusion_spin_ext_ramka2
				eventOut MFVec3f extrusion_spin_ext_ramka3
				eventOut MFVec3f extrusion_spin_ext_ramka4

				eventOut MFRotation	to_orient_interpol_rotor		#значение keyValue в orient_interpol_rotor 
				eventOut MFRotation	to_orient_interpol_rotor1		#значение keyValue в orient_interpol_rotor1
				eventOut MFRotation	to_orient_interpol_arr_rotor	#значение keyValue в orient_interpol_arr_rotor
				eventOut MFRotation	to_orient_interpol_int_ramka	#значение keyValue в orient_interpol_int_ramka
				eventOut MFRotation	to_orient_interpol_ext_ramka	#значение keyValue в orient_interpol_ext_ramka

				eventOut MFString to_arr1_rotor_tex				#дл€ смены текстур стрелок ротора
				eventOut MFString to_arr2_rotor_tex

				eventOut SFRotation value_int_rotation IS value_int_rotation		#дл€ передачи угла поворота внутренней рамки во внешний скрипт
				eventOut SFRotation value_ext_rotation IS value_ext_rotation

				eventIn	SFBool moment_increase IS moment_incr	#внешнее событие от кнопки, чтобы увеличить выбранный момент
				eventIn	SFBool moment_decrease IS moment_decr	#внешнее событие от кнопки, чтобы уменьшить выбранный момент

				eventIn	SFString num_int_moment_select IS num_int_moment_select	#внешнее событие из JS дл€ установки момента на внутренней рамке
				eventIn	SFString num_ext_moment_select IS num_ext_moment_select	#внешнее событие из JS дл€ установки момента на внешней рамке
				eventIn	MFString start_rotation_gyro IS	js_params_rotation_gyro #внешнее событие из JS приход€т параметры движени€ и инициализаци€ движени€

				field SFNode timesens_for_flash_arrow USE timesens_for_flash_arrow	#сенсор времени дл€ мигани€ стрелок
		
				field SFNode shape_intarr1 USE shape_intarr1	#геометри€ конуса 1й стрелки момента на	внутр. рамке
				field SFNode shape_intarr2 USE shape_intarr2
				field SFNode shape_intarr3 USE shape_intarr3
				field SFNode shape_intarr4 USE shape_intarr4

				field SFNode shape_intcyl1 USE shape_intcyl1	#геометри€ ствола 1й стрелки момента на	внутр. рамке	
				field SFNode shape_intcyl2 USE shape_intcyl2
				field SFNode shape_intcyl3 USE shape_intcyl3
				field SFNode shape_intcyl4 USE shape_intcyl4

				field SFNode shape_extarr1 USE shape_extarr1	#геометри€ конуса 1й стрелки момента на	внешн. рамке
				field SFNode shape_extarr2 USE shape_extarr2
				field SFNode shape_extarr3 USE shape_extarr3
				field SFNode shape_extarr4 USE shape_extarr4

				field SFNode shape_extcyl1 USE shape_extcyl1	#геометри€ ствола 1й стрелки момента на	внешн. рамке	
				field SFNode shape_extcyl2 USE shape_extcyl2
				field SFNode shape_extcyl3 USE shape_extcyl3
				field SFNode shape_extcyl4 USE shape_extcyl4

				field SFNode shape_int_ramka1 USE shape_int_ramka1		#геометри€ торцов внутренней рамки
				field SFNode shape_int_ramka2 USE shape_int_ramka2
				field SFNode shape_int_ramka3 USE shape_int_ramka3
				field SFNode shape_int_ramka4 USE shape_int_ramka4

				field SFNode shape_ext_ramka1 USE shape_ext_ramka1		#геометри€ торцов внешней рамки
				field SFNode shape_ext_ramka2 USE shape_ext_ramka2
				field SFNode shape_ext_ramka3 USE shape_ext_ramka3
				field SFNode shape_ext_ramka4 USE shape_ext_ramka4

				field MFNode sw_int_ramka1_arrow USE switch_int_ramka1_arrow	#стрелочки моментов внутр. рамки
				field MFNode sw_int_ramka2_arrow USE switch_int_ramka2_arrow
				field MFNode sw_int_ramka3_arrow USE switch_int_ramka3_arrow
				field MFNode sw_int_ramka4_arrow USE switch_int_ramka4_arrow

				field MFNode sw_ext_ramka1_arrow USE switch_ext_ramka1_arrow	#стрелочки моментов внешн. рамки
				field MFNode sw_ext_ramka2_arrow USE switch_ext_ramka2_arrow
				field MFNode sw_ext_ramka3_arrow USE switch_ext_ramka3_arrow
				field MFNode sw_ext_ramka4_arrow USE switch_ext_ramka4_arrow

				field SFNode extrusion_int_ramka1_arrow USE	extrusion_int_ramka1_arrow	#extrusion-ы со стрелочками моментов на внутренней рамке
				field SFNode extrusion_int_ramka2_arrow USE	extrusion_int_ramka2_arrow
				field SFNode extrusion_int_ramka3_arrow USE	extrusion_int_ramka3_arrow
				field SFNode extrusion_int_ramka4_arrow USE	extrusion_int_ramka4_arrow

				field SFNode extrusion_ext_ramka1_arrow USE	extrusion_ext_ramka1_arrow	#extrusion-ы со стрелочками моментов на внешней рамке
				field SFNode extrusion_ext_ramka2_arrow USE	extrusion_ext_ramka2_arrow
				field SFNode extrusion_ext_ramka3_arrow USE	extrusion_ext_ramka3_arrow
				field SFNode extrusion_ext_ramka4_arrow USE	extrusion_ext_ramka4_arrow


				field SFNode ext_ramka_transform USE ext_ramka
				field SFNode int_ramka_transform USE int_ramka
				field SFNode rotor1_transform USE rotor1
				field SFNode main_gyro_script USE main_gyro_script

				field SFNode timesens_for_rotor USE	timesens_for_rotor
				field SFNode timesens_for_arr_rotor USE	timesens_for_arr_rotor
				field SFNode timesens_for_int_ramka USE	timesens_for_int_ramka
				field SFNode timesens_for_ext_ramka USE	timesens_for_ext_ramka
				field SFNode timesens_for_send_rotations USE timesens_for_send_rotations
				field SFNode timesens_for_stop_int_ramka USE timesens_for_stop_int_ramka

				field SFNode orient_interpol_rotor USE orient_interpol_rotor
				field SFNode orient_interpol_rotor1 USE	orient_interpol_rotor1
				field SFNode orient_interpol_arr_rotor USE orient_interpol_arr_rotor
				field SFNode orient_interpol_int_ramka USE orient_interpol_int_ramka
				field SFNode orient_interpol_ext_ramka USE orient_interpol_ext_ramka

				field SFNode ext_ramka USE ext_ramka
				field SFNode int_ramka USE int_ramka
				field SFNode rotor USE rotor
				field SFNode rotor1 USE	rotor1
				field SFNode arr_rotor USE arr_rotor
				field SFNode arr1_rotor_tex USE arr1_rotor_tex
				field SFNode arr2_rotor_tex USE arr2_rotor_tex
				field MFNode sw_arr_rotor USE switch_arr_rotor

				#скриптовые переменные
				field SFColor act_color_ramka .4, .54, .26
				field SFColor norm_color_int_ramka .88, .32, .2
				field SFColor norm_color_ext_ramka .54 .05 .25
				field SFColor selected_color_ramka .2, 1, 1
				field SFFloat cur_int_selected 0	#текуща€ выбранна€ сторона внутренней рамки
				field SFFloat cur_ext_selected 0	#текуща€ выбранна€ сторона внешней рамки
				field SFFloat cur_intarr1_type 0	#текущее состо€ние цвета стрелочки момента на внутр. рамке (1 или 0)
				field SFFloat cur_intarr2_type 0
				field SFFloat cur_intarr3_type 0
				field SFFloat cur_intarr4_type 0
				field SFFloat cur_extarr1_type 0	#текущее состо€ние цвета стрелочки момента на внешн. рамке (1 или 0)
				field SFFloat cur_extarr2_type 0
				field SFFloat cur_extarr3_type 0
				field SFFloat cur_extarr4_type 0
				field SFFloat norm_shininess_arr .1		#нормальное значение shininess дл€ стрелочки моментов (дл€ мигани€)
				field SFFloat act_shininess_arr .008	#активное значение shininess дл€ стрелочки моментов	(дл€ мигани€)
				field SFColor act_diffusecolor_arr 0.88 0.2 0.2	#активный цвет стрелочки в момент движени€ модели
				field SFColor norm_diffusecolor_arr .16 .3 .3	#обычный цвет стрелочки
				field SFFloat cur_int_moment_selected 0	#текущее значение выбранного момента на внутр. рамке (стрелочки)
				field SFFloat cur_ext_moment_selected 0	#текущее значение выбранного момента на внешн. рамке (стрелочки)
				field SFFloat value_moment_int	0	#величина момента по внутренней рамке
				field SFFloat value_default_moment_int 3.0	#величина момента по внутренней рамке (по умолчанию) когда только по€вилась стрелка
				field MFVec3f default_spin [0 1.5 0, 0 -1.5 0]	#значение опорных точек стрелки по умолчанию
				field SFFloat value_max_moment_int	5.0	#величина максимального момента по внутренней рамке
				field SFFloat value_min_moment_int	1.0	#величина минимального момента по внутренней рамке
				field SFFloat value_moment_ext	0	#величина момента по внешней рамке
				field SFFloat value_default_moment_ext 3.0	#величина момента по внешней рамке (по умолчанию) когда только по€вилась стрелка
				field SFFloat value_max_moment_ext	5.0	#величина максимального момента по внешней рамке
				field SFFloat value_min_moment_ext	1.0	#величина минимального момента по внешней рамке
				field SFFloat delta_mom 0.2	#величина дельта, на которую мен€етс€ момент в ту или иную сторону при нажатии на кнопку
				field SFFloat delta_geometry_mom 0.2	#величина (длина) на сколько удлинн€етс€/укорачиваетс€ стрелка после нажати€ на кнопку изменени€ момента
				field SFFloat SFFloat_num 0		  #переменна€ дл€ преобразовани€ String в Float
				field SFInt32 SFInt32_num 0		  #переменна€ дл€ преобразовани€ String в Int32
				field MFString store_rotation_gyro ["0,0","0,0","0"]	#переменна€ дл€ хранени€ параметров текущего движени€ рамок гироскопа
				field SFFloat dt 0		#дельта времени которую крутилась внешн€€ рамка до момента остановки внутренней рамки
				field SFBool was_start_int_ramka_timesens	FALSE #переменна€ флаг, сообщающа€, что было начато слежение за углом смещени€ внутренней рамки (чтобы добавл€ть маршрут и запускать таймер только один раз в функции start_rotation_gyro())

				mustEvaluate TRUE
				directOutput TRUE
				url	"vrmlscript:
					function int_ramka1_touchsens_act(value,t) {	//выделение части внутр. рамки цветом при наведении на неЄ
						if(cur_int_selected!=1){
							if(value) {
								shape_int_ramka1.appearance.material.diffuseColor = act_color_ramka;
							} else {
								shape_int_ramka1.appearance.material.diffuseColor = norm_color_int_ramka;	
							}
						}
					}
					function int_ramka2_touchsens_act(value,t) {	//выделение части внутр. рамки цветом при наведении на неЄ
						if(cur_int_selected!=2){
							if(value) {
								shape_int_ramka2.appearance.material.diffuseColor = act_color_ramka;
							} else {
								shape_int_ramka2.appearance.material.diffuseColor = norm_color_int_ramka;	
							}
						}
					}
					function int_ramka3_touchsens_act(value,t) {	//выделение части внутр. рамки цветом при наведении на неЄ
						if(cur_int_selected!=3){
							if(value) {
								shape_int_ramka3.appearance.material.diffuseColor = act_color_ramka;
							} else {
							
								shape_int_ramka3.appearance.material.diffuseColor = norm_color_int_ramka;	
							}
						}
					}
					function int_ramka4_touchsens_act(value,t) {	//выделение части внутр. рамки цветом при наведении на неЄ
						if(cur_int_selected!=4){
							if(value) {
								shape_int_ramka4.appearance.material.diffuseColor = act_color_ramka;
							} else {
								shape_int_ramka4.appearance.material.diffuseColor = norm_color_int_ramka;	
							}
						}
					}
					function ext_ramka1_touchsens_act(value,t) {	//выделение части внешн. рамки цветом при наведении на неЄ
						if(cur_ext_selected!=1){
							if(value) {
								shape_ext_ramka1.appearance.material.diffuseColor = act_color_ramka;
							} else {
								shape_ext_ramka1.appearance.material.diffuseColor = norm_color_ext_ramka;	
							}
						}
					}
					function ext_ramka2_touchsens_act(value,t) {	//выделение части внешн. рамки цветом при наведении на неЄ
						if(cur_ext_selected!=2){
							if(value) {
								shape_ext_ramka2.appearance.material.diffuseColor = act_color_ramka;
							} else {
								shape_ext_ramka2.appearance.material.diffuseColor = norm_color_ext_ramka;	
							}
						}
					}
					function ext_ramka3_touchsens_act(value,t) {	//выделение части внешн. рамки цветом при наведении на неЄ
						if(cur_ext_selected!=3){
							if(value) {
								shape_ext_ramka3.appearance.material.diffuseColor = act_color_ramka;
							} else {
							
								shape_ext_ramka3.appearance.material.diffuseColor = norm_color_ext_ramka;	
							}
						}
					}
					function ext_ramka4_touchsens_act(value,t) {	//выделение части внешн. рамки цветом при наведении на неЄ
						if(cur_ext_selected!=4){
							if(value) {
								shape_ext_ramka4.appearance.material.diffuseColor = act_color_ramka;
							} else {
								shape_ext_ramka4.appearance.material.diffuseColor = norm_color_ext_ramka;	
							}
						}
					}
					function int_ramka1_touchsens_click(value,t){	//выделение части внутр. рамки цветом после клика
						if (value){
							cur_int_selected = 1;
							sw_int_ramka1_arrow[0].whichChoice=0;
							sw_int_ramka2_arrow[0].whichChoice=-1;
							sw_int_ramka3_arrow[0].whichChoice=-1;
							sw_int_ramka4_arrow[0].whichChoice=-1;
							shape_int_ramka1.appearance.material.diffuseColor = selected_color_ramka;
							shape_int_ramka2.appearance.material.diffuseColor = norm_color_int_ramka;
							shape_int_ramka3.appearance.material.diffuseColor = norm_color_int_ramka;
							shape_int_ramka4.appearance.material.diffuseColor = norm_color_int_ramka;
							del_routes_int_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внутр. рамки
							cur_int_moment_selected=0;
							del_routes_ext_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внешн. рамки
							cur_ext_moment_selected=0; //обнулили значение выбранного момента на внешн. рамке

							del_colors_ext_arrs();	//обнул€ем цвета стрелок моментов
							value_moment_int=value_default_moment_int;	//обнул€ем значение момента на внутренней рамке
							value_int_moment= new String(cur_int_selected+','+value_moment_int);	//событие во внешний скрипт (перенос момента дл€ JS)
							hide_moments_panel=true;	//скрываем кнопки управлени€ моментами
							extrusion_spin_int_ramka1=default_spin;		//обнуление опорных точек стрелок моментов внутр. рамки
							extrusion_spin_int_ramka2=default_spin;
							extrusion_spin_int_ramka3=default_spin;
							extrusion_spin_int_ramka4=default_spin;
						}
					}
					function int_ramka2_touchsens_click(value,t){	//выделение части внутр. рамки цветом после клика
						if (value){
							cur_int_selected = 2;
							sw_int_ramka1_arrow[0].whichChoice=-1;
							sw_int_ramka2_arrow[0].whichChoice=0;
							sw_int_ramka3_arrow[0].whichChoice=-1;
							sw_int_ramka4_arrow[0].whichChoice=-1;
							shape_int_ramka1.appearance.material.diffuseColor = norm_color_int_ramka;
							shape_int_ramka2.appearance.material.diffuseColor = selected_color_ramka;
							shape_int_ramka3.appearance.material.diffuseColor = norm_color_int_ramka;
							shape_int_ramka4.appearance.material.diffuseColor = norm_color_int_ramka;								
							del_routes_int_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внутр. рамки
							cur_int_moment_selected=0;
							del_routes_ext_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внешн. рамки
							cur_ext_moment_selected=0; //обнулили значение выбранного момента на внешн. рамке

							del_colors_ext_arrs();	//обнул€ем цвета стрелок моментов
							value_moment_int=value_default_moment_int;	//обнул€ем значение момента на внутренней рамке
							value_int_moment= new String(cur_int_selected+','+value_moment_int);	//событие во внешний скрипт (перенос момента дл€ JS)
							hide_moments_panel=true;	//скрываем кнопки управлени€ моментами
							extrusion_spin_int_ramka1=default_spin;		//обнуление опорных точек стрелок моментов внутр. рамки
							extrusion_spin_int_ramka2=default_spin;
							extrusion_spin_int_ramka3=default_spin;
							extrusion_spin_int_ramka4=default_spin;
						}
					}
					function int_ramka3_touchsens_click(value,t){	//выделение части внутр. рамки цветом после клика
						if (value){
							cur_int_selected = 3;
							sw_int_ramka1_arrow[0].whichChoice=-1;
							sw_int_ramka2_arrow[0].whichChoice=-1;
							sw_int_ramka3_arrow[0].whichChoice=0;
							sw_int_ramka4_arrow[0].whichChoice=-1;
							shape_int_ramka1.appearance.material.diffuseColor = norm_color_int_ramka;
							shape_int_ramka2.appearance.material.diffuseColor = norm_color_int_ramka;
							shape_int_ramka3.appearance.material.diffuseColor = selected_color_ramka;
							shape_int_ramka4.appearance.material.diffuseColor = norm_color_int_ramka;								
							del_routes_int_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внутр. рамки
							cur_int_moment_selected=0;
							del_routes_ext_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внешн. рамки
							cur_ext_moment_selected=0; //обнулили значение выбранного момента на внешн. рамке

							del_colors_ext_arrs();	//обнул€ем цвета стрелок моментов
							value_moment_int=value_default_moment_int;	//обнул€ем значение момента на внутренней рамке
							value_int_moment= new String(cur_int_selected+','+value_moment_int);	//событие во внешний скрипт (перенос момента дл€ JS)
							hide_moments_panel=true;	//скрываем кнопки управлени€ моментами
							extrusion_spin_int_ramka1=default_spin;		//обнуление опорных точек стрелок моментов внутр. рамки
							extrusion_spin_int_ramka2=default_spin;
							extrusion_spin_int_ramka3=default_spin;
							extrusion_spin_int_ramka4=default_spin;
						}
					}
					function int_ramka4_touchsens_click(value,t){	//выделение части внутр. рамки цветом после клика
						if (value){
							cur_int_selected = 4;
							sw_int_ramka1_arrow[0].whichChoice=-1;
							sw_int_ramka2_arrow[0].whichChoice=-1;
							sw_int_ramka3_arrow[0].whichChoice=-1;
							sw_int_ramka4_arrow[0].whichChoice=0;
							shape_int_ramka1.appearance.material.diffuseColor = norm_color_int_ramka;
							shape_int_ramka2.appearance.material.diffuseColor = norm_color_int_ramka;
							shape_int_ramka3.appearance.material.diffuseColor = norm_color_int_ramka;
							shape_int_ramka4.appearance.material.diffuseColor = selected_color_ramka;								
							del_routes_int_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внутр. рамки
							cur_int_moment_selected=0;
							del_routes_ext_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внешн. рамки
							cur_ext_moment_selected=0; //обнулили значение выбранного момента на внешн. рамке

							del_colors_ext_arrs();	//обнул€ем цвета стрелок моментов
							value_moment_int=value_default_moment_int;	//обнул€ем значение момента на внутренней рамке
							value_int_moment= new String(cur_int_selected+','+value_moment_int);	//событие во внешний скрипт (перенос момента дл€ JS)
							hide_moments_panel=true;	//скрываем кнопки управлени€ моментами
							extrusion_spin_int_ramka1=default_spin;		//обнуление опорных точек стрелок моментов внутр. рамки
							extrusion_spin_int_ramka2=default_spin;
							extrusion_spin_int_ramka3=default_spin;
							extrusion_spin_int_ramka4=default_spin;
						}
					}
					function ext_ramka1_touchsens_click(value,t){	//выделение части внешн. рамки цветом после клика
						if (value){
							cur_ext_selected = 1;
							sw_ext_ramka1_arrow[0].whichChoice=0;
							sw_ext_ramka2_arrow[0].whichChoice=-1;
							sw_ext_ramka3_arrow[0].whichChoice=-1;
							sw_ext_ramka4_arrow[0].whichChoice=-1;
							shape_ext_ramka1.appearance.material.diffuseColor = selected_color_ramka;
							shape_ext_ramka2.appearance.material.diffuseColor = norm_color_ext_ramka;
							shape_ext_ramka3.appearance.material.diffuseColor = norm_color_ext_ramka;
							shape_ext_ramka4.appearance.material.diffuseColor = norm_color_ext_ramka;		
							del_routes_ext_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внешн. рамки
							cur_ext_moment_selected=0;
							del_routes_int_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внутр. рамки						
							cur_int_moment_selected=0;	//обнулили значение выбранного момента на внутр. рамке

							del_colors_int_arrs();	//обнул€ем цвета стрелок моментов
							value_moment_ext=value_default_moment_ext;	//обнул€ем значение момента на внешней рамке
							value_ext_moment= new String(cur_ext_selected+','+value_moment_ext);	//событие во внешний скрипт (перенос момента дл€ JS)
							hide_moments_panel=true;	//скрываем кнопки управлени€ моментами
							extrusion_spin_ext_ramka1=default_spin;		//обнуление опорных точек стрелок моментов внешн. рамки
							extrusion_spin_ext_ramka2=default_spin;
							extrusion_spin_ext_ramka3=default_spin;
							extrusion_spin_ext_ramka4=default_spin;
						}
					}
					function ext_ramka2_touchsens_click(value,t){	//выделение части внешн. рамки цветом после клика
						if (value){
							cur_ext_selected = 2;
							sw_ext_ramka1_arrow[0].whichChoice=-1;
							sw_ext_ramka2_arrow[0].whichChoice=0;
							sw_ext_ramka3_arrow[0].whichChoice=-1;
							sw_ext_ramka4_arrow[0].whichChoice=-1;
							shape_ext_ramka1.appearance.material.diffuseColor = norm_color_ext_ramka;
							shape_ext_ramka2.appearance.material.diffuseColor = selected_color_ramka;
							shape_ext_ramka3.appearance.material.diffuseColor = norm_color_ext_ramka;
							shape_ext_ramka4.appearance.material.diffuseColor = norm_color_ext_ramka;
							del_routes_ext_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внешн. рамки
							cur_ext_moment_selected=0;
							del_routes_int_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внутр. рамки
							cur_int_moment_selected=0;	//обнулили значение выбранного момента на внутр. рамке

							del_colors_int_arrs();	//обнул€ем цвета стрелок моментов
							value_moment_ext=value_default_moment_ext;	//обнул€ем значение момента на внешней рамке
							value_ext_moment= new String(cur_ext_selected+','+value_moment_ext);	//событие во внешний скрипт (перенос момента дл€ JS)
							hide_moments_panel=true;	//скрываем кнопки управлени€ моментами
							extrusion_spin_ext_ramka1=default_spin;		//обнуление опорных точек стрелок моментов внешн. рамки
							extrusion_spin_ext_ramka2=default_spin;
							extrusion_spin_ext_ramka3=default_spin;
							extrusion_spin_ext_ramka4=default_spin;
						}
					}
					function ext_ramka3_touchsens_click(value,t){	//выделение части внешн. рамки цветом после клика
						if (value){
							cur_ext_selected = 3;
							sw_ext_ramka1_arrow[0].whichChoice=-1;
							sw_ext_ramka2_arrow[0].whichChoice=-1;
							sw_ext_ramka3_arrow[0].whichChoice=0;
							sw_ext_ramka4_arrow[0].whichChoice=-1;
							shape_ext_ramka1.appearance.material.diffuseColor = norm_color_ext_ramka;
							shape_ext_ramka2.appearance.material.diffuseColor = norm_color_ext_ramka;
							shape_ext_ramka3.appearance.material.diffuseColor = selected_color_ramka;
							shape_ext_ramka4.appearance.material.diffuseColor = norm_color_ext_ramka;
							del_routes_ext_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внешн. рамки
							cur_ext_moment_selected=0;
							del_routes_int_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внутр. рамки
							cur_int_moment_selected=0;	//обнулили значение выбранного момента на внутр. рамке

							del_colors_int_arrs();	//обнул€ем цвета стрелок моментов
							value_moment_ext=value_default_moment_ext;	//обнул€ем значение момента на внешней рамке
							value_ext_moment= new String(cur_ext_selected+','+value_moment_ext);	//событие во внешний скрипт (перенос момента дл€ JS)
							hide_moments_panel=true;	//скрываем кнопки управлени€ моментами
							extrusion_spin_ext_ramka1=default_spin;		//обнуление опорных точек стрелок моментов внешн. рамки
							extrusion_spin_ext_ramka2=default_spin;
							extrusion_spin_ext_ramka3=default_spin;
							extrusion_spin_ext_ramka4=default_spin;
						}
					}
					function ext_ramka4_touchsens_click(value,t){	//выделение части внешн. рамки цветом после клика
						if (value){
							cur_ext_selected = 4;
							sw_ext_ramka1_arrow[0].whichChoice=-1;
							sw_ext_ramka2_arrow[0].whichChoice=-1;
							sw_ext_ramka3_arrow[0].whichChoice=-1;
							sw_ext_ramka4_arrow[0].whichChoice=0;
							shape_ext_ramka1.appearance.material.diffuseColor = norm_color_ext_ramka;
							shape_ext_ramka2.appearance.material.diffuseColor = norm_color_ext_ramka;
							shape_ext_ramka3.appearance.material.diffuseColor = norm_color_ext_ramka;
							shape_ext_ramka4.appearance.material.diffuseColor = selected_color_ramka;
							del_routes_ext_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внешн. рамки
							cur_ext_moment_selected=0;
							del_routes_int_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внутр. рамки
							cur_int_moment_selected=0;	//обнулили значение выбранного момента на внутр. рамке

							del_colors_int_arrs();	//обнул€ем цвета стрелок моментов
							value_moment_ext=value_default_moment_ext;	//обнул€ем значение момента на внешней рамке
							value_ext_moment= new String(cur_ext_selected+','+value_moment_ext);	//событие во внешний скрипт (перенос момента дл€ JS)
							hide_moments_panel=true;	//скрываем кнопки управлени€ моментами
							extrusion_spin_ext_ramka1=default_spin;		//обнуление опорных точек стрелок моментов внешн. рамки
							extrusion_spin_ext_ramka2=default_spin;
							extrusion_spin_ext_ramka3=default_spin;
							extrusion_spin_ext_ramka4=default_spin;
						}
					}
					function clear_int_moment(value,t){				//убирает выделение с внутр. рамки и стрелочку с моментом
						cur_int_selected=0;	//обнулили значение выбранной внутр. рамки
						sw_int_ramka1_arrow[0].whichChoice=-1;
						sw_int_ramka2_arrow[0].whichChoice=-1;
						sw_int_ramka3_arrow[0].whichChoice=-1;
						sw_int_ramka4_arrow[0].whichChoice=-1;
						shape_int_ramka1.appearance.material.diffuseColor = norm_color_int_ramka;
						shape_int_ramka2.appearance.material.diffuseColor = norm_color_int_ramka;
						shape_int_ramka3.appearance.material.diffuseColor = norm_color_int_ramka;
						shape_int_ramka4.appearance.material.diffuseColor = norm_color_int_ramka;

						del_colors_ext_arrs();	//обнул€ем цвета стрелок моментов
						del_colors_int_arrs();

						timesens_for_flash_arrow.stopTime=t;
						del_routes_ext_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внешн. рамки
						del_routes_int_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внутр. рамки
						cur_int_moment_selected=0;	//обнулили значение выбранного момента на внутр. рамке
						hide_moments_panel=true;	//скрываем кнопки управлени€ моментами
						value_moment_int=0;	//обнул€ем значение момента на внутр. рамке
						value_int_moment= new String('0,0');	//событие во внешний скрипт (перенос момента дл€ JS)
						extrusion_spin_int_ramka1=default_spin;		//обнуление опорных точек стрелок моментов внутр. рамки
						extrusion_spin_int_ramka2=default_spin;
						extrusion_spin_int_ramka3=default_spin;
						extrusion_spin_int_ramka4=default_spin;
					}
					function clear_ext_moment(value,t){				//убирает выделение с внешн. рамки и стрелочку с моментом
						cur_ext_selected=0;	//обнулили значение выбранной внешн. рамки
						sw_ext_ramka1_arrow[0].whichChoice=-1;
						sw_ext_ramka2_arrow[0].whichChoice=-1;
						sw_ext_ramka3_arrow[0].whichChoice=-1;
						sw_ext_ramka4_arrow[0].whichChoice=-1;
						shape_ext_ramka1.appearance.material.diffuseColor = norm_color_ext_ramka;
						shape_ext_ramka2.appearance.material.diffuseColor = norm_color_ext_ramka;
						shape_ext_ramka3.appearance.material.diffuseColor = norm_color_ext_ramka;
						shape_ext_ramka4.appearance.material.diffuseColor = norm_color_ext_ramka;

						del_colors_ext_arrs();	//обнул€ем цвета стрелок моментов
						del_colors_int_arrs();

						timesens_for_flash_arrow.stopTime=t;
						del_routes_ext_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внешн. рамки
						del_routes_int_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внутр. рамки
						cur_ext_moment_selected=0; //обнулили значение выбранного момента на внешн. рамке
						hide_moments_panel=true;	//скрываем кнопки управлени€ моментами
						value_moment_ext=0;	//обнул€ем значение момента на внешней рамке
						value_ext_moment= new String('0,0');	//событие во внешний скрипт (перенос момента дл€ JS)
						extrusion_spin_ext_ramka1=default_spin;		//обнуление опорных точек стрелок моментов внешн. рамки
						extrusion_spin_ext_ramka2=default_spin;
						extrusion_spin_ext_ramka3=default_spin;
						extrusion_spin_ext_ramka4=default_spin;
					}
					function ext_ramka_corner_proto(value,t){	//передаЄт вращение в прототип к внешн. рамке
						ext_ramka_transform.rotation=value;
					}
					function int_ramka_corner_proto(value,t){	//передаЄт вращение в прототип к внутр. рамке и ротеру
						int_ramka_transform.rotation=value;
						rotor1_transform.rotation=value;
					}
					function int_ramka1_arrow_act(value,t){		//запускает механизм мигани€ 1й стрелочки момента внутр. рамки после наведени€ на неЄ
						if(value){
							if(cur_int_moment_selected!=1){
								Browser.addRoute(timesens_for_flash_arrow, 'cycleTime', main_gyro_script, 'change_intarr1_color');
								timesens_for_flash_arrow.startTime=t;
							}
						} else {
							if(cur_int_moment_selected!=1){
								if(cur_ext_moment_selected==0 && cur_int_moment_selected==0){ timesens_for_flash_arrow.stopTime=t; }
								Browser.deleteRoute(timesens_for_flash_arrow, 'cycleTime', main_gyro_script, 'change_intarr1_color');
								shape_intarr1.appearance.material.shininess=norm_shininess_arr;
								shape_intcyl1.appearance.material.shininess=norm_shininess_arr;
							}
						}
					}
					function int_ramka2_arrow_act(value,t){		//запускает механизм мигани€ 2й стрелочки момента внутр. рамки после наведени€ на неЄ	
						if(value){
							if(cur_int_moment_selected!=2){
								Browser.addRoute(timesens_for_flash_arrow, 'cycleTime', main_gyro_script, 'change_intarr2_color');
								timesens_for_flash_arrow.startTime=t;
							}
						} else {
							if(cur_int_moment_selected!=2){
								if(cur_ext_moment_selected==0 && cur_int_moment_selected==0){ timesens_for_flash_arrow.stopTime=t; }
								Browser.deleteRoute(timesens_for_flash_arrow, 'cycleTime', main_gyro_script, 'change_intarr2_color');
								shape_intarr2.appearance.material.shininess=norm_shininess_arr;
								shape_intcyl2.appearance.material.shininess=norm_shininess_arr;
							}
						}
					}
					function int_ramka3_arrow_act(value,t){		//запускает механизм мигани€ 3й стрелочки момента внутр. рамки после наведени€ на неЄ	
						if(value){
							if(cur_int_moment_selected!=3){
								Browser.addRoute(timesens_for_flash_arrow, 'cycleTime', main_gyro_script, 'change_intarr3_color');
								timesens_for_flash_arrow.startTime=t;
							}
						} else {
							if(cur_int_moment_selected!=3){
								if(cur_ext_moment_selected==0 && cur_int_moment_selected==0){ timesens_for_flash_arrow.stopTime=t; }
								Browser.deleteRoute(timesens_for_flash_arrow, 'cycleTime', main_gyro_script, 'change_intarr3_color');
								shape_intarr3.appearance.material.shininess=norm_shininess_arr;
								shape_intcyl3.appearance.material.shininess=norm_shininess_arr;
							}
						}
					}
					function int_ramka4_arrow_act(value,t){		//запускает механизм мигани€ 4й стрелочки момента внутр. рамки после наведени€ на неЄ	
						if(value){
							if(cur_int_moment_selected!=4){
								Browser.addRoute(timesens_for_flash_arrow, 'cycleTime', main_gyro_script, 'change_intarr4_color');
								timesens_for_flash_arrow.startTime=t;
							}
						} else {
							if(cur_int_moment_selected!=4){
								if(cur_ext_moment_selected==0 && cur_int_moment_selected==0){ timesens_for_flash_arrow.stopTime=t; }
								Browser.deleteRoute(timesens_for_flash_arrow, 'cycleTime', main_gyro_script, 'change_intarr4_color');
								shape_intarr4.appearance.material.shininess=norm_shininess_arr;
								shape_intcyl4.appearance.material.shininess=norm_shininess_arr;
							}
						}
					}
					function ext_ramka1_arrow_act(value,t){		//запускает механизм мигани€ 1й стрелочки момента внешн. рамки после наведени€ на неЄ
						if(value){
							if(cur_ext_moment_selected!=1){
								Browser.addRoute(timesens_for_flash_arrow, 'cycleTime', main_gyro_script, 'change_extarr1_color');
								timesens_for_flash_arrow.startTime=t;
							}
						} else {
							if(cur_ext_moment_selected!=1){
								if(cur_int_moment_selected==0 && cur_ext_moment_selected==0){ timesens_for_flash_arrow.stopTime=t; }
								Browser.deleteRoute(timesens_for_flash_arrow, 'cycleTime', main_gyro_script, 'change_extarr1_color');
								shape_extarr1.appearance.material.shininess=norm_shininess_arr;
								shape_extcyl1.appearance.material.shininess=norm_shininess_arr;
							}
						}
					}
					function ext_ramka2_arrow_act(value,t){		//запускает механизм мигани€ 2й стрелочки момента внешн. рамки после наведени€ на неЄ
						if(value){
							if(cur_ext_moment_selected!=2){
								Browser.addRoute(timesens_for_flash_arrow, 'cycleTime', main_gyro_script, 'change_extarr2_color');
								timesens_for_flash_arrow.startTime=t;
							}
						} else {
							if(cur_ext_moment_selected!=2){
								if(cur_int_moment_selected==0 && cur_ext_moment_selected==0){ timesens_for_flash_arrow.stopTime=t; }
								Browser.deleteRoute(timesens_for_flash_arrow, 'cycleTime', main_gyro_script, 'change_extarr2_color');
								shape_extarr2.appearance.material.shininess=norm_shininess_arr;
								shape_extcyl2.appearance.material.shininess=norm_shininess_arr;
							}
						}
					}
					function ext_ramka3_arrow_act(value,t){		//запускает механизм мигани€ 3й стрелочки момента внешн. рамки после наведени€ на неЄ
						if(value){
							if(cur_ext_moment_selected!=3){
								Browser.addRoute(timesens_for_flash_arrow, 'cycleTime', main_gyro_script, 'change_extarr3_color');
								timesens_for_flash_arrow.startTime=t;
							}
						} else {
							if(cur_ext_moment_selected!=3){
								if(cur_int_moment_selected==0 && cur_ext_moment_selected==0){ timesens_for_flash_arrow.stopTime=t; }
								Browser.deleteRoute(timesens_for_flash_arrow, 'cycleTime', main_gyro_script, 'change_extarr3_color');
								shape_extarr3.appearance.material.shininess=norm_shininess_arr;
								shape_extcyl3.appearance.material.shininess=norm_shininess_arr;
							}
						}
					}
					function ext_ramka4_arrow_act(value,t){		//запускает механизм мигани€ 4й стрелочки момента внешн. рамки после наведени€ на неЄ
						if(value){
							if(cur_ext_moment_selected!=4){
								Browser.addRoute(timesens_for_flash_arrow, 'cycleTime', main_gyro_script, 'change_extarr4_color');
								timesens_for_flash_arrow.startTime=t;
							}
						} else {
							if(cur_ext_moment_selected!=4){
								if(cur_int_moment_selected==0 && cur_ext_moment_selected==0){ timesens_for_flash_arrow.stopTime=t; }
								Browser.deleteRoute(timesens_for_flash_arrow, 'cycleTime', main_gyro_script, 'change_extarr4_color');
								shape_extarr4.appearance.material.shininess=norm_shininess_arr;
								shape_extcyl4.appearance.material.shininess=norm_shininess_arr;
							}
						}
					}
					function change_intarr1_color(t){		//измен€ет цвет 1й стрелочки момента внутр. рамки по событию cycleTime
						if(cur_intarr1_type){
							cur_intarr1_type=0;
							shape_intarr1.appearance.material.shininess=norm_shininess_arr;
							shape_intcyl1.appearance.material.shininess=norm_shininess_arr;
						} else {
							cur_intarr1_type=1;
							shape_intarr1.appearance.material.shininess=act_shininess_arr;
							shape_intcyl1.appearance.material.shininess=act_shininess_arr;
						}
					}
					function change_intarr2_color(t){		//измен€ет цвет 2й стрелочки момента внутр. рамки по событию cycleTime
						if(cur_intarr2_type){
							cur_intarr2_type=0;
							shape_intarr2.appearance.material.shininess=norm_shininess_arr;
							shape_intcyl2.appearance.material.shininess=norm_shininess_arr;
						} else {
							cur_intarr2_type=1;
							shape_intarr2.appearance.material.shininess=act_shininess_arr;
							shape_intcyl2.appearance.material.shininess=act_shininess_arr;
						}
					}
					function change_intarr3_color(t){		//измен€ет цвет 3й стрелочки момента внутр. рамки по событию cycleTime
						if(cur_intarr3_type){
							cur_intarr3_type=0;
							shape_intarr3.appearance.material.shininess=norm_shininess_arr;
							shape_intcyl3.appearance.material.shininess=norm_shininess_arr;
						} else {
							cur_intarr3_type=1;
							shape_intarr3.appearance.material.shininess=act_shininess_arr;
							shape_intcyl3.appearance.material.shininess=act_shininess_arr;
						}
					}
					function change_intarr4_color(t){		//измен€ет цвет 4й стрелочки момента внутр. рамки по событию cycleTime
						if(cur_intarr4_type){
							cur_intarr4_type=0;
							shape_intarr4.appearance.material.shininess=norm_shininess_arr;
							shape_intcyl4.appearance.material.shininess=norm_shininess_arr;
						} else {
							cur_intarr4_type=1;
							shape_intarr4.appearance.material.shininess=act_shininess_arr;
							shape_intcyl4.appearance.material.shininess=act_shininess_arr;
						}
					}
					function change_extarr1_color(t){		//измен€ет цвет 1й стрелочки момента внешн. рамки по событию cycleTime
						if(cur_extarr1_type){
							cur_extarr1_type=0;
							shape_extarr1.appearance.material.shininess=norm_shininess_arr;
							shape_extcyl1.appearance.material.shininess=norm_shininess_arr;
						} else {
							cur_extarr1_type=1;
							shape_extarr1.appearance.material.shininess=act_shininess_arr;
							shape_extcyl1.appearance.material.shininess=act_shininess_arr;
						}
					}
					function change_extarr2_color(t){		//измен€ет цвет 2й стрелочки момента внешн. рамки по событию cycleTime
						if(cur_extarr2_type){
							cur_extarr2_type=0;
							shape_extarr2.appearance.material.shininess=norm_shininess_arr;
							shape_extcyl2.appearance.material.shininess=norm_shininess_arr;
						} else {							
							cur_extarr2_type=1;
							shape_extarr2.appearance.material.shininess=act_shininess_arr;
							shape_extcyl2.appearance.material.shininess=act_shininess_arr;
						}
					}
					function change_extarr3_color(t){		//измен€ет цвет 3й стрелочки момента внешн. рамки по событию cycleTime
						if(cur_extarr3_type){
							cur_extarr3_type=0;
							shape_extarr3.appearance.material.shininess=norm_shininess_arr;
							shape_extcyl3.appearance.material.shininess=norm_shininess_arr;
						} else {
							cur_extarr3_type=1;
							shape_extarr3.appearance.material.shininess=act_shininess_arr;
							shape_extcyl3.appearance.material.shininess=act_shininess_arr;
						}
					}
					function change_extarr4_color(t){		//измен€ет цвет 4й стрелочки момента внешн. рамки по событию cycleTime
						if(cur_extarr4_type){
							cur_extarr4_type=0;
							shape_extarr4.appearance.material.shininess=norm_shininess_arr;
							shape_extcyl4.appearance.material.shininess=norm_shininess_arr;
						} else {
							cur_extarr4_type=1;
							shape_extarr4.appearance.material.shininess=act_shininess_arr;
							shape_extcyl4.appearance.material.shininess=act_shininess_arr;
						}
					}
					function int_ramka1_arrow_click(value,t){		//сохран€ет 1ю стрелочку в переменной в качестве активной выбранной, и продолжает мигание
						if(value){
							if(cur_int_moment_selected!=1){
								del_routes_ext_arrs();	//удал€ем маршруты дл€ мигани€ стрелок внутр. рамки
								del_routes_int_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внутр. рамки
								del_colors_ext_arrs();	//обнул€ем цвета стрелок моментов
								del_colors_int_arrs();
								value_int_moment=new String(cur_int_selected+','+value_moment_int);	//событие во внешний скрипт (перенос момента дл€ JS)
							}

							cur_int_moment_selected=1;
							cur_ext_moment_selected=0;	//одновременно может быть выбран момент только на одной рамке
							show_moments_panel=true;	//показываем кнопки управлени€ моментами
						}
					}
					function int_ramka2_arrow_click(value,t){		//сохран€ет 2ю стрелочку в переменной в качестве активной выбранной, и продолжает мигание
						if(value){
							if(cur_int_moment_selected!=2){
								del_routes_ext_arrs();	//удал€ем маршруты дл€ мигани€ стрелок внутр. рамки
								del_routes_int_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внутр. рамки
								del_colors_ext_arrs();	//обнул€ем цвета стрелок моментов
								del_colors_int_arrs();
								value_int_moment=new String(cur_int_selected+','+value_moment_int);	//событие во внешний скрипт (перенос момента дл€ JS)
							}

							cur_int_moment_selected=2;
							cur_ext_moment_selected=0;	//одновременно может быть выбран момент только на одной рамке
							show_moments_panel=true;	//показываем кнопки управлени€ моментами
						}
					}
					function int_ramka3_arrow_click(value,t){		//сохран€ет 3ю стрелочку в переменной в качестве активной выбранной, и продолжает мигание
						if(value){
							if(cur_int_moment_selected!=3){
								del_routes_ext_arrs();	//удал€ем маршруты дл€ мигани€ стрелок внутр. рамки
								del_routes_int_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внутр. рамки
								del_colors_ext_arrs();	//обнул€ем цвета стрелок моментов
								del_colors_int_arrs();
								value_int_moment=new String(cur_int_selected+','+value_moment_int);	//событие во внешний скрипт (перенос момента дл€ JS)
							}

							cur_int_moment_selected=3;
							cur_ext_moment_selected=0;	//одновременно может быть выбран момент только на одной рамке
							show_moments_panel=true;	//показываем кнопки управлени€ моментами
						}
					}
					function int_ramka4_arrow_click(value,t){		//сохран€ет 4ю стрелочку в переменной в качестве активной выбранной, и продолжает мигание
						if(value){
							if(cur_int_moment_selected!=4){
								del_routes_ext_arrs();	//удал€ем маршруты дл€ мигани€ стрелок внутр. рамки
								del_routes_int_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внутр. рамки
								del_colors_ext_arrs();	//обнул€ем цвета стрелок моментов
								del_colors_int_arrs();
								value_int_moment=new String(cur_int_selected+','+value_moment_int);	//событие во внешний скрипт (перенос момента дл€ JS)
							}

							cur_int_moment_selected=4;
							cur_ext_moment_selected=0;	//одновременно может быть выбран момент только на одной рамке
							show_moments_panel=true;	//показываем кнопки управлени€ моментами
						}
					}
					function ext_ramka1_arrow_click(value,t){		//сохран€ет 1ю стрелочку в переменной в качестве активной выбранной, и продолжает мигание
						if(value){
							if(cur_ext_moment_selected!=1){
								del_routes_ext_arrs();	//удал€ем маршруты дл€ мигани€ стрелок внутр. рамки
								del_routes_int_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внутр. рамки
								del_colors_ext_arrs();	//обнул€ем цвета стрелок моментов
								del_colors_int_arrs();
								value_ext_moment=new String(cur_ext_selected+','+value_moment_ext);	//событие во внешний скрипт (перенос момента дл€ JS)
							}

							cur_ext_moment_selected=1;
							cur_int_moment_selected=0;	//одновременно может быть выбран момент только на одной рамке
							show_moments_panel=true;	//показываем кнопки управлени€ моментами
						}
					}
					function ext_ramka2_arrow_click(value,t){		//сохран€ет 1ю стрелочку в переменной в качестве активной выбранной, и продолжает мигание
						if(value){
							if(cur_ext_moment_selected!=2){
								del_routes_ext_arrs();	//удал€ем маршруты дл€ мигани€ стрелок внутр. рамки
								del_routes_int_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внутр. рамки
								del_colors_ext_arrs();	//обнул€ем цвета стрелок моментов
								del_colors_int_arrs();
								value_ext_moment=new String(cur_ext_selected+','+value_moment_ext);	//событие во внешний скрипт (перенос момента дл€ JS)
							}

							cur_ext_moment_selected=2;
							cur_int_moment_selected=0;	//одновременно может быть выбран момент только на одной рамке
							show_moments_panel=true;	//показываем кнопки управлени€ моментами
						}
					}
					function ext_ramka3_arrow_click(value,t){		//сохран€ет 1ю стрелочку в переменной в качестве активной выбранной, и продолжает мигание
						if(value){
							if(cur_ext_moment_selected!=3){
								del_routes_ext_arrs();	//удал€ем маршруты дл€ мигани€ стрелок внутр. рамки
								del_routes_int_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внутр. рамки
								del_colors_ext_arrs();	//обнул€ем цвета стрелок моментов
								del_colors_int_arrs();
								value_ext_moment=new String(cur_ext_selected+','+value_moment_ext);	//событие во внешний скрипт (перенос момента дл€ JS)
							}

							cur_ext_moment_selected=3;
							cur_int_moment_selected=0;	//одновременно может быть выбран момент только на одной рамке
							show_moments_panel=true;	//показываем кнопки управлени€ моментами
						}
					}
					function ext_ramka4_arrow_click(value,t){		//сохран€ет 1ю стрелочку в переменной в качестве активной выбранной, и продолжает мигание
						if(value){
							if(cur_ext_moment_selected!=4){
								del_routes_ext_arrs();	//удал€ем маршруты дл€ мигани€ стрелок внутр. рамки
								del_routes_int_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внутр. рамки
								del_colors_ext_arrs();	//обнул€ем цвета стрелок моментов
								del_colors_int_arrs();
								value_ext_moment=new String(cur_ext_selected+','+value_moment_ext);	//событие во внешний скрипт (перенос момента дл€ JS)
							}

							cur_ext_moment_selected=4;
							cur_int_moment_selected=0;	//одновременно может быть выбран момент только на одной рамке
							show_moments_panel=true;	//показываем кнопки управлени€ моментами
						}
					}
					function del_routes_int_arrs(){		//удал€ет маршруты мигани€ стрелок моментов внутр. рамки
						switch(cur_int_moment_selected){
							case 1:
								Browser.deleteRoute(timesens_for_flash_arrow, 'cycleTime', main_gyro_script, 'change_intarr1_color');
							break;
							case 2:
								Browser.deleteRoute(timesens_for_flash_arrow, 'cycleTime', main_gyro_script, 'change_intarr2_color');
							break;
							case 3:
								Browser.deleteRoute(timesens_for_flash_arrow, 'cycleTime', main_gyro_script, 'change_intarr3_color');
							break;
							case 4:
								Browser.deleteRoute(timesens_for_flash_arrow, 'cycleTime', main_gyro_script, 'change_intarr4_color');
							break;
						}
					}
					function del_routes_ext_arrs(){		//удал€ет маршруты мигани€ стрелок моментов внешн. рамки
						switch(cur_ext_moment_selected){
							case 1:
								Browser.deleteRoute(timesens_for_flash_arrow, 'cycleTime', main_gyro_script, 'change_extarr1_color');
							break;
							case 2:
								Browser.deleteRoute(timesens_for_flash_arrow, 'cycleTime', main_gyro_script, 'change_extarr2_color');
							break;
							case 3:
								Browser.deleteRoute(timesens_for_flash_arrow, 'cycleTime', main_gyro_script, 'change_extarr3_color');
							break;
							case 4:
								Browser.deleteRoute(timesens_for_flash_arrow, 'cycleTime', main_gyro_script, 'change_extarr4_color');
							break;
						}
					}
					function del_colors_int_arrs(){		//обнул€ет цвет стрелок моментов внутренней рамки
						shape_intarr1.appearance.material.shininess=norm_shininess_arr;
						shape_intcyl1.appearance.material.shininess=norm_shininess_arr;
						shape_intarr2.appearance.material.shininess=norm_shininess_arr;
						shape_intcyl2.appearance.material.shininess=norm_shininess_arr;
						shape_intarr3.appearance.material.shininess=norm_shininess_arr;
						shape_intcyl3.appearance.material.shininess=norm_shininess_arr;
						shape_intarr4.appearance.material.shininess=norm_shininess_arr;
						shape_intcyl4.appearance.material.shininess=norm_shininess_arr;

						shape_intarr1.appearance.material.diffuseColor=norm_diffusecolor_arr;
						shape_intcyl1.appearance.material.diffuseColor=norm_diffusecolor_arr;
						shape_intarr2.appearance.material.diffuseColor=norm_diffusecolor_arr;
						shape_intcyl2.appearance.material.diffuseColor=norm_diffusecolor_arr;
						shape_intarr3.appearance.material.diffuseColor=norm_diffusecolor_arr;
						shape_intcyl3.appearance.material.diffuseColor=norm_diffusecolor_arr;
						shape_intarr4.appearance.material.diffuseColor=norm_diffusecolor_arr;
						shape_intcyl4.appearance.material.diffuseColor=norm_diffusecolor_arr;
					}
					function del_colors_ext_arrs(){		//обнул€ет цвет стрелок моментов внешней рамки
						shape_extarr1.appearance.material.shininess=norm_shininess_arr;
						shape_extcyl1.appearance.material.shininess=norm_shininess_arr;
						shape_extarr2.appearance.material.shininess=norm_shininess_arr;
						shape_extcyl2.appearance.material.shininess=norm_shininess_arr;
						shape_extarr3.appearance.material.shininess=norm_shininess_arr;
						shape_extcyl3.appearance.material.shininess=norm_shininess_arr;
						shape_extarr4.appearance.material.shininess=norm_shininess_arr;
						shape_extcyl4.appearance.material.shininess=norm_shininess_arr;

						shape_extarr1.appearance.material.diffuseColor=norm_diffusecolor_arr;
						shape_extcyl1.appearance.material.diffuseColor=norm_diffusecolor_arr;
						shape_extarr2.appearance.material.diffuseColor=norm_diffusecolor_arr;
						shape_extcyl2.appearance.material.diffuseColor=norm_diffusecolor_arr;
						shape_extarr3.appearance.material.diffuseColor=norm_diffusecolor_arr;
						shape_extcyl3.appearance.material.diffuseColor=norm_diffusecolor_arr;
						shape_extarr4.appearance.material.diffuseColor=norm_diffusecolor_arr;
						shape_extcyl4.appearance.material.diffuseColor=norm_diffusecolor_arr;
					}
					function moment_increase(value,t){	//увеличивает выбранный момент на delta_mom
						if(value){
							if(cur_int_moment_selected!=0){
								switch(cur_int_moment_selected){
									case 1:
										if((value_moment_int+delta_mom - delta_mom*0.01)<=value_max_moment_int){	//если ещЄ можно увеличить момент
											value_moment_int+=delta_mom;
											var tmp_spine = new MFVec3f();
											tmp_spine = extrusion_int_ramka1_arrow.spine;
											tmp_spine[1].y = 0.5+value_min_moment_int-value_moment_int;
											//print('y= '+tmp_spine[1].y+' moment= '+value_moment_int);
											extrusion_spin_int_ramka1 = tmp_spine;
										}
									break;
									case 2:
										if((value_moment_int+delta_mom - delta_mom*0.01)<=value_max_moment_int){	//если ещЄ можно увеличить момент
											value_moment_int+=delta_mom;
											var tmp_spine = new MFVec3f();
											tmp_spine = extrusion_int_ramka2_arrow.spine;
											tmp_spine[1].y = 0.5+value_min_moment_int-value_moment_int;
											//print('y= '+tmp_spine[1].y+' moment= '+value_moment_int);
											extrusion_spin_int_ramka2 = tmp_spine;
										}									
									break;
									case 3:
										if((value_moment_int+delta_mom - delta_mom*0.01)<=value_max_moment_int){	//если ещЄ можно увеличить момент
											value_moment_int+=delta_mom;
											var tmp_spine = new MFVec3f();
											tmp_spine = extrusion_int_ramka3_arrow.spine;
											tmp_spine[1].y = 0.5+value_min_moment_int-value_moment_int;
											//print('y= '+tmp_spine[1].y+' moment= '+value_moment_int);
											extrusion_spin_int_ramka3 = tmp_spine;
										}
									break;
									case 4:
										if((value_moment_int+delta_mom - delta_mom*0.01)<=value_max_moment_int){	//если ещЄ можно увеличить момент
											value_moment_int+=delta_mom;
											var tmp_spine = new MFVec3f();
											tmp_spine = extrusion_int_ramka4_arrow.spine;
											tmp_spine[1].y = 0.5+value_min_moment_int-value_moment_int;
											//print('y= '+tmp_spine[1].y+' moment= '+value_moment_int);
											extrusion_spin_int_ramka4 = tmp_spine;
										}
									break;
								}
								value_int_moment=new String(cur_int_selected+','+value_moment_int);
							} else if(cur_ext_moment_selected!=0) {
								switch(cur_ext_moment_selected){
									case 1:
										 if((value_moment_ext+delta_mom - delta_mom*0.01)<=value_max_moment_ext){	//если ещЄ можно увеличить момент
											value_moment_ext+=delta_mom;
											var tmp_spine = new MFVec3f();
											tmp_spine = extrusion_ext_ramka1_arrow.spine;
											tmp_spine[1].y = 0.5+value_min_moment_ext-value_moment_ext;
											//print('y= '+tmp_spine[1].y+' moment= '+value_moment_ext);
											extrusion_spin_ext_ramka1 = tmp_spine;
										}
									break;
									case 2:
										if((value_moment_ext+delta_mom - delta_mom*0.01)<=value_max_moment_ext){	//если ещЄ можно увеличить момент
											value_moment_ext+=delta_mom;
											var tmp_spine = new MFVec3f();
											tmp_spine = extrusion_ext_ramka2_arrow.spine;
											tmp_spine[1].y = 0.5+value_min_moment_ext-value_moment_ext;
											//print('y= '+tmp_spine[1].y+' moment= '+value_moment_ext);
											extrusion_spin_ext_ramka2 = tmp_spine;
										}
									break;
									case 3:
										if((value_moment_ext+delta_mom - delta_mom*0.01)<=value_max_moment_ext){	//если ещЄ можно увеличить момент
											value_moment_ext+=delta_mom;
											var tmp_spine = new MFVec3f();
											tmp_spine = extrusion_ext_ramka3_arrow.spine;
											tmp_spine[1].y = 0.5+value_min_moment_ext-value_moment_ext;
											//print('y= '+tmp_spine[1].y+' moment= '+value_moment_ext);
											extrusion_spin_ext_ramka3 = tmp_spine;
										}
									break;
									case 4:
										if((value_moment_ext+delta_mom - delta_mom*0.01)<=value_max_moment_ext){	//если ещЄ можно увеличить момент
											value_moment_ext+=delta_mom;
											var tmp_spine = new MFVec3f();
											tmp_spine = extrusion_ext_ramka4_arrow.spine;
											tmp_spine[1].y = 0.5+value_min_moment_ext-value_moment_ext;
											//print('y= '+tmp_spine[1].y+' moment= '+value_moment_ext);
											extrusion_spin_ext_ramka4 = tmp_spine;
										}
									break;
								}
								value_ext_moment=new String(cur_ext_selected+','+value_moment_ext);
							}
						}
					}
					function moment_decrease(value,t){	//увеличивает выбранный момент на delta_mom
						if(value){
							if(cur_int_moment_selected!=0){
								switch(cur_int_moment_selected){
									case 1:
										if((value_moment_int-delta_mom + delta_mom*0.01 ) >= value_min_moment_int){	//если ещЄ можно уменьшать момент
											value_moment_int-=delta_mom;
											var tmp_spine = new MFVec3f();
											tmp_spine = extrusion_int_ramka1_arrow.spine;
											tmp_spine[1].y = 0.5+value_min_moment_int-value_moment_int;
											//print('y= '+tmp_spine[1].y+' moment= '+value_moment_int);
											extrusion_spin_int_ramka1 = tmp_spine;
										}
									break;
									case 2:
										if((value_moment_int-delta_mom + delta_mom*0.01 ) >= value_min_moment_int){	//если ещЄ можно уменьшать момент
											value_moment_int-=delta_mom;
											var tmp_spine = new MFVec3f();
											tmp_spine = extrusion_int_ramka2_arrow.spine;
											tmp_spine[1].y = 0.5+value_min_moment_int-value_moment_int;
											//print('y= '+tmp_spine[1].y+' moment= '+value_moment_int);
											extrusion_spin_int_ramka2 = tmp_spine;
										}
									break;
									case 3:
										if((value_moment_int-delta_mom + delta_mom*0.01 ) >= value_min_moment_int){	//если ещЄ можно уменьшать момент
											value_moment_int-=delta_mom;
											var tmp_spine = new MFVec3f();
											tmp_spine = extrusion_int_ramka3_arrow.spine;
											tmp_spine[1].y = 0.5+value_min_moment_int-value_moment_int;
											//print('y= '+tmp_spine[1].y+' moment= '+value_moment_int);
											extrusion_spin_int_ramka3 = tmp_spine;
										}
									break;
									case 4:
										if((value_moment_int-delta_mom + delta_mom*0.01 ) >= value_min_moment_int){	//если ещЄ можно уменьшать момент
											value_moment_int-=delta_mom;
											var tmp_spine = new MFVec3f();
											tmp_spine = extrusion_int_ramka4_arrow.spine;
											tmp_spine[1].y = 0.5+value_min_moment_int-value_moment_int;
											//print('y= '+tmp_spine[1].y+' moment= '+value_moment_int);
											extrusion_spin_int_ramka4 = tmp_spine;
										}
									break;
								}
								value_int_moment=new String(cur_int_selected+','+value_moment_int);
							} else if(cur_ext_moment_selected!=0){
								switch(cur_ext_moment_selected){
									case 1:
										if((value_moment_ext-delta_mom + delta_mom*0.01 ) >= value_min_moment_ext){	//если ещЄ можно уменьшать момент
											value_moment_ext-=delta_mom;
											var tmp_spine = new MFVec3f();
											tmp_spine = extrusion_ext_ramka1_arrow.spine;
											tmp_spine[1].y = 0.5+value_min_moment_ext-value_moment_ext;
											//print('y= '+tmp_spine[1].y+' moment= '+value_moment_ext);
											extrusion_spin_ext_ramka1 = tmp_spine;
										}
									break;
									case 2:
										if((value_moment_ext-delta_mom + delta_mom*0.01 ) >= value_min_moment_ext){	//если ещЄ можно уменьшать момент
											value_moment_ext-=delta_mom;
											var tmp_spine = new MFVec3f();
											tmp_spine = extrusion_ext_ramka2_arrow.spine;
											tmp_spine[1].y = 0.5+value_min_moment_ext-value_moment_ext;
											//print('y= '+tmp_spine[1].y+' moment= '+value_moment_ext);
											extrusion_spin_ext_ramka2 = tmp_spine;
										}
									break;
									case 3:
										if((value_moment_ext-delta_mom + delta_mom*0.01 ) >= value_min_moment_ext){	//если ещЄ можно уменьшать момент
											value_moment_ext-=delta_mom;
											var tmp_spine = new MFVec3f();
											tmp_spine = extrusion_ext_ramka3_arrow.spine;
											tmp_spine[1].y = 0.5+value_min_moment_ext-value_moment_ext;
											//print('y= '+tmp_spine[1].y+' moment= '+value_moment_ext);
											extrusion_spin_ext_ramka3 = tmp_spine;
										}
									break;
									case 4:
										if((value_moment_ext-delta_mom + delta_mom*0.01 ) >= value_min_moment_ext){	//если ещЄ можно уменьшать момент
											value_moment_ext-=delta_mom;
											var tmp_spine = new MFVec3f();
											tmp_spine = extrusion_ext_ramka4_arrow.spine;
											tmp_spine[1].y = 0.5+value_min_moment_ext-value_moment_ext;
											//print('y= '+tmp_spine[1].y+' moment= '+value_moment_ext);
											extrusion_spin_ext_ramka4 = tmp_spine;
										}
									break;
								}
								value_ext_moment=new String(cur_ext_selected+','+value_moment_ext);
							}
						}
					}
					function num_int_moment_select(value,t){
						var tmp_params=value.split(',');
															//переводим строковую величину в численную
						SFFloat_num=tmp_params[0];
						var tmp_num_ramka=SFFloat_num;
						SFFloat_num=tmp_params[1];
						var tmp_value_moment=SFFloat_num;
						cur_int_selected=tmp_num_ramka;
						cur_int_moment_selected=tmp_num_ramka;
						value_moment_int=tmp_value_moment;
						//print(value_moment_int);
						if(value_moment_int!=0){
							switch(cur_int_selected){
								case 1:
									//реализуем часть функции int_ramka1_touchsens_click();
									sw_int_ramka1_arrow[0].whichChoice=0;
									sw_int_ramka2_arrow[0].whichChoice=-1;
									sw_int_ramka3_arrow[0].whichChoice=-1;
									sw_int_ramka4_arrow[0].whichChoice=-1;
									shape_int_ramka1.appearance.material.diffuseColor = selected_color_ramka;
									shape_int_ramka2.appearance.material.diffuseColor = norm_color_int_ramka;
									shape_int_ramka3.appearance.material.diffuseColor = norm_color_int_ramka;
									shape_int_ramka4.appearance.material.diffuseColor = norm_color_int_ramka;
									del_routes_int_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внутр. рамки
									cur_int_moment_selected=1;
									del_routes_ext_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внешн. рамки
									cur_ext_moment_selected=0; //обнулили значение выбранного момента на внешн. рамке
									del_colors_ext_arrs();	//обнул€ем цвета стрелок моментов
									del_colors_int_arrs();
									extrusion_spin_int_ramka1=default_spin;		//обнуление опорных точек стрелок моментов внутр. рамки
									extrusion_spin_int_ramka2=default_spin;
									extrusion_spin_int_ramka3=default_spin;
									extrusion_spin_int_ramka4=default_spin;

									//реализуем часть функции int_ramka1_arrow_click();
									show_moments_panel=true;	//показываем кнопки управлени€ моментами

									//реализуем часть функции int_ramka1_arrow_act();
									Browser.addRoute(timesens_for_flash_arrow, 'cycleTime', main_gyro_script, 'change_intarr1_color');
									timesens_for_flash_arrow.startTime=t;

									var tmp_spine = new MFVec3f();
									tmp_spine = extrusion_int_ramka1_arrow.spine;
									tmp_spine[1].y = 0.5+value_min_moment_int-value_moment_int;
									extrusion_spin_int_ramka1 = tmp_spine;
								break;
								case 2:
									//реализуем часть функции int_ramka2_touchsens_click();
									sw_int_ramka1_arrow[0].whichChoice=-1;
									sw_int_ramka2_arrow[0].whichChoice=0;
									sw_int_ramka3_arrow[0].whichChoice=-1;
									sw_int_ramka4_arrow[0].whichChoice=-1;
									shape_int_ramka1.appearance.material.diffuseColor = norm_color_int_ramka;
									shape_int_ramka2.appearance.material.diffuseColor = selected_color_ramka;
									shape_int_ramka3.appearance.material.diffuseColor = norm_color_int_ramka;
									shape_int_ramka4.appearance.material.diffuseColor = norm_color_int_ramka;
									del_routes_int_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внутр. рамки
									cur_int_moment_selected=2;
									del_routes_ext_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внешн. рамки
									cur_ext_moment_selected=0; //обнулили значение выбранного момента на внешн. рамке
									del_colors_ext_arrs();	//обнул€ем цвета стрелок моментов
									del_colors_int_arrs();
									extrusion_spin_int_ramka1=default_spin;		//обнуление опорных точек стрелок моментов внутр. рамки
									extrusion_spin_int_ramka2=default_spin;
									extrusion_spin_int_ramka3=default_spin;
									extrusion_spin_int_ramka4=default_spin;

									//реализуем часть функции int_ramka2_arrow_click();
									show_moments_panel=true;	//показываем кнопки управлени€ моментами

									//реализуем часть функции int_ramka2_arrow_act();
									Browser.addRoute(timesens_for_flash_arrow, 'cycleTime', main_gyro_script, 'change_intarr2_color');
									timesens_for_flash_arrow.startTime=t;

									var tmp_spine = new MFVec3f();
									tmp_spine = extrusion_int_ramka2_arrow.spine;
									tmp_spine[1].y = 0.5+value_min_moment_int-value_moment_int;
									extrusion_spin_int_ramka2 = tmp_spine;
								break;
								case 3:
									//реализуем часть функции int_ramka3_touchsens_click();
									sw_int_ramka1_arrow[0].whichChoice=-1;
									sw_int_ramka2_arrow[0].whichChoice=-1;
									sw_int_ramka3_arrow[0].whichChoice=0;
									sw_int_ramka4_arrow[0].whichChoice=-1;
									shape_int_ramka1.appearance.material.diffuseColor = norm_color_int_ramka;
									shape_int_ramka2.appearance.material.diffuseColor = norm_color_int_ramka;
									shape_int_ramka3.appearance.material.diffuseColor = selected_color_ramka;
									shape_int_ramka4.appearance.material.diffuseColor = norm_color_int_ramka;
									del_routes_int_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внутр. рамки
									cur_int_moment_selected=3;
									del_routes_ext_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внешн. рамки
									cur_ext_moment_selected=0; //обнулили значение выбранного момента на внешн. рамке
									del_colors_ext_arrs();	//обнул€ем цвета стрелок моментов
									del_colors_int_arrs();
									extrusion_spin_int_ramka1=default_spin;		//обнуление опорных точек стрелок моментов внутр. рамки
									extrusion_spin_int_ramka2=default_spin;
									extrusion_spin_int_ramka3=default_spin;
									extrusion_spin_int_ramka4=default_spin;

									//реализуем часть функции int_ramka3_arrow_click();
									show_moments_panel=true;	//показываем кнопки управлени€ моментами

									//реализуем часть функции int_ramka3_arrow_act();
									Browser.addRoute(timesens_for_flash_arrow, 'cycleTime', main_gyro_script, 'change_intarr3_color');
									timesens_for_flash_arrow.startTime=t;

									var tmp_spine = new MFVec3f();
									tmp_spine = extrusion_int_ramka3_arrow.spine;
									tmp_spine[1].y = 0.5+value_min_moment_int-value_moment_int;
									extrusion_spin_int_ramka3 = tmp_spine;
								break;
								case 4:
									//реализуем часть функции int_ramka4_touchsens_click();
									sw_int_ramka1_arrow[0].whichChoice=-1;
									sw_int_ramka2_arrow[0].whichChoice=-1;
									sw_int_ramka3_arrow[0].whichChoice=-1;
									sw_int_ramka4_arrow[0].whichChoice=0;
									shape_int_ramka1.appearance.material.diffuseColor = norm_color_int_ramka;
									shape_int_ramka2.appearance.material.diffuseColor = norm_color_int_ramka;
									shape_int_ramka3.appearance.material.diffuseColor = norm_color_int_ramka;
									shape_int_ramka4.appearance.material.diffuseColor = selected_color_ramka;
									del_routes_int_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внутр. рамки
									cur_int_moment_selected=4;
									del_routes_ext_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внешн. рамки
									cur_ext_moment_selected=0; //обнулили значение выбранного момента на внешн. рамке
									del_colors_ext_arrs();	//обнул€ем цвета стрелок моментов
									del_colors_int_arrs();
									extrusion_spin_int_ramka1=default_spin;		//обнуление опорных точек стрелок моментов внутр. рамки
									extrusion_spin_int_ramka2=default_spin;
									extrusion_spin_int_ramka3=default_spin;
									extrusion_spin_int_ramka4=default_spin;

									//реализуем часть функции int_ramka4_arrow_click();
									show_moments_panel=true;	//показываем кнопки управлени€ моментами

									//реализуем часть функции int_ramka4_arrow_act();
									Browser.addRoute(timesens_for_flash_arrow, 'cycleTime', main_gyro_script, 'change_intarr4_color');
									timesens_for_flash_arrow.startTime=t;

									var tmp_spine = new MFVec3f();
									tmp_spine = extrusion_int_ramka4_arrow.spine;
									tmp_spine[1].y = 0.5+value_min_moment_int-value_moment_int;
									extrusion_spin_int_ramka4 = tmp_spine;
								break;
							}
						} else {	//если момент равен нулю, то примен€ем функцию очищени€ рамки от моментов
							cur_int_selected=0;	//обнулили значение выбранной внутр. рамки
							sw_int_ramka1_arrow[0].whichChoice=-1;
							sw_int_ramka2_arrow[0].whichChoice=-1;
							sw_int_ramka3_arrow[0].whichChoice=-1;
							sw_int_ramka4_arrow[0].whichChoice=-1;
							shape_int_ramka1.appearance.material.diffuseColor = norm_color_int_ramka;
							shape_int_ramka2.appearance.material.diffuseColor = norm_color_int_ramka;
							shape_int_ramka3.appearance.material.diffuseColor = norm_color_int_ramka;
							shape_int_ramka4.appearance.material.diffuseColor = norm_color_int_ramka;

							del_colors_ext_arrs();	//обнул€ем цвета стрелок моментов
							del_colors_int_arrs();

							timesens_for_flash_arrow.stopTime=t;
							del_routes_ext_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внешн. рамки
							del_routes_int_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внутр. рамки
							cur_int_moment_selected=0;	//обнулили значение выбранного момента на внутр. рамке
							hide_moments_panel=true;	//скрываем кнопки управлени€ моментами
							value_moment_int=0;	//обнул€ем значение момента на внутр. рамке
							extrusion_spin_int_ramka1=default_spin;		//обнуление опорных точек стрелок моментов внутр. рамки
							extrusion_spin_int_ramka2=default_spin;
							extrusion_spin_int_ramka3=default_spin;
							extrusion_spin_int_ramka4=default_spin;
						}
					}
					function num_ext_moment_select(value,t){
						var tmp_params=value.split(',');
															//переводим строковую величину в численную
						SFFloat_num=tmp_params[0];
						var tmp_num_ramka=SFFloat_num;
						SFFloat_num=tmp_params[1];
						var tmp_value_moment=SFFloat_num;
						cur_ext_selected=tmp_num_ramka;
						cur_ext_moment_selected=tmp_num_ramka;
						value_moment_ext=tmp_value_moment;
						if(value_moment_ext!=0){
							switch(cur_ext_selected){
								case 1:
									//реализуем часть функции ext_ramka1_touchsens_click();
									sw_ext_ramka1_arrow[0].whichChoice=0;
									sw_ext_ramka2_arrow[0].whichChoice=-1;
									sw_ext_ramka3_arrow[0].whichChoice=-1;
									sw_ext_ramka4_arrow[0].whichChoice=-1;
									shape_ext_ramka1.appearance.material.diffuseColor = selected_color_ramka;
									shape_ext_ramka2.appearance.material.diffuseColor = norm_color_ext_ramka;
									shape_ext_ramka3.appearance.material.diffuseColor = norm_color_ext_ramka;
									shape_ext_ramka4.appearance.material.diffuseColor = norm_color_ext_ramka;		
									del_routes_ext_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внешн. рамки
									cur_ext_moment_selected=1;
									del_routes_int_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внутр. рамки						
									cur_int_moment_selected=0;	//обнулили значение выбранного момента на внутр. рамке

									del_colors_int_arrs();	//обнул€ем цвета стрелок моментов
									del_colors_ext_arrs();
									extrusion_spin_ext_ramka1=default_spin;		//обнуление опорных точек стрелок моментов внешн. рамки
									extrusion_spin_ext_ramka2=default_spin;
									extrusion_spin_ext_ramka3=default_spin;
									extrusion_spin_ext_ramka4=default_spin;

									//реализуем часть функции ext_ramka1_arrow_click();
									show_moments_panel=true;	//показываем кнопки управлени€ моментами

									//реализуем часть функции ext_ramka1_arrow_act();
									Browser.addRoute(timesens_for_flash_arrow, 'cycleTime', main_gyro_script, 'change_extarr1_color');
									timesens_for_flash_arrow.startTime=t;
									
									var tmp_spine = new MFVec3f();
									tmp_spine = extrusion_ext_ramka1_arrow.spine;
									tmp_spine[1].y = 0.5+value_min_moment_ext-value_moment_ext;
									extrusion_spin_ext_ramka1 = tmp_spine;
								break;
								case 2:
									//реализуем часть функции ext_ramka2_touchsens_click();
									sw_ext_ramka1_arrow[0].whichChoice=-1;
									sw_ext_ramka2_arrow[0].whichChoice=0;
									sw_ext_ramka3_arrow[0].whichChoice=-1;
									sw_ext_ramka4_arrow[0].whichChoice=-1;
									shape_ext_ramka1.appearance.material.diffuseColor = norm_color_ext_ramka;
									shape_ext_ramka2.appearance.material.diffuseColor = selected_color_ramka;
									shape_ext_ramka3.appearance.material.diffuseColor = norm_color_ext_ramka;
									shape_ext_ramka4.appearance.material.diffuseColor = norm_color_ext_ramka;		
									del_routes_ext_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внешн. рамки
									cur_ext_moment_selected=2;
									del_routes_int_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внутр. рамки						
									cur_int_moment_selected=0;	//обнулили значение выбранного момента на внутр. рамке

									del_colors_int_arrs();	//обнул€ем цвета стрелок моментов
									del_colors_ext_arrs();
									extrusion_spin_ext_ramka1=default_spin;		//обнуление опорных точек стрелок моментов внешн. рамки
									extrusion_spin_ext_ramka2=default_spin;
									extrusion_spin_ext_ramka3=default_spin;
									extrusion_spin_ext_ramka4=default_spin;

									//реализуем часть функции ext_ramka2_arrow_click();
									show_moments_panel=true;	//показываем кнопки управлени€ моментами

									//реализуем часть функции ext_ramka1_arrow_act();
									Browser.addRoute(timesens_for_flash_arrow, 'cycleTime', main_gyro_script, 'change_extarr2_color');
									timesens_for_flash_arrow.startTime=t;
									
									var tmp_spine = new MFVec3f();
									tmp_spine = extrusion_ext_ramka2_arrow.spine;
									tmp_spine[1].y = 0.5+value_min_moment_ext-value_moment_ext;
									extrusion_spin_ext_ramka2 = tmp_spine;
								break;
								case 3:
									//реализуем часть функции ext_ramka3_touchsens_click();
									sw_ext_ramka1_arrow[0].whichChoice=-1;
									sw_ext_ramka2_arrow[0].whichChoice=-1;
									sw_ext_ramka3_arrow[0].whichChoice=0;
									sw_ext_ramka4_arrow[0].whichChoice=-1;
									shape_ext_ramka1.appearance.material.diffuseColor = norm_color_ext_ramka;
									shape_ext_ramka2.appearance.material.diffuseColor = norm_color_ext_ramka;
									shape_ext_ramka3.appearance.material.diffuseColor = selected_color_ramka;
									shape_ext_ramka4.appearance.material.diffuseColor = norm_color_ext_ramka;		
									del_routes_ext_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внешн. рамки
									cur_ext_moment_selected=3;
									del_routes_int_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внутр. рамки						
									cur_int_moment_selected=0;	//обнулили значение выбранного момента на внутр. рамке

									del_colors_int_arrs();	//обнул€ем цвета стрелок моментов
									del_colors_ext_arrs();
									extrusion_spin_ext_ramka1=default_spin;		//обнуление опорных точек стрелок моментов внешн. рамки
									extrusion_spin_ext_ramka2=default_spin;
									extrusion_spin_ext_ramka3=default_spin;
									extrusion_spin_ext_ramka4=default_spin;

									//реализуем часть функции ext_ramka3_arrow_click();
									show_moments_panel=true;	//показываем кнопки управлени€ моментами

									//реализуем часть функции ext_ramka3_arrow_act();
									Browser.addRoute(timesens_for_flash_arrow, 'cycleTime', main_gyro_script, 'change_extarr3_color');
									timesens_for_flash_arrow.startTime=t;
									
									var tmp_spine = new MFVec3f();
									tmp_spine = extrusion_ext_ramka3_arrow.spine;
									tmp_spine[1].y = 0.5+value_min_moment_ext-value_moment_ext;
									extrusion_spin_ext_ramka3 = tmp_spine;
								break;
								case 4:
									//реализуем часть функции ext_ramka4_touchsens_click();
									sw_ext_ramka1_arrow[0].whichChoice=-1;
									sw_ext_ramka2_arrow[0].whichChoice=-1;
									sw_ext_ramka3_arrow[0].whichChoice=-1;
									sw_ext_ramka4_arrow[0].whichChoice=0;
									shape_ext_ramka1.appearance.material.diffuseColor = norm_color_ext_ramka;
									shape_ext_ramka2.appearance.material.diffuseColor = norm_color_ext_ramka;
									shape_ext_ramka3.appearance.material.diffuseColor = norm_color_ext_ramka;
									shape_ext_ramka4.appearance.material.diffuseColor = selected_color_ramka;		
									del_routes_ext_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внешн. рамки
									cur_ext_moment_selected=4;
									del_routes_int_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внутр. рамки						
									cur_int_moment_selected=0;	//обнулили значение выбранного момента на внутр. рамке

									del_colors_int_arrs();	//обнул€ем цвета стрелок моментов
									del_colors_ext_arrs();
									extrusion_spin_ext_ramka1=default_spin;		//обнуление опорных точек стрелок моментов внешн. рамки
									extrusion_spin_ext_ramka2=default_spin;
									extrusion_spin_ext_ramka3=default_spin;
									extrusion_spin_ext_ramka4=default_spin;

									//реализуем часть функции ext_ramka4_arrow_click();
									show_moments_panel=true;	//показываем кнопки управлени€ моментами

									//реализуем часть функции ext_ramka4_arrow_act();
									Browser.addRoute(timesens_for_flash_arrow, 'cycleTime', main_gyro_script, 'change_extarr4_color');
									timesens_for_flash_arrow.startTime=t;
									
									var tmp_spine = new MFVec3f();
									tmp_spine = extrusion_ext_ramka4_arrow.spine;
									tmp_spine[1].y = 0.5+value_min_moment_ext-value_moment_ext;
									extrusion_spin_ext_ramka4 = tmp_spine;
								break;
							}
						} else {	//если момент равен нулю, то примен€ем функцию очищени€ рамки от моментов
							cur_ext_selected=0;	//обнулили значение выбранной внешн. рамки
							sw_ext_ramka1_arrow[0].whichChoice=-1;
							sw_ext_ramka2_arrow[0].whichChoice=-1;
							sw_ext_ramka3_arrow[0].whichChoice=-1;
							sw_ext_ramka4_arrow[0].whichChoice=-1;
							shape_ext_ramka1.appearance.material.diffuseColor = norm_color_ext_ramka;
							shape_ext_ramka2.appearance.material.diffuseColor = norm_color_ext_ramka;
							shape_ext_ramka3.appearance.material.diffuseColor = norm_color_ext_ramka;
							shape_ext_ramka4.appearance.material.diffuseColor = norm_color_ext_ramka;

							del_colors_ext_arrs();	//обнул€ем цвета стрелок моментов
							del_colors_int_arrs();

							timesens_for_flash_arrow.stopTime=t;
							del_routes_ext_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внешн. рамки
							del_routes_int_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внутр. рамки
							cur_ext_moment_selected=0; //обнулили значение выбранного момента на внешн. рамке
							hide_moments_panel=true;	//скрываем кнопки управлени€ моментами
							value_moment_ext=0;	//обнул€ем значение момента на внешней рамке
							extrusion_spin_ext_ramka1=default_spin;		//обнуление опорных точек стрелок моментов внешн. рамки
							extrusion_spin_ext_ramka2=default_spin;
							extrusion_spin_ext_ramka3=default_spin;
							extrusion_spin_ext_ramka4=default_spin;
						}
					}
					function start_rotation_gyro(value,t){
						//print(value[0]+' _ '+value[1]+' _ '+value[2]);
						int_ramka.rotation=new SFRotation(0,1,0,0);
						rotor1.rotation=new SFRotation(0,1,0,0);
						ext_ramka.rotation=new SFRotation(0,1,0,0);
						hide_moments_panel=true;	//скрываем кнопки управлени€ моментами
						hide_navigation_panel=true;	//скрывает остальные кнопки навигации
						del_routes_ext_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внешн. рамки
						del_routes_int_arrs();		//удал€ем маршруты дл€ мигани€ стрелок внутр. рамки
						timesens_for_flash_arrow.stopTime=t;
						del_colors_ext_arrs();	//обнул€ем цвета стрелок моментов
						del_colors_int_arrs();

						shape_intarr1.appearance.material.diffuseColor=act_diffusecolor_arr;
						shape_intcyl1.appearance.material.diffuseColor=act_diffusecolor_arr;
						shape_intarr2.appearance.material.diffuseColor=act_diffusecolor_arr;
						shape_intcyl2.appearance.material.diffuseColor=act_diffusecolor_arr;
						shape_intarr3.appearance.material.diffuseColor=act_diffusecolor_arr;
						shape_intcyl3.appearance.material.diffuseColor=act_diffusecolor_arr;
						shape_intarr4.appearance.material.diffuseColor=act_diffusecolor_arr;
						shape_intcyl4.appearance.material.diffuseColor=act_diffusecolor_arr;

						shape_extarr1.appearance.material.diffuseColor=act_diffusecolor_arr;
						shape_extcyl1.appearance.material.diffuseColor=act_diffusecolor_arr;
						shape_extarr2.appearance.material.diffuseColor=act_diffusecolor_arr;
						shape_extcyl2.appearance.material.diffuseColor=act_diffusecolor_arr;
						shape_extarr3.appearance.material.diffuseColor=act_diffusecolor_arr;
						shape_extcyl3.appearance.material.diffuseColor=act_diffusecolor_arr;
						shape_extarr4.appearance.material.diffuseColor=act_diffusecolor_arr;
						shape_extcyl4.appearance.material.diffuseColor=act_diffusecolor_arr;

						store_rotation_gyro=value;
						var tmp_params=value[0].split(',');

						SFInt32_num=tmp_params[0]; //переводим строковую величину в численную
						var tmp_int_way=SFInt32_num;
						SFInt32_num=tmp_params[1];
						var tmp_int_w=SFInt32_num;

						var tmp_params=value[1].split(',');
						SFInt32_num=tmp_params[0]; //переводим строковую величину в численную
						var tmp_ext_way=SFInt32_num;
						SFInt32_num=tmp_params[1];
						var tmp_ext_w=SFInt32_num;

						SFInt32_num=value[2];
						var tmp_rotor_w=SFInt32_num;

						//print('int_way='+tmp_int_way);
						//print('int_w='+tmp_int_w);
						//print('ext_way='+tmp_ext_way);
						//print('ext_w='+tmp_ext_w);
						//print(' ');
						if(tmp_int_w){
							timesens_for_int_ramka.cycleInterval= tmp_int_w;
						}
						if(tmp_ext_w){
							timesens_for_ext_ramka.cycleInterval= tmp_ext_w;
						}
						if(tmp_int_way){	//направление вращени€ внутренней рамки
							var orient_interpol = new MFRotation();
							orient_interpol[0] = new SFRotation(0, 1, 0, 0);
							orient_interpol[1] = new SFRotation(0, 1, 0, 3.1415);
							orient_interpol[2] = new SFRotation(0, 1, 0, 6.283);
							to_orient_interpol_int_ramka = orient_interpol;
							to_orient_interpol_rotor1 = orient_interpol;
						} else {
						    var orient_interpol = new MFRotation();
							orient_interpol[0] = new SFRotation(0, 1, 0, 0);
							orient_interpol[1] = new SFRotation(0, 1, 0, -3.1415);
							orient_interpol[2] = new SFRotation(0, 1, 0, -6.283);
							to_orient_interpol_int_ramka = orient_interpol;
							to_orient_interpol_rotor1 = orient_interpol;
						}
						if(tmp_ext_way){	//направление врещени€ внешней рамки
							var orient_interpol = new MFRotation();
							orient_interpol[0] = new SFRotation(0, 1, 0, 0);
							orient_interpol[1] = new SFRotation(0, 1, 0, 3.1415);
							orient_interpol[2] = new SFRotation(0, 1, 0, 6.283);
							to_orient_interpol_ext_ramka = orient_interpol;
						} else {
							var orient_interpol = new MFRotation();
							orient_interpol[0] = new SFRotation(0, 1, 0, 0);
							orient_interpol[1] = new SFRotation(0, 1, 0, -3.1415);
							orient_interpol[2] = new SFRotation(0, 1, 0, -6.283);
							to_orient_interpol_ext_ramka = orient_interpol;	
						}
						if(tmp_rotor_w){	//направление вращени€ ротера (по часовой стрелке)
							var orient_interpol = new MFRotation();
							orient_interpol[0] = new SFRotation(1, 0, 0, 0);
							orient_interpol[1] = new SFRotation(1, 0, 0, 3.1415);
							orient_interpol[2] = new SFRotation(1, 0, 0, 6.283);
							to_orient_interpol_arr_rotor = orient_interpol;
							to_orient_interpol_rotor = orient_interpol;	
							to_arr1_rotor_tex = new MFString('clockwise.gif');
							to_arr2_rotor_tex = new MFString('clockwise.gif');
							sw_arr_rotor[0].whichChoice=0;
						} else {	//(против часовой стрелки)
							var orient_interpol = new MFRotation();
							orient_interpol[0] = new SFRotation(1, 0, 0, 0);
							orient_interpol[1] = new SFRotation(1, 0, 0, -3.1415);
							orient_interpol[2] = new SFRotation(1, 0, 0, -6.283);
							to_orient_interpol_arr_rotor = orient_interpol;
							to_orient_interpol_rotor = orient_interpol;
							to_arr1_rotor_tex = new MFString('anticlockwise.gif');
							to_arr2_rotor_tex = new MFString('anticlockwise.gif');
							sw_arr_rotor[0].whichChoice=0;
						}

						Browser.addRoute(timesens_for_rotor, 'fraction_changed', orient_interpol_rotor, 'set_fraction');
						Browser.addRoute(orient_interpol_rotor, 'value_changed', rotor, 'rotation');

						Browser.addRoute(timesens_for_arr_rotor, 'fraction_changed', orient_interpol_arr_rotor, 'set_fraction');	//вращение стрелок ротора
						Browser.addRoute(orient_interpol_arr_rotor, 'value_changed', arr_rotor, 'rotation');
						
						if(tmp_int_w){
							Browser.addRoute(timesens_for_int_ramka, 'fraction_changed', orient_interpol_rotor1, 'set_fraction');
							Browser.addRoute(orient_interpol_rotor1, 'value_changed', rotor1, 'rotation');
							Browser.addRoute(timesens_for_int_ramka, 'fraction_changed', orient_interpol_int_ramka, 'set_fraction');
							Browser.addRoute(orient_interpol_int_ramka, 'value_changed', int_ramka, 'rotation');
							
						}
						if(tmp_ext_w){
							Browser.addRoute(timesens_for_ext_ramka, 'fraction_changed', orient_interpol_ext_ramka, 'set_fraction');
							Browser.addRoute(orient_interpol_ext_ramka, 'value_changed', ext_ramka, 'rotation');
						
						}
						Browser.addRoute(timesens_for_send_rotations, 'cycleTime', main_gyro_script, 'send_rotation');
						
						timesens_for_stop_int_ramka.enabled = true;
						timesens_for_stop_int_ramka.startTime=t;							
						Browser.addRoute(timesens_for_stop_int_ramka, 'cycleTime', main_gyro_script, 'check_rotation_int');

						timesens_for_send_rotations.enabled = true;
						timesens_for_rotor.enabled = true;
						timesens_for_arr_rotor.enabled = true;
						timesens_for_int_ramka.enabled = true;
						timesens_for_ext_ramka.enabled = true;
						timesens_for_send_rotations.startTime=t;
						timesens_for_rotor.startTime=t;
						timesens_for_arr_rotor.startTime=t;
						timesens_for_int_ramka.startTime=t;
						timesens_for_ext_ramka.startTime=t;
					}
					function send_rotation(value,t){
						value_int_rotation=int_ramka.rotation;
						value_ext_rotation=ext_ramka.rotation;
					}
					function check_rotation_int(value,t){
						if(int_ramka.rotation.angle>1.56){	//останавливаем поворот внутренней рамки если еЄ смещение больше 90 градусов							
							//print('angle_int = '+int_ramka.rotation.angle);
							if(orient_interpol_int_ramka.keyValue[2].angle>0){	//фиксаци€ рамки в отклонении на 90 градусов
								int_ramka.rotation=new SFRotation(0,1,0,1.5706);
								rotor1.rotation=new SFRotation(0,1,0,1.5706);
							} else {
								int_ramka.rotation=new SFRotation(0,1,0,-1.5706);
								rotor1.rotation=new SFRotation(0,1,0,-1.5706);
							}
							timesens_for_int_ramka.enabled = false;
							timesens_for_ext_ramka.enabled = false;
							Browser.deleteRoute(timesens_for_ext_ramka, 'fraction_changed', orient_interpol_ext_ramka, 'set_fraction');
							Browser.deleteRoute(orient_interpol_ext_ramka, 'value_changed', ext_ramka, 'rotation');
							
							Browser.deleteRoute(timesens_for_int_ramka, 'fraction_changed', orient_interpol_rotor1, 'set_fraction');
							Browser.deleteRoute(orient_interpol_rotor1, 'value_changed', rotor1, 'rotation');
							Browser.deleteRoute(timesens_for_int_ramka, 'fraction_changed', orient_interpol_int_ramka, 'set_fraction');
							Browser.deleteRoute(orient_interpol_int_ramka, 'value_changed', int_ramka, 'rotation');							
							
							Browser.deleteRoute(timesens_for_stop_int_ramka, 'cycleTime', main_gyro_script, 'check_rotation_int');
							timesens_for_stop_int_ramka.stopTime = t;
							timesens_for_stop_int_ramka.enabled = false;

							//print('int_cycleInterval = '+timesens_for_int_ramka.cycleInterval+' ext_cycleInterval = '+timesens_for_ext_ramka.cycleInterval);
							dt=t-timesens_for_ext_ramka.startTime;
							//print('dt_ext='+dt);
							last_int_interval =	timesens_for_int_ramka.cycleInterval;
							last_ext_interval =	timesens_for_ext_ramka.cycleInterval;
							

							//вы€сн€ем параметры движени€ рамок модели дл€ прин€ти€ решени€ об увеличении или уменьшении скорости их движени€
							var tmp_params=store_rotation_gyro[0].split(',');

							SFInt32_num=tmp_params[0]; //переводим строковую величину в численную
							var tmp_int_way=SFInt32_num;
							SFInt32_num=tmp_params[1];
							var tmp_int_w=SFInt32_num;

							var tmp_params=store_rotation_gyro[1].split(',');
							SFInt32_num=tmp_params[0]; //переводим строковую величину в численную
							var tmp_ext_way=SFInt32_num;
							SFInt32_num=tmp_params[1];
							var tmp_ext_w=SFInt32_num;

							SFInt32_num=store_rotation_gyro[2];
							var tmp_rotor_w=SFInt32_num;


							//это условие сейчас никогд ане выполнитс€, 
							//потому что в JS все моменты и их компенсаци€ учитываютс€ заранее
							if(tmp_rotor_w==0){	//если ротор крутитс€ против часовой стрелки
								if(cur_int_selected && cur_ext_selected && tmp_int_w && tmp_ext_w){	//если существуют моменты по обоим рамкам
									if(	(cur_int_selected==3 && cur_ext_selected==1) || 
										(cur_int_selected==2 && cur_ext_selected==1) ||
								    	(cur_int_selected==1 && cur_ext_selected==2) || 
										(cur_int_selected==4 && cur_ext_selected==2) || 
										(cur_int_selected==4 && cur_ext_selected==3) || 
										(cur_int_selected==1 && cur_ext_selected==3) || 
										(cur_int_selected==3 && cur_ext_selected==4) ||
								    	(cur_int_selected==2 && cur_ext_selected==4) )
									{
										//print('summation');	//суммируем моменты
										///*
										//ветвь - ускорение движени€ (суммирование момента)
										new_interval = last_ext_interval - last_int_interval;
										while((dt-last_ext_interval)>0){dt=dt-last_ext_interval;} // пока dt превышает длительность цикла TimeSensor-а, уменьшаем его на величину равную длительности цикла, кратную количеству превышений
										//print('new cycleInterval='+new_interval);
										timesens_for_ext_ramka.cycleInterval=new_interval;
										//print('dt_ext_new = '+dt+'*'+new_interval+'/'+last_ext_interval);
										dt_new=dt*new_interval/last_ext_interval;
										//print('dt_ext_new='+dt_new);
										timesens_for_ext_ramka.enabled = true;
										timesens_for_ext_ramka.startTime=t-dt_new;
										//print('startTime=t-dt_new');
										//print('startTime = '+t+'-'+dt_new);
										//print('---');
										//*/
									}
									if(	(cur_int_selected==4 && cur_ext_selected==1) ||	
										(cur_int_selected==1 && cur_ext_selected==1) ||	
										(cur_int_selected==3 && cur_ext_selected==2) || 
										(cur_int_selected==2 && cur_ext_selected==2) ||		
										(cur_int_selected==3 && cur_ext_selected==3) ||	
										(cur_int_selected==2 && cur_ext_selected==3) ||
										(cur_int_selected==1 && cur_ext_selected==4) ||	
										(cur_int_selected==4 && cur_ext_selected==4) )
									{
										//print('subtract');	//вычитаем моменты
										///*
										//ветвь - замедление движени€ (вычитание момента)
										new_interval = last_ext_interval + last_int_interval;
										while((dt-last_ext_interval)>0){dt=dt-last_ext_interval;} // пока dt превышает длительность цикла TimeSensor-а, уменьшаем его на величину равную длительности цикла, кратную количеству превышений
										//print('new cycleInterval='+new_interval);
										timesens_for_ext_ramka.cycleInterval=new_interval;
										//print('dt_ext_new = '+dt+'*'+new_interval+'/'+last_ext_interval);
										dt_new=dt*new_interval/last_ext_interval;
										//print('dt_ext_new='+dt_new);
										timesens_for_ext_ramka.enabled = true;
										timesens_for_ext_ramka.startTime=t-dt_new-new_interval;
										//print('startTime=t-dt_new-new_interval');
										//print('startTime = '+t+'-'+dt_new+'-'+new_interval);
										//print('---');
										//*/
									}	
								}
							} else {	//если ротор урутитс€ по часовой стрелке
								
							}
							if( cur_ext_selected && tmp_int_w && !tmp_ext_w ){
								if(cur_ext_selected==1 || cur_ext_selected==4){
									var orient_interpol = new MFRotation();
									orient_interpol[0] = new SFRotation(0, 1, 0, 0);
									orient_interpol[1] = new SFRotation(0, 1, 0, 3.1415);
									orient_interpol[2] = new SFRotation(0, 1, 0, 6.283);
									to_orient_interpol_ext_ramka = orient_interpol;
								} else if(cur_ext_selected==2 || cur_ext_selected==3){
									var orient_interpol = new MFRotation();
									orient_interpol[0] = new SFRotation(0, 1, 0, 0);
									orient_interpol[1] = new SFRotation(0, 1, 0, -3.1415);
									orient_interpol[2] = new SFRotation(0, 1, 0, -6.283);
									to_orient_interpol_ext_ramka = orient_interpol;
								}
								timesens_for_ext_ramka.cycleInterval=last_int_interval;
								timesens_for_ext_ramka.enabled = true;
								timesens_for_ext_ramka.startTime=t;								
							}
							
							Browser.addRoute(timesens_for_ext_ramka, 'fraction_changed', orient_interpol_ext_ramka, 'set_fraction');
							Browser.addRoute(orient_interpol_ext_ramka, 'value_changed', ext_ramka, 'rotation');
								

						}
					}
					function stop_rotation(value,t){
						if(value){
							store_rotation_gyro=new MFString('');
							show_navigation_panel=true;	//скрывает остальные кнопки навигации
							del_colors_ext_arrs();	//обнул€ем цвета стрелок моментов
							del_colors_int_arrs();
							timesens_for_send_rotations.stopTime=t;
							timesens_for_stop_int_ramka.stopTime=t;
							timesens_for_rotor.stopTime=t;
							timesens_for_arr_rotor.stopTime=t;

							timesens_for_int_ramka.cycleInterval=1;
							timesens_for_ext_ramka.cycleInterval=1;
							int_ramka.rotation=new SFRotation(0,1,0,0);
							rotor1.rotation=new SFRotation(0,1,0,0);
							ext_ramka.rotation=new SFRotation(0,1,0,0);

							if(was_start_int_ramka_timesens){
								timesens_for_stop_int_ramka.enabled = false;								
								timesens_for_stop_int_ramka.stopTime = t;								
								Browser.deleteRoute(timesens_for_stop_int_ramka, 'cycleTime', main_gyro_script, 'check_rotation_int');
								was_start_int_ramka_timesens=false;
							}

							timesens_for_send_rotations.enabled = false;
							timesens_for_stop_int_ramka.enabled = false;
							timesens_for_rotor.enabled = false;
							timesens_for_arr_rotor.enabled = false;
							timesens_for_int_ramka.enabled = false;
							timesens_for_ext_ramka.enabled = false;

							Browser.deleteRoute(timesens_for_rotor, 'fraction_changed', orient_interpol_rotor, 'set_fraction');
							Browser.deleteRoute(orient_interpol_rotor, 'value_changed', rotor, 'rotation');

							Browser.deleteRoute(timesens_for_arr_rotor, 'fraction_changed', orient_interpol_arr_rotor, 'set_fraction');	//вращение стрелок ротора
							Browser.deleteRoute(orient_interpol_arr_rotor, 'value_changed', arr_rotor, 'rotation');
						
							
							Browser.deleteRoute(timesens_for_int_ramka, 'fraction_changed', orient_interpol_rotor1, 'set_fraction');
							Browser.deleteRoute(orient_interpol_rotor1, 'value_changed', rotor1, 'rotation');
							Browser.deleteRoute(timesens_for_int_ramka, 'fraction_changed', orient_interpol_int_ramka, 'set_fraction');
							Browser.deleteRoute(orient_interpol_int_ramka, 'value_changed', int_ramka, 'rotation');
							
							Browser.deleteRoute(timesens_for_ext_ramka, 'fraction_changed', orient_interpol_ext_ramka, 'set_fraction');
							Browser.deleteRoute(orient_interpol_ext_ramka, 'value_changed', ext_ramka, 'rotation');
							
							Browser.deleteRoute(timesens_for_send_rotations, 'cycleTime', main_gyro_script, 'send_rotation');
							Browser.deleteRoute(timesens_for_stop_int_ramka, 'cycleTime', main_gyro_script, 'check_rotation_int');

							sw_arr_rotor[0].whichChoice=-1;
							dt=0;
						}
					}
				"
			}
		]
		#дл€ сферических сенсоров, (поворот рамок)
		#ROUTE rol_sens_int_ramka.rotation_changed TO int_ramka.rotation
		#ROUTE rol_sens_int_ramka.rotation_changed TO rotor.rotation
		#ROUTE rol_sens_ext_ramka.rotation_changed TO ext_ramka.rotation

		#маршруты от сенсоров внутренней рамки к скрипту (дл€ выбора точки приложени€)
		ROUTE touchsens_int_ramka1.isOver TO main_gyro_script.int_ramka1_touchsens_act
		ROUTE touchsens_int_ramka1.isActive	TO main_gyro_script.int_ramka1_touchsens_click
		ROUTE touchsens_int_ramka2.isOver TO main_gyro_script.int_ramka2_touchsens_act
		ROUTE touchsens_int_ramka2.isActive	TO main_gyro_script.int_ramka2_touchsens_click		
		ROUTE touchsens_int_ramka3.isOver TO main_gyro_script.int_ramka3_touchsens_act
		ROUTE touchsens_int_ramka3.isActive	TO main_gyro_script.int_ramka3_touchsens_click
		ROUTE touchsens_int_ramka4.isOver TO main_gyro_script.int_ramka4_touchsens_act
		ROUTE touchsens_int_ramka4.isActive	TO main_gyro_script.int_ramka4_touchsens_click

		#маршруты от сенсоров внешней рамки к скрипту (дл€ выбора точки приложени€)
		ROUTE touchsens_ext_ramka1.isOver TO main_gyro_script.ext_ramka1_touchsens_act
		ROUTE touchsens_ext_ramka1.isActive	TO main_gyro_script.ext_ramka1_touchsens_click
		ROUTE touchsens_ext_ramka2.isOver TO main_gyro_script.ext_ramka2_touchsens_act
		ROUTE touchsens_ext_ramka2.isActive	TO main_gyro_script.ext_ramka2_touchsens_click		
		ROUTE touchsens_ext_ramka3.isOver TO main_gyro_script.ext_ramka3_touchsens_act
		ROUTE touchsens_ext_ramka3.isActive	TO main_gyro_script.ext_ramka3_touchsens_click
		ROUTE touchsens_ext_ramka4.isOver TO main_gyro_script.ext_ramka4_touchsens_act
		ROUTE touchsens_ext_ramka4.isActive	TO main_gyro_script.ext_ramka4_touchsens_click

		#маршруты вращени€
		#ROUTE timesens_for_rotor.fraction_changed TO orient_interpol_rotor.set_fraction
		#ROUTE orient_interpol_rotor.value_changed TO rotor.rotation
		#ROUTE timesens_for_int_ramka.fraction_changed TO orient_interpol_rotor1.set_fraction
		#ROUTE orient_interpol_rotor1.value_changed TO rotor1.rotation

		#ROUTE timesens_for_int_ramka.fraction_changed TO orient_interpol_int_ramka.set_fraction	
		#ROUTE orient_interpol_int_ramka.value_changed TO int_ramka.rotation
		#ROUTE timesens_for_ext_ramka.fraction_changed TO orient_interpol_ext_ramka.set_fraction
		#ROUTE orient_interpol_ext_ramka.value_changed TO ext_ramka.rotation

		#от сенсоров на стрелочках моментов внутренней рамки (дл€ мигани€ стрелок)
		ROUTE touchsens_int_ramka1_arrow.isOver	TO main_gyro_script.int_ramka1_arrow_act
		ROUTE touchsens_int_ramka2_arrow.isOver	TO main_gyro_script.int_ramka2_arrow_act
		ROUTE touchsens_int_ramka3_arrow.isOver	TO main_gyro_script.int_ramka3_arrow_act
		ROUTE touchsens_int_ramka4_arrow.isOver	TO main_gyro_script.int_ramka4_arrow_act

		#от сенсоров на стрелочках моментов внутренней рамки (дл€ продолжени€ мигани€ стрелок после клика по ней)
		ROUTE touchsens_int_ramka1_arrow.isActive	TO main_gyro_script.int_ramka1_arrow_click
		ROUTE touchsens_int_ramka2_arrow.isActive	TO main_gyro_script.int_ramka2_arrow_click
		ROUTE touchsens_int_ramka3_arrow.isActive	TO main_gyro_script.int_ramka3_arrow_click
		ROUTE touchsens_int_ramka4_arrow.isActive	TO main_gyro_script.int_ramka4_arrow_click

		#от сенсоров на стрелочках моментов внешней рамки (дл€ мигани€ стрелок)
		ROUTE touchsens_ext_ramka1_arrow.isOver	TO main_gyro_script.ext_ramka1_arrow_act
		ROUTE touchsens_ext_ramka2_arrow.isOver	TO main_gyro_script.ext_ramka2_arrow_act
		ROUTE touchsens_ext_ramka3_arrow.isOver	TO main_gyro_script.ext_ramka3_arrow_act
		ROUTE touchsens_ext_ramka4_arrow.isOver	TO main_gyro_script.ext_ramka4_arrow_act

		#от сенсоров на стрелочках моментов внешней рамки (дл€ продолжени€ мигани€ стрелок после клика по ней)
		ROUTE touchsens_ext_ramka1_arrow.isActive TO main_gyro_script.ext_ramka1_arrow_click
		ROUTE touchsens_ext_ramka2_arrow.isActive TO main_gyro_script.ext_ramka2_arrow_click
		ROUTE touchsens_ext_ramka3_arrow.isActive TO main_gyro_script.ext_ramka3_arrow_click
		ROUTE touchsens_ext_ramka4_arrow.isActive TO main_gyro_script.ext_ramka4_arrow_click

		ROUTE main_gyro_script.extrusion_spin_int_ramka1 TO	extrusion_int_ramka1_arrow.set_spine	#установка spin дл€ удлиннени€ стрелок моментов на внутр. рамке
		ROUTE main_gyro_script.extrusion_spin_int_ramka2 TO	extrusion_int_ramka2_arrow.set_spine
		ROUTE main_gyro_script.extrusion_spin_int_ramka3 TO	extrusion_int_ramka3_arrow.set_spine
		ROUTE main_gyro_script.extrusion_spin_int_ramka4 TO	extrusion_int_ramka4_arrow.set_spine

		ROUTE main_gyro_script.extrusion_spin_ext_ramka1 TO	extrusion_ext_ramka1_arrow.set_spine	#установка spin дл€ удлиннени€ стрелок моментов на внешн. рамке
		ROUTE main_gyro_script.extrusion_spin_ext_ramka2 TO	extrusion_ext_ramka2_arrow.set_spine
		ROUTE main_gyro_script.extrusion_spin_ext_ramka3 TO	extrusion_ext_ramka3_arrow.set_spine
		ROUTE main_gyro_script.extrusion_spin_ext_ramka4 TO	extrusion_ext_ramka4_arrow.set_spine

		ROUTE main_gyro_script.to_orient_interpol_rotor TO orient_interpol_rotor.keyValue			#установка keyValue дл€ вращени€ рамок и ротора
		ROUTE main_gyro_script.to_orient_interpol_rotor1 TO	orient_interpol_rotor1.keyValue
		ROUTE main_gyro_script.to_orient_interpol_arr_rotor	TO orient_interpol_arr_rotor.keyValue
		ROUTE main_gyro_script.to_orient_interpol_int_ramka TO orient_interpol_int_ramka.keyValue
		ROUTE main_gyro_script.to_orient_interpol_ext_ramka TO orient_interpol_ext_ramka.keyValue
		
		ROUTE main_gyro_script.to_arr1_rotor_tex TO	arr1_rotor_tex.url		#смена текстур стрелок ротора
		ROUTE main_gyro_script.to_arr2_rotor_tex TO	arr2_rotor_tex.url

	}
}
DEF	panel Transform	{		   # узел всей панели с интерфейсом, котора€ перед нами снизу
	children [
		Transform {
			children [
				DEF navigation_group Group {
					 children [
						DEF switch_navigation_group Switch	{
							 choice	[Group {children [ 
													   Transform { rotation 1 0 0 1.2 scale 0.06 0.06 0.06 translation -0.2 -21.5 4.9 children [DEF sens_move_y_right TouchSensor {enabled	TRUE} Shape { appearance Appearance { material Material {diffuseColor 0 0 0} textureTransform TextureTransform { scale 1 1 } texture	ImageTexture { url	["textures/z_right_rotation_arrow.png"] repeatS	FALSE repeatT	FALSE}}geometry IndexedFaceSet	{coord Coordinate {point [0 0 0, 0.4 0 0, 0.4 0.4 0, 0 0.4 0]} coordIndex [0 1 2 3 -1]}}]} 
													   Transform { rotation 1 0 0 1.2 scale 0.06 0.06 0.06 translation 0.175 -21.5 4.9 children [DEF sens_move_y_left TouchSensor {enabled	TRUE} Shape { appearance Appearance { material Material {diffuseColor 0 0 0} textureTransform TextureTransform { scale 1 1 } texture	ImageTexture { url	["textures/z_left_rotation_arrow.png"] repeatS	FALSE repeatT	FALSE}}geometry IndexedFaceSet	{coord Coordinate {point [0 0 0, 0.4 0 0, 0.4 0.4 0, 0 0.4 0]} coordIndex [0 1 2 3 -1]}}]} 

													   Transform { rotation 1 0 0 1.2 scale 0.06 0.06 0.06 translation -0.2 -21.538 4.8 children [DEF sens_move_x_right TouchSensor {enabled	TRUE} Shape { appearance Appearance { material Material {diffuseColor 0 0 0} textureTransform TextureTransform { scale 1 1 } texture	ImageTexture { url	["textures/y_right_rotation_arrow.png"] repeatS	FALSE repeatT	FALSE}}geometry IndexedFaceSet	{coord Coordinate {point [0 0 0, 0.4 0 0, 0.4 0.4 0, 0 0.4 0]} coordIndex [0 1 2 3 -1]}}]} 
													   Transform { rotation 1 0 0 1.2 scale 0.06 0.06 0.06 translation 0.175 -21.538 4.8 children [DEF sens_move_x_left TouchSensor {enabled	TRUE} Shape { appearance Appearance { material Material {diffuseColor 0 0 0} textureTransform TextureTransform { scale 1 1 } texture	ImageTexture { url	["textures/y_left_rotation_arrow.png"] repeatS	FALSE repeatT	FALSE}}geometry IndexedFaceSet	{coord Coordinate {point [0 0 0, 0.4 0 0, 0.4 0.4 0, 0 0.4 0]} coordIndex [0 1 2 3 -1]}}]} 

													   Transform { rotation 1 0 0 1.2 scale 0.06 0.06 0.06 translation 0.07 -21.485 4.9825 children [DEF sens_delext_moment TouchSensor {enabled	TRUE} Shape { appearance Appearance { material Material {diffuseColor 0 0 0} textureTransform TextureTransform { scale 1 1 } texture	ImageTexture { url	["textures/del_ext_mom.png"] repeatS	FALSE repeatT	FALSE}}geometry IndexedFaceSet	{coord Coordinate {point [0 0 0, 0.4 0 0, 0.4 0.4 0, 0 0.4 0]} coordIndex [0 1 2 3 -1]}}]} 
													   Transform { rotation 1 0 0 1.2 scale 0.06 0.06 0.06 translation 0.10 -21.485 4.9825 children [DEF sens_delint_moment TouchSensor {enabled	TRUE} Shape { appearance Appearance { material Material {diffuseColor 0 0 0} textureTransform TextureTransform { scale 1 1 } texture	ImageTexture { url	["textures/del_int_mom.png"] repeatS	FALSE repeatT	FALSE}}geometry IndexedFaceSet	{coord Coordinate {point [0 0 0, 0.4 0 0, 0.4 0.4 0, 0 0.4 0]} coordIndex [0 1 2 3 -1]}}]} 
													 ]
											}
							 ]
							 whichChoice 0
						}
						 
						
					]
				}
				Group {
					children [
						DEF	switch_panel_moments Switch	{
							choice [ Group { children [
										Transform { rotation 1 0 0 1.2 scale 0.06 0.06 0.06 translation 0.139 -21.485 4.9825 children [DEF sens_moment_incr TouchSensor {enabled	TRUE} Shape { appearance Appearance { material Material {diffuseColor 0 0 0} textureTransform TextureTransform { scale 1 1 } texture	ImageTexture { url	["textures/moment_increase.png"] repeatS	FALSE repeatT	FALSE}}geometry IndexedFaceSet	{coord Coordinate {point [0 0 0, 0.4 0 0, 0.4 0.4 0, 0 0.4 0]} coordIndex [0 1 2 3 -1]}}]} 
										Transform { rotation 1 0 0 1.2 scale 0.06 0.06 0.06 translation 0.169 -21.485 4.9825 children [DEF sens_moment_decr TouchSensor {enabled	TRUE} Shape { appearance Appearance { material Material {diffuseColor 0 0 0} textureTransform TextureTransform { scale 1 1 } texture	ImageTexture { url	["textures/moment_decrease.png"] repeatS	FALSE repeatT	FALSE}}geometry IndexedFaceSet	{coord Coordinate {point [0 0 0, 0.4 0 0, 0.4 0.4 0, 0 0.4 0]} coordIndex [0 1 2 3 -1]}}]} 
									]
								}
							]
							whichChoice	-1
						}
					]
				}
			]
		}
	]
}
DEF	rotation_gyro_z Transform {
	rotation 0 0 1 0
	children [
		DEF rotation_gyro_x Transform {
			rotation 1 0 0 0
			children [
				DEF	rotation_gyro_y Transform {
					rotation 0 1 0 0
					children [						
						DEF copy_gyroskop gyroskop {}											
					]
				}
			]
		}
	]
}
DEF	orient_interpol_rotation OrientationInterpolator	{
	key	[0, 0.5, 1]
	
}
DEF	orient_interpol_rotation_1 OrientationInterpolator	{
	key	[0, 0.5, 1]
	
}
DEF	orient_interpol_rotation_2 OrientationInterpolator	{
	key	[0, 0.5, 1]
	
}
DEF	timesens_for_rotate TimeSensor {
	enabled	FALSE
	loop TRUE
	cycleInterval 4
}
DEF	timesens_for_scan_js_values TimeSensor {
	loop TRUE
	cycleInterval 0.25
}
DEF	Main_script Script {
	eventIn	SFBool move_x_right			#вращение объекта вправо вокруг оси X
	eventIn	SFBool move_x_left			#вращение объекта влево вокруг оси X		 	
	eventIn	SFBool move_y_right			#вращение объекта вправо вокруг оси Y
	eventIn	SFBool move_y_left1			#вращение объекта влево вокруг оси Y
	eventIn	SFBool move_y_right1		#вращение объекта вправо вокруг оси Y
	eventIn	SFBool move_y_left			#вращение объекта влево вокруг оси Y
	eventIn	SFBool move_z_right		#вращение объекта по часовой стрелке вокруг оси Z
	eventIn	SFBool move_z_left		#вращение объекта против часовой стрелки вокруг оси Z

	eventIn	SFBool hide_buttons_moment	#событие дл€ скрыти€ кнопок увел. и уменьш. моментов
	eventIn	SFBool show_buttons_moment	#событие дл€ показа кнопок увел. и уменьш. моментов

	eventIn	SFBool hide_buttons_navigation	#событие дл€ скрыти€ кнопок навигации
	eventIn	SFBool show_buttons_navigation	#событие дл€ показа кнопок навигации

	eventIn	SFString value_int_moment_from_proto	#значение момента по внутр. рамке в прототипе
	eventIn	SFString value_ext_moment_from_proto	#значение момента по внешн. рамке в прототипе
	eventIn	SFTime check_js_values			#событие провер€ет переменные JS и в зависимости от них выставл€ет параметры в прототипе
	eventIn	SFRotation value_int_rotation_from_proto	#значение угла поворота внутренней рамки в прототипе
	eventIn	SFRotation value_ext_rotation_from_proto

	eventOut MFRotation	for_interpol_rotation
	eventOut MFRotation	for_interpol_rotation_1
	eventOut MFRotation	for_interpol_rotation_2

	eventOut SFInt32 panel_moments_choice	#событие управл€ет видимостью кнопок увел. и уменьш. моментов
	eventOut SFInt32 panel_navigation_choice	#событие управл€ет видимостью кнопок навигации
	eventOut SFString value_int_moment_from_js	#событие устанавливает конкретный момент на внутр. рамке в опред. значение
	eventOut SFString value_ext_moment_from_js	#событие устанавливает конкретный момент на внешн. рамке в опред. значение
	eventOut MFString params_rotation_gyro #событие отправл€ет параметры движени€ рамок в прототип и одновременно инициализирует запуск движени€
	eventOut SFBool	stop_rotation_gyro	#событие останавливает вращение прототипа

	field SFNode orient_interpol_rotation USE orient_interpol_rotation		#поворот исслед.объекта в оси Y
	#field SFNode orient_interpol_rotation_1 USE orient_interpol_rotation_1	#поворот исслед.объекта в оси X
	#field SFNode orient_interpol_rotation_2 USE orient_interpol_rotation_2	#поворот исслед.объекта в оси Z
	
	field MFNode Main_script USE Main_script	
	field SFNode timesens_for_rotate USE timesens_for_rotate
	field SFNode copy_gyroskop USE copy_gyroskop
	field MFNode switch_panel_moments USE switch_panel_moments	#кнопки управлени€ моментами (панель управлени€)
	
	field SFNode rotation_gyro_z USE rotation_gyro_z
	field SFNode rotation_gyro_y USE rotation_gyro_y
	field SFNode rotation_gyro_x USE rotation_gyro_x
	
	field MFRotation obj_rot []		  #объект дл€ формировани€ KeyValue дл€ orient_interpol_rotation
	field MFRotation obj_rot1 []	  #объект дл€ формировани€ KeyValue дл€ orient_interpol_rotation1
	field MFRotation obj_rot2 []	  #объект дл€ формировани€ KeyValue дл€ orient_interpol_rotation2

	field SFFloat dt 0		#длительность активности предыдущего действи€	поворота вокруг оси Y
	field SFFloat dt_ 0		#длительность активности предыдущего действи€	поворота вокруг оси Y
	field SFFloat dt1 0		#длительность активности предыдущего действи€ поворота вокруг оси X
	field SFFloat dt2 0		#длительность активности действи€ поворота вокруг оси Z

	field SFRotation x_axis_tmp 1 0 0 0		#переменна€ дл€ хранени€ значени€ угла на который был произведЄн поворот по оси X
	field SFRotation y_axis_tmp 0 1 0 0		#переменна€ дл€ хранени€ значени€ угла на который был произведЄн поворот по оси Y
	field SFRotation y_axis_tmp1 0 1 0 0	#переменна€ дл€ хранени€ значени€ угла на который был произведЄн поворот по оси Y
	field SFRotation z_axis_tmp 0 0 1 0		#переменна€ дл€ хранени€ значени€ угла на который был произведЄн поворот по оси Z

	field SFInt32 d_rot 0	#переменна€ указывающа€ направление вращени€ вокруг оси Y предыдущего клика (действи€)
	field SFInt32 d_rot_ 0	#переменна€ указывающа€ направление вращени€ вокруг оси Y предыдущего клика (действи€)
	field SFInt32 d_rot1 0	#переменна€ указывающа€ направление вращени€ вокруг оси X предыдущего клика (действи€)
	field SFInt32 d_rot2 0  #переменна€ указывающа€ направление вращени€ вокруг оси Z предыдущего клика (действи€)

	#читаетс€ JS-ом через опред. промежутки времени
	field SFBool was_refresh_ecma_int FALSE		#флаг означающий, что ECMA обновил значени€ в переменных proto_int_moment
	field SFBool was_refresh_ecma_ext FALSE		#флаг означающий, что ECMA обновил значени€ в переменных proto_ext_moment
	field SFString proto_int_moment "0,0"   #значение момента по внутренней рамке в прототипе и номер	момента по внутренней рамке от (1 до 4)
											#первое число - номер момента (от 1 до 4), второе число - величина момента
	field SFString proto_ext_moment "0,0" #значение момента по внешней рамке в прототипе момента по внешней рамке от (1 до 4)
	field SFRotation proto_int_rotation 0 0 0 0		#значение угла поворота внутренней рамки
	field SFRotation proto_ext_rotation 0 0 0 0

	#читаетс€ ECMAscript-ом через опред. промежутки времени
	field SFBool was_refresh_js_int FALSE		#флаг означающий, что JS обновил значени€ в переменных js_int_moment
	field SFBool was_refresh_js_ext FALSE		#флаг означающий, что JS обновил значени€ в переменных js_ext_moment
	field SFBool was_stop FALSE				#флаг означающий, что JS запросил остановку движени€ модели
	field SFString js_int_moment "0,0"		#какой из моментов по внутренней рамке выбрать и какой величины (приходит из JS)
											#первое число - номер момента (от 1 до 4), второе число - величина момента
	field SFString js_ext_moment "0,0"		#какой из моментов по внешней рамке выбрать и какой величины (приходит из JS)
	#заполн€етс€ JS-ом, параметры дл€ вращени€
	field SFBool was_set_params_rotation_gyro FALSE #флаг означающий, что были установлены параметры вращени€ в переменную и можно приступать к вращению
	field MFString js_params_rotation_gyro ["0,0","0,0","0"]	#параметры вращени€ рамок гироскопа по протоколу
	#первый элемент 1-е значение - направление вращени€ внутренней рамки (0 против часовой стрелки, 1 - по часовой стрелке)
	#				2-е значение - значение cycleinterval дл€ timesensor-а внутренней рамки
	#второй элемент 1-е значение - направление вращени€ внешней рамки (0 против часовой стрелки, 1 - по часовой стрелке)
	#				2-е значение - значение cycleinterval дл€ timesensor-а внешней рамки
	#третий элемент 1-е значение - направление вращени€ ротора (0 против часовой стрелки, 1 - по часовой стрелке)
	field SFBool was_stoped FALSE			#был ли произведЄн останов вращени€ (читает JS) это нужно дл€ того, чтобы прервать цикличный вывоз JS-функции get_rotation_ramki()

	mustEvaluate TRUE
	directOutput TRUE
	url	"vrmlscript:
	function move_y_right (value, t){	// вращение внутренней рамки по оси Y (против часовой)
		if (value){
			
			var orient_interpol = new MFRotation();
			orient_interpol[0] = new SFRotation(0, 1, 0, 0);
			orient_interpol[1] = new SFRotation(0, 1, 0, 3.1415);
			orient_interpol[2] = new SFRotation(0, 1, 0, 6.283);
			
			for_interpol_rotation = orient_interpol;
		
			Browser.addRoute(timesens_for_rotate, 'fraction_changed', orient_interpol_rotation, 'set_fraction');
			Browser.addRoute(orient_interpol_rotation, 'value_changed', copy_gyroskop, 'int_ramka_corner_proto');
			if(d_rot==1){timesens_for_rotate.startTime = t - dt;} 
			else { // если предыдущее направление вращени€ было влево, то корректируем dt
				while((dt-timesens_for_rotate.cycleInterval)>0){dt=dt-timesens_for_rotate.cycleInterval;} // пока dt превышает длительность цикла TimeSensor-а, уменьшаем его на величину равную длительности цикла, кратную количеству превышений
				timesens_for_rotate.startTime = t + dt - timesens_for_rotate.cycleInterval ; 
			}			
			rotation_gyro_x.rotation.angle = x_axis_tmp.angle;
			timesens_for_rotate.enabled = true;			
		}
		else {			
			dt = t - timesens_for_rotate.startTime;		
			d_rot = 1; // запоминаем направление вращени€ вправо
			y_axis_tmp = rotation_gyro_y.rotation;		
			timesens_for_rotate.enabled = false;
			
			Browser.deleteRoute(timesens_for_rotate, 'fraction_changed', orient_interpol_rotation, 'set_fraction');
			Browser.deleteRoute(orient_interpol_rotation, 'value_changed', copy_gyroskop, 'int_ramka_corner_proto');

		}
	}
	function move_y_left (value, t){ // вращение внутренней рамки по оси Y (по часовой)
		if (value){
						
			var orient_interpol = new MFRotation();			
			orient_interpol[0] = new SFRotation(0, 1, 0, 6.283);
			orient_interpol[1] = new SFRotation(0, 1, 0, 3.1415);
			orient_interpol[2] = new SFRotation(0, 1, 0, 0);
			
			for_interpol_rotation = orient_interpol;
		
			Browser.addRoute(timesens_for_rotate, 'fraction_changed', orient_interpol_rotation, 'set_fraction');
			Browser.addRoute(orient_interpol_rotation, 'value_changed', copy_gyroskop, 'int_ramka_corner_proto');
			if(d_rot==2){timesens_for_rotate.startTime = t - dt;} 
			else { // если предыдущее направление вращени€ было вправо, то корректируем dt
				while((dt-timesens_for_rotate.cycleInterval)>0){dt=dt-timesens_for_rotate.cycleInterval;} 
				timesens_for_rotate.startTime = t + dt - timesens_for_rotate.cycleInterval;
			}
			rotation_gyro_x.rotation.angle = x_axis_tmp.angle;			
			timesens_for_rotate.enabled = true;			
		}
		else {		
			dt = t - timesens_for_rotate.startTime;					
			d_rot = 2; // запоминаем направление вращени€ влево
			y_axis_tmp = rotation_gyro_y.rotation;			
			timesens_for_rotate.enabled = false;
			
			Browser.deleteRoute(timesens_for_rotate, 'fraction_changed', orient_interpol_rotation, 'set_fraction');
			Browser.deleteRoute(orient_interpol_rotation, 'value_changed', copy_gyroskop, 'int_ramka_corner_proto');
		}
	}

	function move_y_left1 (value, t){	// вращение внешней рамки по оси Y (против часовой)
		if (value){
			
			var orient_interpol = new MFRotation();
			orient_interpol[0] = new SFRotation(0, 1, 0, 0);
			orient_interpol[1] = new SFRotation(0, 1, 0, 3.1415);
			orient_interpol[2] = new SFRotation(0, 1, 0, 6.283);
			
			for_interpol_rotation = orient_interpol;
		
			Browser.addRoute(timesens_for_rotate, 'fraction_changed', orient_interpol_rotation, 'set_fraction');
			Browser.addRoute(orient_interpol_rotation, 'value_changed', copy_gyroskop, 'ext_ramka_corner_proto');
			if(d_rot_==1){timesens_for_rotate.startTime = t - dt_;} 
			else { // если предыдущее направление вращени€ было влево, то корректируем dt_
				while((dt_-timesens_for_rotate.cycleInterval)>0){dt_=dt_-timesens_for_rotate.cycleInterval;} // пока dt превышает длительность цикла TimeSensor-а, уменьшаем его на величину равную длительности цикла, кратную количеству превышений
				timesens_for_rotate.startTime = t + dt_ - timesens_for_rotate.cycleInterval ; 
			}			
			rotation_gyro_x.rotation.angle = x_axis_tmp.angle;
			timesens_for_rotate.enabled = true;			
		}
		else {			
			dt_ = t - timesens_for_rotate.startTime;		
			d_rot_ = 1; // запоминаем направление вращени€ вправо
			y_axis_tmp1 = rotation_gyro_y.rotation;		
			timesens_for_rotate.enabled = false;
			
			Browser.deleteRoute(timesens_for_rotate, 'fraction_changed', orient_interpol_rotation, 'set_fraction');
			Browser.deleteRoute(orient_interpol_rotation, 'value_changed', copy_gyroskop, 'ext_ramka_corner_proto');

		}
	}
	function move_y_right1 (value, t){ // вращение внешней рамки по оси Y (по часовой)
		if (value){
						
			var orient_interpol = new MFRotation();			
			orient_interpol[0] = new SFRotation(0, 1, 0, 6.283);
			orient_interpol[1] = new SFRotation(0, 1, 0, 3.1415);
			orient_interpol[2] = new SFRotation(0, 1, 0, 0);
			
			for_interpol_rotation = orient_interpol;
		
			Browser.addRoute(timesens_for_rotate, 'fraction_changed', orient_interpol_rotation, 'set_fraction');
			Browser.addRoute(orient_interpol_rotation, 'value_changed', copy_gyroskop, 'ext_ramka_corner_proto');
			if(d_rot_==2){timesens_for_rotate.startTime = t - dt_;} 
			else { // если предыдущее направление вращени€ было вправо, то корректируем dt_
				while((dt_-timesens_for_rotate.cycleInterval)>0){dt_=dt_-timesens_for_rotate.cycleInterval;} 
				timesens_for_rotate.startTime = t + dt_ - timesens_for_rotate.cycleInterval;
			}
			rotation_gyro_x.rotation.angle = x_axis_tmp.angle;			
			timesens_for_rotate.enabled = true;			
		}
		else {		
			dt_ = t - timesens_for_rotate.startTime;					
			d_rot_ = 2; // запоминаем направление вращени€ влево
			y_axis_tmp1 = rotation_gyro_y.rotation;			
			timesens_for_rotate.enabled = false;
			
			Browser.deleteRoute(timesens_for_rotate, 'fraction_changed', orient_interpol_rotation, 'set_fraction');
			Browser.deleteRoute(orient_interpol_rotation, 'value_changed', copy_gyroskop, 'ext_ramka_corner_proto');
		}
	}
	function hide_buttons_moment(value,t){	//отсылает событие в switch, чтобы скрыть кнопочки с моментами
		panel_moments_choice=-1;
	}
	function show_buttons_moment(value,t){	//отсылает событие в switch, чтобы показать кнопочки с моментами
		panel_moments_choice=0;
	}
	function hide_buttons_navigation(value,t){	//отсылает событие в switch, чтобы скрыть кнопки навигации
		panel_navigation_choice=-1;
	}
	function show_buttons_navigation(value,t){	//отсылает событие в switch, чтобы показать кнопки навигации
		panel_navigation_choice=0;
	}
	function value_int_moment_from_proto(value,t){	//заносит в скрипт пришедшие значени€ из прототипа (дл€ JS)
		was_refresh_ecma_int=true;
		proto_int_moment=value;
	}
	function value_ext_moment_from_proto(value,t){	//заносит в скрипт пришедшие значени€ из прототипа (дл€ JS)
		was_refresh_ecma_ext=true;
		proto_ext_moment=value;
	}
	function check_js_values(value,t){		//посылает в прототип обновлЄнные js-ом переменные
		if(was_refresh_js_int){	//если переменна€ js_int_moment JS были обновлены
			value_int_moment_from_js=js_int_moment;
			was_refresh_js_int=false;
		}
		if(was_refresh_js_ext){	//если переменна€ js_ext_moment JS были обновлены
			value_ext_moment_from_js=js_ext_moment;
			was_refresh_js_ext=false;
		}
		if(was_set_params_rotation_gyro){	//инициирует начало движени€, если были установлены параметры дл€ вращени€ рамок гироскопа
			//print(js_params_rotation_gyro[0]);
			//print(js_params_rotation_gyro[1]);
			was_set_params_rotation_gyro=false;
			was_stoped=false;
			was_stop=false;
			params_rotation_gyro=js_params_rotation_gyro;
		}
		if(was_stop){
			was_stop=false;
			was_stoped=true;
			stop_rotation_gyro=true;
		}
	}
	function value_int_rotation_from_proto(value,t){	//заполн€ет переменные дл€ JS значени€ми углов поворота внутренней рамки
		proto_int_rotation = value;
	}
	function value_ext_rotation_from_proto(value,t){	//заполн€ет переменные дл€ JS значени€ми углов поворота внешней рамки
		proto_ext_rotation = value;
	}
	"
}
ROUTE sens_move_y_left.isActive TO Main_script.move_y_left		   #движение против часовой стрелки по оси Y
ROUTE sens_move_y_right.isActive TO Main_script.move_y_right

ROUTE sens_move_x_left.isActive TO Main_script.move_y_left1		   #движение против часовой стрелки по оси X
ROUTE sens_move_x_right.isActive TO Main_script.move_y_right1

ROUTE sens_delext_moment.isActive TO copy_gyroskop.clear_ext_moment	#очищает внешнюю рамку от моментов
ROUTE sens_delint_moment.isActive TO copy_gyroskop.clear_int_moment	#очищает внутреннюю рамку от моментов

ROUTE Main_script.for_interpol_rotation	TO orient_interpol_rotation.keyValue
ROUTE Main_script.for_interpol_rotation_1	TO orient_interpol_rotation_1.keyValue
ROUTE Main_script.for_interpol_rotation_2	TO orient_interpol_rotation_2.keyValue

ROUTE sens_moment_decr.isActive	TO copy_gyroskop.moment_decr	#событи€ в прототип увеличение и меньшение выбранного момента
ROUTE sens_moment_incr.isActive	TO copy_gyroskop.moment_incr
ROUTE copy_gyroskop.hide_moments_panel TO Main_script.hide_buttons_moment #из прототипа команда скрыть/показать кнопки
ROUTE copy_gyroskop.show_moments_panel TO Main_script.show_buttons_moment

ROUTE Main_script.panel_moments_choice TO switch_panel_moments.whichChoice #событие пр€мо в Switch (плашки с + - моментов)

ROUTE copy_gyroskop.hide_navigation_panel TO Main_script.hide_buttons_navigation #из прототипа команда скрыть/показать кнопки
ROUTE copy_gyroskop.show_navigation_panel TO Main_script.show_buttons_navigation
ROUTE Main_script.panel_navigation_choice TO switch_navigation_group.whichChoice #событие пр€мо в Switch


ROUTE copy_gyroskop.value_int_moment TO	Main_script.value_int_moment_from_proto		#перевод значени€ моментов из прототипа во внешний скрипт (потом читает JS)
ROUTE copy_gyroskop.value_ext_moment TO	Main_script.value_ext_moment_from_proto

ROUTE copy_gyroskop.value_int_rotation TO Main_script.value_int_rotation_from_proto	#перевод значени€ угла поворота из прототипа во внешний скрипт (потом читает JS)
ROUTE copy_gyroskop.value_ext_rotation TO Main_script.value_ext_rotation_from_proto

ROUTE Main_script.value_int_moment_from_js TO copy_gyroskop.num_int_moment_select	#перевод значений моментов и номеров рамок в прототип (которые передал JS) 
ROUTE Main_script.value_ext_moment_from_js TO copy_gyroskop.num_ext_moment_select

ROUTE Main_script.params_rotation_gyro TO copy_gyroskop.js_params_rotation_gyro		#перевод параметров движени€ в прототип и инициализаци€ движени€
ROUTE Main_script.stop_rotation_gyro TO	copy_gyroskop.stop_rotation				#остановка вращени€ модели

ROUTE timesens_for_scan_js_values.cycleTime	TO Main_script.check_js_values	#дл€ посто€нного сканирвани€ JS-переменных